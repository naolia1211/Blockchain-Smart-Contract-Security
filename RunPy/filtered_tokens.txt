['function', 'getRamdon', 'private', 'view', 'returns', 'uint', '{', 'bytes32', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'addressArray', '.', 'length', ';', 'i', '+', '+', '{', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'addressArray', '[', 'i', ']', ';', '}', 'uint', 'index', '=', 'uint', 'ramdon', '%', 'addressArray', '.', 'length', ';', 'return', 'index', ';', '}']
['function', '_rand', 'private', 'view', 'returns', 'uint256', '{', 'uint256', 'rand', '=', 'uint256', 'sha3', 'now', 'block', '.', 'number', 'randSeed', ';', 'return', 'rand', '%', '=', '10', '*', '*', '6', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'public', 'payable', '{', '}', 'function', 'wager', 'isOpenToPublic', 'onlyRealPeople', 'payable', 'public', '{', 'require', 'msg', '.', 'value', '=', '=', 'betLimit', ';', 'require', 'wagers', '[', 'msg', '.', 'sender', ']', '=', '=', '0', ';', 'timestamps', '[', 'msg', '.', 'sender', ']', '=', 'block', '.', 'number', ';', 'wagers', '[', 'msg', '.', 'sender', ']', '=', 'msg', '.', 'value', ';', 'emit', 'Wager', 'msg', '.', 'value', 'msg', '.', 'sender', ';', '}', 'function', 'play', 'isOpenToPublic', 'onlyRealPeople', 'onlyPlayers', 'public', '{', 'uint256', 'blockNumber', '=', 'timestamps', '[', 'msg', '.', 'sender', ']', ';', 'if', 'blockNumber', '<', 'block', '.', 'number', '{', 'timestamps', '[', 'msg', '.', 'sender', ']', '=', '0', ';', 'wagers', '[', 'msg', '.', 'sender', ']', '=', '0', ';', 'uint256', 'winningNumber', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'blockhash', 'blockNumber', 'msg', '.', 'sender', '%', 'difficulty', '+', '1', ';', 'if', 'winningNumber', '=', '=', 'difficulty', '/', '2', '{', 'payout', 'msg', '.', 'sender', ';', '}', 'else', '{', 'loseWager', 'betLimit', '/', '2', ';', '}', '}', 'else', '{', 'revert', ';', '}', '}', 'function', 'donate', 'isOpenToPublic', 'public', 'payable', '{', 'donateToWhale', 'msg', '.', 'value', ';', '}', 'function', 'payout', 'address', 'winner', 'internal', '{', 'uint256', 'ethToTransfer', '=', 'address', 'this', '.', 'balance', '/', '2', ';', 'winner', '.', 'transfer', 'ethToTransfer', ';', 'emit', 'Win', 'ethToTransfer', 'winner', ';', '}', 'function', 'donateToWhale', 'uint256', 'amount', 'internal', '{', 'whale', '.', 'call', '.', 'value', 'amount', 'bytes4', 'keccak256', 'donate', ';', 'totalDonated', '+', '=', 'amount', ';', 'emit', 'Donate', 'amount', 'whale', 'msg', '.', 'sender', ';', '}', 'function', 'loseWager', 'uint256', 'amount', 'internal', '{', 'whale', '.', 'call', '.', 'value', 'amount', 'bytes4', 'keccak256', 'donate', ';', 'totalDonated', '+', '=', 'amount', ';', 'emit', 'Lose', 'amount', 'msg', '.', 'sender', ';', '}', 'function', 'ethBalance', 'public', 'view', 'returns', 'uint256', '{', 'return', 'address', 'this', '.', 'balance', ';', '}', 'function', 'currentDifficulty', 'public', 'view', 'returns', 'uint256', '{', 'return', 'difficulty', ';', '}', 'function', 'currentBetLimit', 'public', 'view', 'returns', 'uint256', '{', 'return', 'betLimit', ';', '}', 'function', 'hasPlayerWagered', 'address', 'player', 'public', 'view', 'returns', 'bool', '{', 'if', 'wagers', '[', 'player', ']', '>', '0', '{', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', 'function', 'winnersPot', 'public', 'view', 'returns', 'uint256', '{', 'return', 'address', 'this', '.', 'balance', '/', '2', ';', '}', 'function', 'transferAnyERC20Token', 'address', 'tokenAddress', 'address', 'tokenOwner', 'uint', 'tokens', 'public', 'onlyOwner', 'returns', 'bool', 'success', '{', 'return', 'ERC20Interface', 'tokenAddress', '.', 'transfer', 'tokenOwner', 'tokens', ';', '}', '}']
['function', 'public', 'payable', '{', '}', 'function', 'wager', 'isOpenToPublic', 'onlyRealPeople', 'payable', 'public', '{', 'require', 'msg', '.', 'value', '=', '=', 'betLimit', ';', 'timestamps', '[', 'msg', '.', 'sender', ']', '=', 'block', '.', 'number', ';', 'wagers', '[', 'msg', '.', 'sender', ']', '=', 'msg', '.', 'value', ';', 'emit', 'Wager', 'msg', '.', 'value', 'msg', '.', 'sender', ';', '}', 'function', 'play', 'isOpenToPublic', 'onlyRealPeople', 'onlyPlayers', 'public', '{', 'uint256', 'blockNumber', '=', 'timestamps', '[', 'msg', '.', 'sender', ']', ';', 'if', 'blockNumber', '<', 'block', '.', 'number', '{', 'timestamps', '[', 'msg', '.', 'sender', ']', '=', '0', ';', 'wagers', '[', 'msg', '.', 'sender', ']', '=', '0', ';', 'uint256', 'winningNumber', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'blockhash', 'blockNumber', 'msg', '.', 'sender', '%', 'difficulty', '+', '1', ';', 'if', 'winningNumber', '=', '=', 'difficulty', '/', '2', '{', 'payout', 'msg', '.', 'sender', ';', '}', 'else', '{', 'loseWager', 'betLimit', '/', '2', ';', '}', '}', 'else', '{', 'revert', ';', '}', '}', 'function', 'donate', 'isOpenToPublic', 'public', 'payable', '{', 'donateToWhale', 'msg', '.', 'value', ';', '}', 'function', 'payout', 'address', 'winner', 'internal', '{', 'uint256', 'ethToTransfer', '=', 'address', 'this', '.', 'balance', '/', '2', ';', 'winner', '.', 'transfer', 'ethToTransfer', ';', 'emit', 'Win', 'ethToTransfer', 'winner', ';', '}', 'function', 'donateToWhale', 'uint256', 'amount', 'internal', '{', 'whale', '.', 'call', '.', 'value', 'amount', 'bytes4', 'keccak256', 'donate', ';', 'totalDonated', '+', '=', 'amount', ';', 'emit', 'Donate', 'amount', 'whale', 'msg', '.', 'sender', ';', '}', 'function', 'loseWager', 'uint256', 'amount', 'internal', '{', 'whale', '.', 'call', '.', 'value', 'amount', 'bytes4', 'keccak256', 'donate', ';', 'totalDonated', '+', '=', 'amount', ';', 'emit', 'Lose', 'amount', 'msg', '.', 'sender', ';', '}', 'function', 'ethBalance', 'public', 'view', 'returns', 'uint256', '{', 'return', 'address', 'this', '.', 'balance', ';', '}', 'function', 'currentDifficulty', 'public', 'view', 'returns', 'uint256', '{', 'return', 'difficulty', ';', '}', 'function', 'currentBetLimit', 'public', 'view', 'returns', 'uint256', '{', 'return', 'betLimit', ';', '}', 'function', 'hasPlayerWagered', 'address', 'player', 'public', 'view', 'returns', 'bool', '{', 'if', 'wagers', '[', 'player', ']', '>', '0', '{', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}', 'function', 'winnersPot', 'public', 'view', 'returns', 'uint256', '{', 'return', 'address', 'this', '.', 'balance', '/', '2', ';', '}', 'function', 'transferAnyERC20Token', 'address', 'tokenAddress', 'address', 'tokenOwner', 'uint', 'tokens', 'public', 'onlyOwner', 'returns', 'bool', 'success', '{', 'return', 'ERC20Interface', 'tokenAddress', '.', 'transfer', 'tokenOwner', 'tokens', ';', '}', '}']
['function', 'packageOfferInfo', 'address', 'siteOwner', 'uint256', 'amount', 'private', 'view', 'returns', 'FMAPDatasets', '.', 'OfferInfo', '{', 'FMAPDatasets', '.', 'OfferInfo', 'memory', 'offerInfo', ';', 'offerInfo', '.', 'playerAddress', '=', 'msg', '.', 'sender', ';', 'offerInfo', '.', 'offerAmount', '=', 'amount', ';', 'offerInfo', '.', 'affiliateAddress', '=', 'players_', '[', 'msg', '.', 'sender', ']', '.', 'lastAffiliate', ';', 'offerInfo', '.', 'siteOwner', '=', 'siteOwner', ';', 'offerInfo', '.', 'timestamp', '=', 'block', '.', 'timestamp', ';', 'offerInfo', '.', 'interesting', '=', 'true', ';', 'return', 'offerInfo', ';', '}']
['function', 'calcAndSetPlayerTotalCanAccept', 'address', 'pAddr', 'uint256', 'acceptAmount', 'private', '{', 'uint256', '_now', '=', 'block', '.', 'timestamp', ';', 'uint256', '_latestCalced', '=', 'players_', '[', 'pAddr', ']', '.', 'lastCalcOfferNo', ';', 'uint256', '_acceptedAmount', '=', 'acceptAmount', ';', 'while', '_latestCalced', '<', 'players_', '[', 'pAddr', ']', '.', 'offeredCount', '{', 'FMAPDatasets', '.', 'OfferInfo', 'storage', 'oi', '=', 'playerOfferOrders_', '[', 'pAddr', ']', '[', '_latestCalced', ']', ';', 'uint256', '_ts', '=', '_now', '.', 'sub', 'oi', '.', 'timestamp', ';', 'if', 'oi', '.', 'interesting', '=', '=', 'true', '{', 'if', '_ts', '>', '=', 'maxInterestTime_', '{', 'uint256', 'interest1', '=', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '.', 'mul', '1', '.', 'div', '1000', '.', 'mul', 'maxInterestTime_', '/', 'interestPeriod_', ';', 'players_', '[', 'pAddr', ']', '.', 'canAccept', '=', 'players_', '[', 'pAddr', ']', '.', 'canAccept', '.', 'add', 'oi', '.', 'offerAmount', '.', 'add', 'interest1', ';', 'oi', '.', 'interesting', '=', 'false', ';', 'if', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '>', '_acceptedAmount', '{', '_acceptedAmount', '=', '0', ';', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'acceptAmount', '.', 'add', '_acceptedAmount', ';', '}', 'else', '{', '_acceptedAmount', '=', '_acceptedAmount', '.', 'sub', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', ';', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'offerAmount', ';', '}', '}', 'else', 'if', '_acceptedAmount', '>', '0', '{', 'if', '_acceptedAmount', '<', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '{', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'acceptAmount', '.', 'add', '_acceptedAmount', ';', '_acceptedAmount', '=', '0', ';', '}', 'else', '{', 'uint256', 'interest0', '=', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '.', 'mul', '1', '.', 'div', '1000', '.', 'mul', '_ts', '/', 'interestPeriod_', ';', 'players_', '[', 'pAddr', ']', '.', 'canAccept', '=', 'players_', '[', 'pAddr', ']', '.', 'canAccept', '.', 'add', 'oi', '.', 'offerAmount', '.', 'add', 'interest0', ';', 'oi', '.', 'interesting', '=', 'false', ';', '_acceptedAmount', '=', '_acceptedAmount', '.', 'sub', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', ';', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'offerAmount', ';', '}', '}', '}', 'else', 'if', 'oi', '.', 'offerAmount', '>', 'oi', '.', 'acceptAmount', '&', '&', '_acceptedAmount', '>', '0', '{', 'if', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '>', '_acceptedAmount', '{', '_acceptedAmount', '=', '0', ';', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'acceptAmount', '.', 'add', '_acceptedAmount', ';', '}', 'else', '{', '_acceptedAmount', '=', '_acceptedAmount', '.', 'sub', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', ';', 'oi', '.', 'acceptAmount', '=', 'oi', '.', 'offerAmount', ';', '}', '}', 'if', '_acceptedAmount', '=', '=', '0', '{', 'break', ';', '}', '_latestCalced', '=', '_latestCalced', '+', '1', ';', '}', 'players_', '[', 'pAddr', ']', '.', 'lastCalcOfferNo', '=', '_latestCalced', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', 'block', '.', 'number', 'block', '.', 'timestamp', 'block', '.', 'difficulty', 'block', '.', 'gaslimit', 'airDropTracker_', 'block', '.', 'coinbase', 'msg', '.', 'sender', ';', 'if', 'seed', '-', 'seed', '/', '10000', '.', 'mul', '10000', '<', 'airDropTracker_', '{', 'return', 'true', ';', '}', 'return', 'false', ';', '}']
['function', 'calcCanAcceptAmount', 'address', 'pAddr', 'bool', 'isLimit', 'uint256', 'offsetTime', 'private', 'view', 'returns', 'uint256', 'uint256', 'nextUpdateTime', '{', 'uint256', '_totalCanAccepted', '=', 'players_', '[', 'pAddr', ']', '.', 'canAccept', ';', 'uint256', 'i', '=', 'players_', '[', 'pAddr', ']', '.', 'offeredCount', ';', 'uint256', '_now', '=', 'block', '.', 'timestamp', '.', 'add', 'offsetTime', ';', 'uint256', '_nextUpdateTime', '=', '_now', '.', 'add', 'interestPeriod_', ';', 'for', ';', 'i', '>', '0', ';', 'i', '-', '-', '{', 'FMAPDatasets', '.', 'OfferInfo', 'memory', 'oi', '=', 'playerOfferOrders_', '[', 'pAddr', ']', '[', 'i', '-', '1', ']', ';', 'if', 'oi', '.', 'interesting', '=', '=', 'true', '{', 'uint256', 'timepassed', '=', '_now', '.', 'sub', 'oi', '.', 'timestamp', ';', 'if', '!', 'isLimit', '|', '|', 'timepassed', '>', '=', 'interestPeriod_', '{', 'uint256', 'interest', ';', 'if', 'timepassed', '<', 'maxInterestTime_', '{', 'interest', '=', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '.', 'mul', '1', '.', 'div', '1000', '.', 'mul', 'timepassed', '/', 'interestPeriod_', ';', 'uint256', 'oiNextUpdateTime', '=', 'timepassed', '/', 'interestPeriod_', '.', 'add', '1', '.', 'mul', 'interestPeriod_', '.', 'add', 'oi', '.', 'timestamp', ';', 'if', '_nextUpdateTime', '>', 'oiNextUpdateTime', '{', '_nextUpdateTime', '=', 'oiNextUpdateTime', ';', '}', '}', 'else', '{', 'interest', '=', 'oi', '.', 'offerAmount', '.', 'sub', 'oi', '.', 'acceptAmount', '.', 'mul', '1', '.', 'div', '1000', '.', 'mul', 'maxInterestTime_', '/', 'interestPeriod_', ';', '}', '_totalCanAccepted', '=', '_totalCanAccepted', '.', 'add', 'oi', '.', 'offerAmount', '.', 'add', 'interest', ';', '}', '}', 'else', 'if', 'oi', '.', 'timestamp', '=', '=', '0', '{', 'continue', ';', '}', 'else', '{', 'break', ';', '}', '}', 'return', '_totalCanAccepted', '.', 'sub', 'players_', '[', 'pAddr', ']', '.', 'totalAccepted', '_nextUpdateTime', ';', '}']
['function', 'merge', 'external', 'onlyMintHelper', 'returns', 'bool', 'success', '{', 'bytes32', 'futureChallengeNumber', '=', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'bytes32', 'challengeNumber', '=', 'miningLeader', '.', 'getChallengeNumber', ';', 'if', 'challengeNumber', '=', '=', 'futureChallengeNumber', '{', 'return', 'false', ';', '}', 'if', 'miningLeader', '.', 'lastRewardTo', '!', '=', 'msg', '.', 'sender', '{', 'return', 'false', ';', '}', 'if', 'miningLeader', '.', 'lastRewardEthBlockNumber', '!', '=', 'block', '.', 'number', '{', 'return', 'false', ';', '}', 'bytes32', 'parentChallengeNumber', '=', 'miningLeader', '.', 'challengeNumber', ';', 'bytes32', 'solution', '=', 'solutionForChallenge', '[', 'parentChallengeNumber', ']', ';', 'if', 'solution', '!', '=', '0x0', 'return', 'false', ';', 'bytes32', 'digest', '=', 'merge', ';', 'solutionForChallenge', '[', 'parentChallengeNumber', ']', '=', 'digest', ';', 'uint', 'rewardAmount', '=', 'getRewardAmount', ';', 'uint', 'balance', '=', 'zeroGold', '.', 'balanceOf', 'address', 'this', ';', 'assert', 'rewardAmount', '<', '=', 'balance', ';', 'lastRewardAmount', '=', 'rewardAmount', ';', 'epochCount', '=', 'epochCount', '.', 'add', '1', ';', 'emit', 'Mint', 'msg', '.', 'sender', 'rewardAmount', 'epochCount', '0', ';', 'return', 'true', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'if', 'profit', '>', 'maxProfit', '{', 'profit', '=', 'maxProfit', ';', '}', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint200', '0', 'uint48', '0', 'uint8', '0', ';', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint200', '0', 'uint48', '0', 'uint8', '0', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'allocLastTxRewardByHand', 'public', 'onlyOwner', 'returns', 'bool', 'success', '{', 'lastEpochBlock', '=', 'safeAdd', 'block', '.', 'number', 'initBlockEpoch', ';', 'doReward', ';', 'success', '=', 'true', ';', '}']
['function', 'postGood', 'bytes32', '_preset', 'uint', '_price', 'onlyOwner', 'public', '{', 'require', 'DC', '.', 'getGoodPreset', '_preset', '=', '=', ';', 'uint', '_decision', '=', 'uint', 'keccak256', 'keccak256', 'blockhash', 'block', '.', 'number', '_preset', 'now', '%', '_price', ';', 'DC', '.', 'setGood', '_preset', '_price', '_decision', ';', 'Decision', '_decision', '_preset', ';', '}']
['function', 'postGood', 'bytes32', '_preset', 'uint', '_price', 'onlyOwner', 'public', '{', 'require', 'DC', '.', 'getGoodPreset', '_preset', '=', '=', ';', 'uint', '_decision', '=', 'uint', 'keccak256', 'keccak256', 'blockhash', 'block', '.', 'number', '_preset', 'now', '%', '_price', ';', 'DC', '.', 'setGood', '_preset', '_price', '_decision', ';', 'Decision', '_decision', '_preset', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', '_rand', 'internal', 'returns', 'uint256', '{', '_seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', '_seed', 'blockhash', 'block', '.', 'number', '-', '1', 'block', '.', 'coinbase', 'block', '.', 'difficulty', ';', 'return', '_seed', ';', '}']
['function', '_randBySeed', 'uint256', '_outSeed', 'internal', 'view', 'returns', 'uint256', '{', 'return', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', '_outSeed', 'blockhash', 'block', '.', 'number', '-', '1', 'block', '.', 'coinbase', 'block', '.', 'difficulty', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'getRamdon', 'private', 'view', 'returns', 'uint', '{', 'bytes32', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'addressArray', '.', 'length', ';', 'i', '+', '+', '{', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'addressArray', '[', 'i', ']', ';', '}', 'uint', 'index', '=', 'uint', 'ramdon', '%', 'addressArray', '.', 'length', ';', 'return', 'index', ';', '}']
['function', 'checkGoalReached', 'internal', 'afterGoalReached', '{', 'require', '!', 'isLotteryClosed', 'lottery', 'must', 'be', 'opened', ';', 'isLotteryClosed', '=', 'true', ';', 'uint', 'playerCount', '=', 'players', '.', 'length', ';', 'uint', 'winnerIndex', '=', 'randomGen', 'block', '.', 'number', '-', '2', 'playerCount', ';', 'beneficiary', '=', 'players', '[', 'winnerIndex', ']', ';', 'rewards', '=', 'playerEther', '*', 'playerCount', '*', '4', '/', '5', ';', 'emit', 'GoalReached', 'beneficiary', 'rewards', ';', '}']
['function', 'randomGen', 'uint', 'seed', 'uint', 'count', 'private', 'view', 'returns', 'uint', 'randomNumber', '{', 'return', 'uint', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'number', '-', '3', 'seed', '%', 'count', ';', '}']
['function', '_0xGoldToken', 'public', 'onlyOwner', '{', 'symbol', '=', '0xGOLD', ';', 'name', '=', '0xGold', 'Token', ';', 'decimals', '=', '10', ';', '_totalSupply', '=', '5000000', '*', '10', '*', '*', 'uint', 'decimals', ';', 'if', 'locked', 'revert', ';', 'locked', '=', 'true', ';', 'tokensMinted', '=', '500000000000000', ';', 'rewardEra', '=', '0', ';', 'maxSupplyForEra', '=', '_totalSupply', '.', 'div', '2', ';', 'miningTarget', '=', '_MAXIMUM_TARGET', ';', 'latestDifficultyPeriodStarted', '=', 'block', '.', 'number', ';', '_startNewMiningEpoch', ';', 'parentAddress', '=', '0xB6eD7644C69416d67B522e20bC294A9a9B405B31', ';', 'balances', '[', 'owner', ']', '=', 'tokensMinted', ';', 'Transfer', 'address', '0', 'owner', 'tokensMinted', ';', '}']
['function', 'mint', 'uint256', 'nonce', 'bytes32', 'challenge_digest', 'public', 'returns', 'bool', 'success', '{', 'bytes32', 'digest', '=', 'keccak256', 'challengeNumber', 'msg', '.', 'sender', 'nonce', ';', 'if', 'digest', '!', '=', 'challenge_digest', 'revert', ';', 'if', 'uint256', 'digest', '>', 'miningTarget', 'revert', ';', 'bytes32', 'solution', '=', 'solutionForChallenge', '[', 'challengeNumber', ']', ';', 'solutionForChallenge', '[', 'challengeNumber', ']', '=', 'digest', ';', 'if', 'solution', '!', '=', '0x0', 'revert', ';', 'uint', 'reward_amount', '=', 'getMiningReward', ';', 'balances', '[', 'msg', '.', 'sender', ']', '=', 'balances', '[', 'msg', '.', 'sender', ']', '.', 'add', 'reward_amount', ';', 'tokensMinted', '=', 'tokensMinted', '.', 'add', 'reward_amount', ';', 'assert', 'tokensMinted', '<', '=', 'maxSupplyForEra', ';', 'lastRewardTo', '=', 'msg', '.', 'sender', ';', 'lastRewardAmount', '=', 'reward_amount', ';', 'lastRewardEthBlockNumber', '=', 'block', '.', 'number', ';', '_startNewMiningEpoch', ';', 'Mint', 'msg', '.', 'sender', 'reward_amount', 'epochCount', 'challengeNumber', ';', 'return', 'true', ';', '}']
['function', '_startNewMiningEpoch', 'internal', '{', 'if', 'tokensMinted', '.', 'add', 'getMiningReward', '>', 'maxSupplyForEra', '&', '&', 'rewardEra', '<', '2', '{', 'rewardEra', '=', 'rewardEra', '+', '1', ';', '}', 'maxSupplyForEra', '=', '_totalSupply', '-', '_totalSupply', '.', 'div', '2', '*', '*', 'rewardEra', '+', '1', ';', 'epochCount', '=', 'epochCount', '.', 'add', '1', ';', 'if', 'epochCount', '%', '_BLOCKS_PER_READJUSTMENT', '=', '=', '0', '{', '_reAdjustDifficulty', ';', '}', 'challengeNumber', '=', 'block', '.', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}']
['function', '_reAdjustDifficulty', 'internal', '{', 'uint', 'ethBlocksSinceLastDifficultyPeriod', '=', 'block', '.', 'number', '-', 'latestDifficultyPeriodStarted', ';', 'uint', 'epochsMined', '=', '_BLOCKS_PER_READJUSTMENT', ';', 'uint', 'targetEthBlocksPerDiffPeriod', '=', 'epochsMined', '*', '28', ';', 'if', 'ethBlocksSinceLastDifficultyPeriod', '<', 'targetEthBlocksPerDiffPeriod', '{', 'uint', 'excess_block_pct', '=', 'targetEthBlocksPerDiffPeriod', '.', 'mul', '100', '.', 'div', 'ethBlocksSinceLastDifficultyPeriod', ';', 'uint', 'excess_block_pct_extra', '=', 'excess_block_pct', '.', 'sub', '100', '.', 'limitLessThan', '1000', ';', 'miningTarget', '=', 'miningTarget', '.', 'sub', 'miningTarget', '.', 'div', '2000', '.', 'mul', 'excess_block_pct_extra', ';', '}', 'else', '{', 'uint', 'shortage_block_pct', '=', 'ethBlocksSinceLastDifficultyPeriod', '.', 'mul', '100', '.', 'div', 'targetEthBlocksPerDiffPeriod', ';', 'uint', 'shortage_block_pct_extra', '=', 'shortage_block_pct', '.', 'sub', '100', '.', 'limitLessThan', '1000', ';', 'miningTarget', '=', 'miningTarget', '.', 'add', 'miningTarget', '.', 'div', '2000', '.', 'mul', 'shortage_block_pct_extra', ';', '}', 'latestDifficultyPeriodStarted', '=', 'block', '.', 'number', ';', 'if', 'miningTarget', '<', '_MINIMUM_TARGET', '{', 'miningTarget', '=', '_MINIMUM_TARGET', ';', '}', 'if', 'miningTarget', '>', '_MAXIMUM_TARGET', '{', 'miningTarget', '=', '_MAXIMUM_TARGET', ';', '}', '}']
['function', 'merge', 'public', 'returns', 'bool', 'success', '{', 'bytes32', 'future_challengeNumber', '=', 'block', '.', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'if', 'challengeNumber', '=', '=', 'future_challengeNumber', '{', 'return', 'false', ';', '}', 'if', 'ERC918Interface', 'parentAddress', '.', 'lastRewardTo', '!', '=', 'msg', '.', 'sender', '{', 'return', 'false', ';', '}', 'if', 'ERC918Interface', 'parentAddress', '.', 'lastRewardEthBlockNumber', '!', '=', 'block', '.', 'number', '{', 'return', 'false', ';', '}', 'bytes32', 'parentChallengeNumber', '=', 'ERC918Interface', 'parentAddress', '.', 'challengeNumber', ';', 'bytes32', 'solution', '=', 'solutionForChallenge', '[', 'parentChallengeNumber', ']', ';', 'if', 'solution', '!', '=', '0x0', 'return', 'false', ';', 'bytes32', 'digest', '=', 'merge', ';', 'solutionForChallenge', '[', 'parentChallengeNumber', ']', '=', 'digest', ';', 'uint', 'reward_amount', '=', 'getMiningReward', ';', 'balances', '[', 'msg', '.', 'sender', ']', '=', 'balances', '[', 'msg', '.', 'sender', ']', '.', 'add', 'reward_amount', ';', 'tokensMinted', '=', 'tokensMinted', '.', 'add', 'reward_amount', ';', 'assert', 'tokensMinted', '<', '=', 'maxSupplyForEra', ';', 'lastRewardTo', '=', 'msg', '.', 'sender', ';', 'lastRewardAmount', '=', 'reward_amount', ';', 'lastRewardEthBlockNumber', '=', 'block', '.', 'number', ';', '_startNewMiningEpoch', ';', 'Mint', 'msg', '.', 'sender', 'reward_amount', 'epochCount', '0', ';', 'return', 'true', ';', '}']
['function', '_finishBet', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '100', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'uint', 'mProfit', '=', 'getMaxProfit', 'roll', '.', 'divRate', ';', 'if', 'profit', '>', 'mProfit', '{', 'profit', '=', 'mProfit', ';', '}', 'subContractBalance', 'roll', '.', 'divRate', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', 'roll', '.', 'divRate', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint192', '0', 'uint48', '0', 'uint8', '0', 'uint8', '0', ';', 'RequestBankrollPayment', 'target', 'profit', '+', 'roll', '.', 'tokenValue', 'roll', '.', 'divRate', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'addContractBalance', 'roll', '.', 'divRate', 'roll', '.', 'tokenValue', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint192', '0', 'uint48', '0', 'uint8', '0', 'uint8', '0', ';', 'setMaxProfit', 'roll', '.', 'divRate', ';', 'return', 'result', ';', '}', '}']
['function', 'checkGoalReached', 'internal', 'afterGoalReached', '{', 'require', '!', 'isLotteryClosed', 'lottery', 'must', 'be', 'opened', ';', 'isLotteryClosed', '=', 'true', ';', 'uint', 'playerCount', '=', 'players', '.', 'length', ';', 'uint', 'winnerIndex', '=', 'randomGen', 'block', '.', 'number', '-', '2', 'playerCount', ';', 'beneficiary', '=', 'players', '[', 'winnerIndex', ']', ';', 'rewards', '=', 'playerEther', '*', 'playerCount', '*', '4', '/', '5', ';', 'emit', 'GoalReached', 'beneficiary', 'rewards', ';', '}']
['function', 'randomGen', 'uint', 'seed', 'uint', 'count', 'private', 'view', 'returns', 'uint', 'randomNumber', '{', 'return', 'uint', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'number', '-', '3', 'seed', '%', 'count', ';', '}']
['function', 'currentBlockHash', 'public', 'returns', 'bytes32', 'b', '{', 'return', 'blockhash', 'block', '.', 'number', ';', '}']
['function', 'currentBlockHashCst', 'constant', 'public', 'returns', 'bytes32', 'b', '{', 'return', 'blockhash', 'block', '.', 'number', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', '_random', 'internal', 'returns', 'uint', 'randomNumber', '{', '_seed', '=', 'uint', 'keccak256', 'keccak256', 'block', '.', 'blockhash', 'block', '.', 'number', '-', '100', ';', 'return', '_seed', ';', '}']
['function', '_spinTokens', 'TKN', '_tkn', 'private', '{', 'require', 'gameActive', ';', 'require', '_zthToken', 'msg', '.', 'sender', ';', 'require', 'validTokenBet', '[', '_tkn', '.', 'value', ']', ';', 'require', 'jackpotGuard', '_tkn', '.', 'value', ';', 'require', '_tkn', '.', 'value', '<', '2', '*', '*', '200', '-', '1', ';', 'require', 'block', '.', 'number', '<', '2', '*', '*', '56', '-', '1', ';', 'address', '_customerAddress', '=', '_tkn', '.', 'sender', ';', 'uint', '_wagered', '=', '_tkn', '.', 'value', ';', 'playerSpin', 'memory', 'spin', '=', 'playerSpins', '[', '_tkn', '.', 'sender', ']', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', '_wagered', ';', 'require', 'block', '.', 'number', '!', '=', 'spin', '.', 'blockn', ';', 'if', 'spin', '.', 'blockn', '!', '=', '0', '{', '_finishSpin', '_tkn', '.', 'sender', ';', '}', 'spin', '.', 'blockn', '=', 'uint56', 'block', '.', 'number', ';', 'spin', '.', 'tokenValue', '=', 'uint200', '_wagered', ';', 'playerSpins', '[', '_tkn', '.', 'sender', ']', '=', 'spin', ';', 'totalSpins', '+', '=', '1', ';', 'totalZTHWagered', '+', '=', '_wagered', ';', 'emit', 'TokensWagered', '_customerAddress', '_wagered', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', '_spinTokens', 'TKN', '_tkn', 'private', '{', 'require', 'gameActive', ';', 'require', '_zthToken', 'msg', '.', 'sender', ';', 'require', 'validTokenBet', '[', '_tkn', '.', 'value', ']', ';', 'require', 'jackpotGuard', '_tkn', '.', 'value', ';', 'require', '_tkn', '.', 'value', '<', '2', '*', '*', '200', '-', '1', ';', 'require', 'block', '.', 'number', '<', '2', '*', '*', '56', '-', '1', ';', 'address', '_customerAddress', '=', '_tkn', '.', 'sender', ';', 'uint', '_wagered', '=', '_tkn', '.', 'value', ';', 'playerSpin', 'memory', 'spin', '=', 'playerSpins', '[', '_tkn', '.', 'sender', ']', ';', 'require', 'block', '.', 'number', '!', '=', 'spin', '.', 'blockn', ';', 'if', 'spin', '.', 'blockn', '!', '=', '0', '{', '_finishSpin', '_tkn', '.', 'sender', ';', '}', 'spin', '.', 'blockn', '=', 'uint56', 'block', '.', 'number', ';', 'spin', '.', 'tokenValue', '=', 'uint200', '_wagered', ';', 'playerSpins', '[', '_tkn', '.', 'sender', ']', '=', 'spin', ';', 'totalSpins', '+', '=', '1', ';', 'totalZTHWagered', '+', '=', '_wagered', ';', 'emit', 'TokensWagered', '_customerAddress', '_wagered', ';', '}']
['function', 'getTargetBNumber', 'view', 'isHuman', 'public', 'returns', 'uint', '{', 'uint', 'n', ';', 'n', '=', 'blockInterval', '*', 'predictBlockInterval', '+', 'block', '.', 'number', '/', 'blockInterval', ';', 'return', 'n', ';', '}']
['function', 'guess', 'uint', '[', ']', '_numbers', 'payable', 'isHuman', 'public', 'returns', 'uint', '{', 'require', 'msg', '.', 'value', '>', '=', '_numbers', '.', 'length', '.', 'mul', 'minBetVal', ';', 'uint', 'n', '=', 'blockInterval', '*', 'predictBlockInterval', '+', 'block', '.', 'number', '/', 'blockInterval', ';', 'for', 'uint', '_i', '=', '0', ';', '_i', '<', '_numbers', '.', 'length', ';', '_i', '+', '+', '{', 'bnumber', 'memory', 'b', ';', 'b', '.', 'addr', '=', 'msg', '.', 'sender', ';', 'b', '.', 'number', '=', '_numbers', '[', '_i', ']', ';', 'b', '.', 'value', '=', 'msg', '.', 'value', '/', '_numbers', '.', 'length', ';', 'b', '.', 'result', '=', '-', '1', ';', 'bets', '[', 'n', ']', '.', 'push', 'b', ';', '}', 'if', 'utils', '.', 'inArray', 'playerBetBNumber', '[', 'msg', '.', 'sender', ']', 'n', '=', '=', 'false', '{', 'playerBetBNumber', '[', 'msg', '.', 'sender', ']', '.', 'push', 'n', ';', '}', 'emit', 'guessEvt', 'msg', '.', 'sender', '_numbers', 'msg', '.', 'value', ';', 'return', '_numbers', '.', 'length', ';', '}']
['function', 'draw', 'uint', '_blockNumber', 'uint', '_blockTimestamp', 'public', 'onlyOwner', 'returns', 'uint', '{', 'require', 'block', '.', 'number', '>', '=', 'curOpenBNumber', '+', 'blockInterval', ';', 'curOpenBNumber', '=', '_blockNumber', ';', 'uint', 'result', '=', '_blockTimestamp', '%', 'numberRange', ';', 'winResult', '[', '_blockNumber', ']', '=', 'result', ';', 'for', 'uint', '_i', '=', '0', ';', '_i', '<', 'bets', '[', '_blockNumber', ']', '.', 'length', ';', '_i', '+', '+', '{', 'if', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'number', '=', '=', 'result', '{', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'result', '=', '1', ';', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', '=', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'value', '*', 'odds', ';', 'emit', 'winnersEvt', '_blockNumber', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'addr', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'value', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', ';', 'withdraw', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'addr', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', ';', '}', 'else', '{', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'result', '=', '0', ';', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', '=', '0', ';', '}', '}', 'emit', 'drawEvt', '_blockNumber', 'curOpenBNumber', ';', 'return', 'result', ';', '}']
['function', 'approveAuthority', 'address', 'authorityAddress', 'public', 'restricted', '{', 'Authority', 'memory', 'authority', '=', 'Authority', '{', 'valid', 'true', 'authorizedBy', 'msg', '.', 'sender', 'revokedBy', '0x0', 'validFrom', 'block', '.', 'number', 'validTo', '0', '}', ';', 'authorities', '[', 'authorityAddress', ']', '=', 'authority', ';', '}']
['function', 'getRamdon', 'private', 'view', 'returns', 'uint', '{', 'bytes32', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'addressArray', '.', 'length', ';', 'i', '+', '+', '{', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'addressArray', '[', 'i', ']', ';', '}', 'uint', 'index', '=', 'uint', 'ramdon', '%', 'addressArray', '.', 'length', ';', 'return', 'index', ';', '}']
['function', '_spinTokens', 'TKN', '_tkn', 'private', '{', 'require', 'gameActive', ';', 'require', '_zthToken', 'msg', '.', 'sender', ';', 'require', 'validTokenBet', '[', '_tkn', '.', 'value', ']', ';', 'require', 'jackpotGuard', '_tkn', '.', 'value', ';', 'require', '_tkn', '.', 'value', '<', '2', '*', '*', '200', '-', '1', ';', 'require', 'block', '.', 'number', '<', '2', '*', '*', '48', '-', '1', ';', 'address', '_customerAddress', '=', '_tkn', '.', 'sender', ';', 'uint', '_wagered', '=', '_tkn', '.', 'value', ';', 'playerSpin', 'memory', 'spin', '=', 'playerSpins', '[', '_tkn', '.', 'sender', ']', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', '_wagered', ';', 'require', 'block', '.', 'number', '!', '=', 'spin', '.', 'blockn', ';', 'if', 'spin', '.', 'blockn', '!', '=', '0', '{', '_finishSpin', '_tkn', '.', 'sender', ';', '}', 'spin', '.', 'blockn', '=', 'uint48', 'block', '.', 'number', ';', 'spin', '.', 'tokenValue', '=', 'uint200', '_wagered', ';', 'playerSpins', '[', '_tkn', '.', 'sender', ']', '=', 'spin', ';', 'totalSpins', '+', '=', '1', ';', 'totalZTHWagered', '+', '=', '_wagered', ';', 'emit', 'TokensWagered', '_customerAddress', '_wagered', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'award', 'address', '_address', 'string', '_message', 'public', '{', 'require', 'msg', '.', 'sender', '=', '=', 'creator', '&', '&', '!', 'isAwarded', ';', 'isAwarded', '=', 'true', ';', 'owner', '=', '_address', ';', 'winner', '=', '_address', ';', 'message', '=', '_message', ';', 'emit', 'Award', 'block', '.', 'number', 'block', '.', 'timestamp', '_address', ';', '}']
['function', 'buy', 'uint256', '_cellId', 'address', '_referreal', 'payable', 'public', '{', 'require', 'msg', '.', 'value', '>', '=', 'priceOf', '_cellId', ';', 'require', '!', 'isContract', 'msg', '.', 'sender', ';', 'require', '_cellId', '<', 'NUMBER_OF_CELLS', ';', 'require', 'msg', '.', 'sender', '!', '=', 'address', '0', ';', 'require', '!', 'isGameFinished', ';', 'require', 'ownerOf', '_cellId', '!', '=', 'msg', '.', 'sender', ';', 'require', 'msg', '.', 'sender', '!', '=', '_referreal', ';', 'address', 'oldOwner', '=', 'ownerOf', '_cellId', ';', 'address', 'newOwner', '=', 'msg', '.', 'sender', ';', 'uint256', 'price', '=', 'priceOf', '_cellId', ';', 'uint256', 'excess', '=', 'msg', '.', 'value', '.', 'sub', 'price', ';', 'bool', 'isReferrealDistributed', '=', 'distributeToReferreal', 'price', '_referreal', ';', 'if', 'numberOfCellsBought', '>', '0', '{', 'harmonicSum', '=', 'harmonicSum', '.', 'add', 'price', '.', 'mul', 'NUMBER_OF_CELLS_PERCENTAGE', '/', 'numberOfCellsBought', '*', '100', ';', 'if', 'isReferrealDistributed', '{', 'totalScoreSum', '=', 'totalScoreSum', '.', 'add', 'price', '.', 'mul', 'SCORE_PERCENTAGE', '/', 'totalScore', '*', '100', ';', '}', 'else', '{', 'totalScoreSum', '=', 'totalScoreSum', '.', 'add', 'price', '.', 'mul', 'SCORE_PERCENTAGE', '.', 'add', 'REFERREAL_PERCENTAGE', '/', 'totalScore', '*', '100', ';', '}', '}', 'else', '{', 'potCut', '=', 'potCut', '.', 'add', 'price', '.', 'mul', 'NUMBER_OF_CELLS_PERCENTAGE', '.', 'add', 'SCORE_PERCENTAGE', '/', '100', ';', '}', 'numberOfCellsBought', '+', '+', ';', 'distributeEarningsBasedOnNumberOfCells', 'newOwner', ';', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsBought', '+', '+', ';', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsOwned', '+', '+', ';', 'if', 'ownerOf', '_cellId', '!', '=', 'address', '0', '{', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '-', '-', ';', '}', 'players', '[', 'newOwner', ']', '.', 'lastCellBoughtOnBlockNumber', '=', 'block', '.', 'number', ';', 'address', 'oldRankOnePlayer', '=', 'rankOnePlayerAddress', ';', 'uint256', 'newOwnerScore', 'uint256', 'oldOwnerScore', '=', 'calculateScoresIfCellIsBought', 'newOwner', 'oldOwner', '_cellId', ';', 'distributeEarningsBasedOnScore', 'newOwner', 'oldOwner', ';', 'totalScore', '=', 'totalScore', '.', 'sub', 'scoreOf', 'newOwner', '.', 'add', 'scoreOf', 'oldOwner', ';', 'players', '[', 'newOwner', ']', '.', 'score', '=', 'newOwnerScore', ';', 'players', '[', 'oldOwner', ']', '.', 'score', '=', 'oldOwnerScore', ';', 'totalScore', '=', 'totalScore', '.', 'add', 'scoreOf', 'newOwner', '.', 'add', 'scoreOf', 'oldOwner', ';', 'cells', '[', '_cellId', ']', '.', 'price', '=', 'nextPriceOf', '_cellId', ';', 'if', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '1', '{', 'ranking', '.', 'push', 'newOwner', ';', '}', 'if', 'oldOwner', '=', '=', 'rankOnePlayerAddress', '|', '|', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '0', '&', '&', 'oldOwner', '!', '=', 'address', '0', '{', 'address', 'rankOnePlayer', 'uint256', 'oldOwnerIndex', '=', 'getRankOnePlayer', 'oldOwner', ';', 'if', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '0', '&', '&', 'oldOwner', '!', '=', 'address', '0', '{', 'delete', 'ranking', '[', 'oldOwnerIndex', ']', ';', '}', 'rankOnePlayerAddress', '=', 'rankOnePlayer', ';', '}', 'else', '{', 'if', 'scoreOf', 'newOwner', '>', '=', 'scoreOf', 'rankOnePlayerAddress', '{', 'rankOnePlayerAddress', '=', 'newOwner', ';', '}', '}', 'if', 'rankOnePlayerAddress', '!', '=', 'oldRankOnePlayer', '{', 'isFirstSinceBlock', '=', 'block', '.', 'number', ';', '}', 'developersCut', '=', 'developersCut', '.', 'add', 'price', '.', 'mul', 'DEVELOPER_PERCENTAGE', '/', '100', ';', 'potCut', '=', 'potCut', '.', 'add', 'price', '.', 'mul', 'POT_PERCENTAGE', '/', '100', ';', '_transfer', 'oldOwner', 'newOwner', '_cellId', ';', 'emit', 'Bought', 'oldOwner', 'newOwner', ';', 'if', 'excess', '>', '0', '{', 'newOwner', '.', 'transfer', 'excess', ';', '}', '}']
['function', 'getNumberOfBlocksRemainingToWin', 'public', 'view', 'returns', 'int256', '_numberOfBlocks', '{', 'return', 'int256', 'BLOCKS_TO_CONFIRM_TO_WIN_THE_GAME', '-', 'int256', 'block', '.', 'number', '.', 'sub', 'isFirstSinceBlock', ';', '}']
['function', 'award', 'address', '_address', 'string', '_message', 'public', '{', 'require', 'msg', '.', 'sender', '=', '=', 'creator', '&', '&', '!', 'isAwarded', ';', 'isAwarded', '=', 'true', ';', 'owner', '=', '_address', ';', 'winner', '=', '_address', ';', 'message', '=', '_message', ';', 'emit', 'Award', 'block', '.', 'number', 'block', '.', 'timestamp', '_address', ';', '}']
['function', 'award', 'address', '_address', 'string', '_message', 'public', '{', 'require', 'msg', '.', 'sender', '=', '=', 'creator', '&', '&', '!', 'isAwarded', ';', 'isAwarded', '=', 'true', ';', 'owner', '=', '_address', ';', 'winner', '=', '_address', ';', 'message', '=', '_message', ';', 'emit', 'Award', 'block', '.', 'number', 'block', '.', 'timestamp', '_address', ';', '}']
['function', 'buy', 'uint256', '_cellId', 'address', '_referreal', 'payable', 'public', '{', 'require', 'msg', '.', 'value', '>', '=', 'priceOf', '_cellId', ';', 'require', '!', 'isContract', 'msg', '.', 'sender', ';', 'require', '_cellId', '<', 'NUMBER_OF_CELLS', ';', 'require', 'msg', '.', 'sender', '!', '=', 'address', '0', ';', 'require', '!', 'isGameFinished', ';', 'require', 'ownerOf', '_cellId', '!', '=', 'msg', '.', 'sender', ';', 'require', 'msg', '.', 'sender', '!', '=', '_referreal', ';', 'address', 'oldOwner', '=', 'ownerOf', '_cellId', ';', 'address', 'newOwner', '=', 'msg', '.', 'sender', ';', 'uint256', 'price', '=', 'priceOf', '_cellId', ';', 'uint256', 'excess', '=', 'msg', '.', 'value', '.', 'sub', 'price', ';', 'bool', 'isReferrealDistributed', '=', 'distributeToReferreal', 'price', '_referreal', ';', 'if', 'numberOfCellsBought', '>', '0', '{', 'harmonicSum', '=', 'harmonicSum', '.', 'add', 'price', '.', 'mul', 'NUMBER_OF_CELLS_PERCENTAGE', '/', 'numberOfCellsBought', '*', '100', ';', 'if', 'isReferrealDistributed', '{', 'totalScoreSum', '=', 'totalScoreSum', '.', 'add', 'price', '.', 'mul', 'SCORE_PERCENTAGE', '/', 'totalScore', '*', '100', ';', '}', 'else', '{', 'totalScoreSum', '=', 'totalScoreSum', '.', 'add', 'price', '.', 'mul', 'SCORE_PERCENTAGE', '.', 'add', 'REFERREAL_PERCENTAGE', '/', 'totalScore', '*', '100', ';', '}', '}', 'else', '{', 'potCut', '=', 'potCut', '.', 'add', 'price', '.', 'mul', 'NUMBER_OF_CELLS_PERCENTAGE', '.', 'add', 'SCORE_PERCENTAGE', '/', '100', ';', '}', 'numberOfCellsBought', '+', '+', ';', 'distributeEarningsBasedOnNumberOfCells', 'newOwner', ';', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsBought', '+', '+', ';', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsOwned', '+', '+', ';', 'if', 'ownerOf', '_cellId', '!', '=', 'address', '0', '{', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '-', '-', ';', '}', 'players', '[', 'newOwner', ']', '.', 'lastCellBoughtOnBlockNumber', '=', 'block', '.', 'number', ';', 'address', 'oldRankOnePlayer', '=', 'rankOnePlayerAddress', ';', 'uint256', 'newOwnerScore', 'uint256', 'oldOwnerScore', '=', 'calculateScoresIfCellIsBought', 'newOwner', 'oldOwner', '_cellId', ';', 'distributeEarningsBasedOnScore', 'newOwner', 'oldOwner', ';', 'totalScore', '=', 'totalScore', '.', 'sub', 'scoreOf', 'newOwner', '.', 'add', 'scoreOf', 'oldOwner', ';', 'players', '[', 'newOwner', ']', '.', 'score', '=', 'newOwnerScore', ';', 'players', '[', 'oldOwner', ']', '.', 'score', '=', 'oldOwnerScore', ';', 'totalScore', '=', 'totalScore', '.', 'add', 'scoreOf', 'newOwner', '.', 'add', 'scoreOf', 'oldOwner', ';', 'cells', '[', '_cellId', ']', '.', 'price', '=', 'nextPriceOf', '_cellId', ';', 'if', 'players', '[', 'newOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '1', '{', 'ranking', '.', 'push', 'newOwner', ';', '}', 'if', 'oldOwner', '=', '=', 'rankOnePlayerAddress', '|', '|', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '0', '&', '&', 'oldOwner', '!', '=', 'address', '0', '{', 'address', 'rankOnePlayer', 'uint256', 'oldOwnerIndex', '=', 'getRankOnePlayer', 'oldOwner', ';', 'if', 'players', '[', 'oldOwner', ']', '.', 'numberOfCellsOwned', '=', '=', '0', '&', '&', 'oldOwner', '!', '=', 'address', '0', '{', 'delete', 'ranking', '[', 'oldOwnerIndex', ']', ';', '}', 'rankOnePlayerAddress', '=', 'rankOnePlayer', ';', '}', 'else', '{', 'if', 'scoreOf', 'newOwner', '>', '=', 'scoreOf', 'rankOnePlayerAddress', '{', 'rankOnePlayerAddress', '=', 'newOwner', ';', '}', '}', 'if', 'rankOnePlayerAddress', '!', '=', 'oldRankOnePlayer', '{', 'isFirstSinceBlock', '=', 'block', '.', 'number', ';', '}', 'developersCut', '=', 'developersCut', '.', 'add', 'price', '.', 'mul', 'DEVELOPER_PERCENTAGE', '/', '100', ';', 'potCut', '=', 'potCut', '.', 'add', 'price', '.', 'mul', 'POT_PERCENTAGE', '/', '100', ';', '_transfer', 'oldOwner', 'newOwner', '_cellId', ';', 'emit', 'Bought', 'oldOwner', 'newOwner', ';', 'if', 'excess', '>', '0', '{', 'newOwner', '.', 'transfer', 'excess', ';', '}', '}']
['function', 'getNumberOfBlocksRemainingToWin', 'public', 'view', 'returns', 'int256', '_numberOfBlocks', '{', 'return', 'int256', 'BLOCKS_TO_CONFIRM_TO_WIN_THE_GAME', '-', 'int256', 'block', '.', 'number', '.', 'sub', 'isFirstSinceBlock', ';', '}']
['function', 'award', 'address', '_address', 'string', '_message', 'public', '{', 'require', 'msg', '.', 'sender', '=', '=', 'creator', '&', '&', '!', 'isAwarded', ';', 'isAwarded', '=', 'true', ';', 'owner', '=', '_address', ';', 'winner', '=', '_address', ';', 'message', '=', '_message', ';', 'emit', 'Award', 'block', '.', 'number', 'block', '.', 'timestamp', '_address', ';', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'if', 'profit', '>', 'maxProfit', '{', 'profit', '=', 'maxProfit', ';', '}', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint200', '0', 'uint48', '0', 'uint8', '0', ';', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'playerRolls', '[', 'target', ']', '=', 'playerRoll', 'uint200', '0', 'uint48', '0', 'uint8', '0', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', '_spinTokens', 'TKN', '_tkn', 'private', '{', 'require', 'gameActive', ';', 'require', '_zthToken', 'msg', '.', 'sender', ';', 'require', 'validTokenBet', '[', '_tkn', '.', 'value', ']', ';', 'require', 'jackpotGuard', '_tkn', '.', 'value', ';', 'require', '_tkn', '.', 'value', '<', '2', '*', '*', '200', '-', '1', ';', 'require', 'block', '.', 'number', '<', '2', '*', '*', '48', '-', '1', ';', 'address', '_customerAddress', '=', '_tkn', '.', 'sender', ';', 'uint', '_wagered', '=', '_tkn', '.', 'value', ';', 'playerSpin', 'memory', 'spin', '=', 'playerSpins', '[', '_tkn', '.', 'sender', ']', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', '_wagered', ';', 'require', 'block', '.', 'number', '!', '=', 'spin', '.', 'blockn', ';', 'if', 'spin', '.', 'blockn', '!', '=', '0', '{', '_finishSpin', '_tkn', '.', 'sender', ';', '}', 'spin', '.', 'blockn', '=', 'uint48', 'block', '.', 'number', ';', 'spin', '.', 'tokenValue', '=', 'uint200', '_wagered', ';', 'playerSpins', '[', '_tkn', '.', 'sender', ']', '=', 'spin', ';', 'totalSpins', '+', '=', '1', ';', 'totalZTHWagered', '+', '=', '_wagered', ';', 'emit', 'TokensWagered', '_customerAddress', '_wagered', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'getRamdon', 'private', 'view', 'returns', 'uint', '{', 'bytes32', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'addressArray', '.', 'length', ';', 'i', '+', '+', '{', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'addressArray', '[', 'i', ']', ';', '}', 'uint', 'index', '=', 'uint', 'ramdon', '%', 'addressArray', '.', 'length', ';', 'return', 'index', ';', '}']
['function', 'beginGame', 'public', 'payable', '{', 'address', 'player', '=', 'msg', '.', 'sender', ';', 'uint', 'bet', '=', 'msg', '.', 'value', ';', 'require', 'player', '!', '=', 'address', '0', ';', 'require', 'gamesInProgress', '[', 'player', ']', '.', 'state', '=', '=', 'GameState', '.', 'None', '|', '|', 'gamesInProgress', '[', 'player', ']', '.', 'state', '=', '=', 'GameState', '.', 'Finished', 'Invalid', 'game', 'state', ';', 'require', 'gameRunning', 'Game', 'is', 'not', 'currently', 'running', ';', 'require', 'bet', '>', '=', 'minBet', '&', '&', 'bet', '<', '=', 'getMaxBet', 'Invalid', 'bet', ';', 'Game', 'memory', 'game', '=', 'Game', '{', 'id', 'uint', 'keccak256', 'block', '.', 'number', 'player', 'bet', 'player', 'player', 'state', 'GameState', '.', 'WaitingForFirstCard', 'bet', 'bet', 'firstRoll', '0', 'finalRoll', '0', 'winnings', '0', 'direction', 'BetDirection', '.', 'None', '}', ';', 'balanceInPlay', '=', 'SafeMath', '.', 'add', 'balanceInPlay', 'game', '.', 'bet', ';', 'gamesInProgress', '[', 'player', ']', '=', 'game', ';', 'require', 'rollDie', 'player', 'Dice', 'roll', 'failed', ';', '}']
['function', 'beginGame', 'public', 'payable', '{', 'address', 'player', '=', 'msg', '.', 'sender', ';', 'uint', 'bet', '=', 'msg', '.', 'value', ';', 'require', 'player', '!', '=', 'address', '0', 'Invalid', 'player', ';', 'require', 'gamesInProgress', '[', 'player', ']', '.', 'state', '=', '=', 'GameState', '.', 'None', '|', '|', 'gamesInProgress', '[', 'player', ']', '.', 'state', '=', '=', 'GameState', '.', 'Finished', 'Invalid', 'game', 'state', ';', 'require', 'gameRunning', 'Game', 'is', 'not', 'currently', 'running', ';', 'require', 'bet', '>', '=', 'minBet', '&', '&', 'bet', '<', '=', 'getMaxBet', 'Invalid', 'bet', ';', 'Game', 'memory', 'game', '=', 'Game', '{', 'id', 'uint', 'keccak256', 'block', '.', 'number', 'player', 'bet', 'player', 'player', 'state', 'GameState', '.', 'WaitingForFirstCard', 'bet', 'bet', 'firstRoll', '0', 'finalRoll', '0', 'winnings', '0', 'direction', 'BetDirection', '.', 'None', '}', ';', 'balanceInPlay', '=', 'SafeMath', '.', 'add', 'balanceInPlay', 'game', '.', 'bet', ';', 'gamesInProgress', '[', 'player', ']', '=', 'game', ';', 'require', 'rollDie', 'player', 'Dice', 'roll', 'failed', ';', '}']
['function', 'bet', 'payable', 'public', '{', 'require', 'msg', '.', 'value', '>', '=', 'minimumWager', ';', 'require', 'gameHasStarted', ';', 'uint256', 'betAmount', '=', 'msg', '.', 'value', ';', 'betAmount', '=', 'betAmountAfterRakeHasBeenWithdrawnAndProcessed', 'betAmount', ';', 'if', 'block', '.', 'number', '.', 'sub', 'lastBetBlockNumber', '>', '=', 'minimumNumberOfBlocksToEndGame', '&', '&', 'lastBetBlockNumber', '!', '=', '0', '{', 'processEndGame', 'betAmount', ';', '}', 'else', 'if', 'lastBetBlockNumber', '=', '=', '0', '{', 'initialBankrollGrowthAmount', '=', 'FixedPoint', '.', 'fromInt256', 'Int256', 'betAmount', '.', 'add', 'initialSeed', ';', '}', 'emit', 'Bet', 'msg', '.', 'sender', 'betAmount', 'currentBetNumber', 'currentGameNumber', ';', 'Player', '.', 'BettingRecord', 'memory', 'newBetRecord', '=', 'Player', '.', 'BettingRecord', 'msg', '.', 'sender', 'currentGameNumber', 'betAmount', 'currentBetNumber', 'currentPot', '.', 'sub', 'initialSeed', '0', '0', 'true', ';', 'Player', '.', 'Data', 'storage', 'currentPlayer', '=', 'playerCollection', '[', 'msg', '.', 'sender', ']', ';', 'currentPlayer', '.', 'insertBettingRecord', 'newBetRecord', ';', 'Player', '.', 'BettingRecord', 'memory', 'oldGameUnprocessedBettingRecord', '=', 'currentGameBettingRecords', '.', 'getNextRecord', ';', 'currentGameBettingRecords', '.', 'pushRecord', 'newBetRecord', ';', 'if', 'oldGameUnprocessedBettingRecord', '.', 'isActive', '=', '=', 'true', '{', 'processBettingRecord', 'oldGameUnprocessedBettingRecord', ';', '}', 'currentPot', '=', 'currentPot', '.', 'add', 'betAmount', ';', 'currentBetNumber', '=', 'currentBetNumber', '.', 'add', '1', ';', 'lastBetBlockNumber', '=', 'block', '.', 'number', ';', 'FixedPoint', '.', 'Data', 'memory', 'currentGameSize', '=', 'FixedPoint', '.', 'fromInt256', 'Int256', 'currentPot', ';', 'FixedPoint', '.', 'Data', 'memory', 'expectedGameSize', '=', 'currentMiningDifficulty', '.', 'mul', 'kExpectedFirstGameSize', ';', 'minimumNumberOfBlocksToEndGame', '=', 'calcNumberOfBlocksUntilGameEnds', 'currentGameSize', 'expectedGameSize', '.', 'toUInt256Raw', ';', 'minimumWager', '=', 'calcMinimumBetSize', 'currentGameSize', 'expectedGameSize', '.', 'toUInt256Raw', ';', '}']
['function', '_spinTokens', 'TKN', '_tkn', 'private', '{', 'require', 'gameActive', ';', 'require', '_zthToken', 'msg', '.', 'sender', ';', 'require', 'validTokenBet', '[', '_tkn', '.', 'value', ']', ';', 'require', 'jackpotGuard', '_tkn', '.', 'value', ';', 'require', '_tkn', '.', 'value', '<', '2', '*', '*', '200', '-', '1', ';', 'require', 'block', '.', 'number', '<', '2', '*', '*', '48', '-', '1', ';', 'address', '_customerAddress', '=', '_tkn', '.', 'sender', ';', 'uint', '_wagered', '=', '_tkn', '.', 'value', ';', 'playerSpin', 'memory', 'spin', '=', 'playerSpins', '[', '_tkn', '.', 'sender', ']', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', '_wagered', ';', 'require', 'block', '.', 'number', '!', '=', 'spin', '.', 'blockn', ';', 'if', 'spin', '.', 'blockn', '!', '=', '0', '{', '_finishSpin', '_tkn', '.', 'sender', ';', '}', 'spin', '.', 'blockn', '=', 'uint48', 'block', '.', 'number', ';', 'spin', '.', 'tokenValue', '=', 'uint200', '_wagered', ';', 'playerSpins', '[', '_tkn', '.', 'sender', ']', '=', 'spin', ';', 'totalSpins', '+', '=', '1', ';', 'totalZTHWagered', '+', '=', '_wagered', ';', 'emit', 'TokensWagered', '_customerAddress', '_wagered', ';', '}']
['function', 'startAuction', 'public', 'onlyOwner', '{', 'require', 'status', '=', '=', 'state', '.', 'pending', ';', 'status', '=', 'state', '.', 'active', ';', 'emit', 'Started', 'block', '.', 'number', ';', '}']
['function', 'endAuction', 'public', 'onlyOwner', '{', 'require', 'status', '=', '=', 'state', '.', 'active', ';', 'status', '=', 'state', '.', 'ended', ';', 'emit', 'Ended', 'block', '.', 'number', ';', '}']
['function', 'appendDecryptedBid', 'uint', '_nonce', 'uint', '_index', 'uint', '_bid_id', 'address', '_investor_address', 'uint', '_share_price', 'uint', '_shares_count', 'uint', '_transfered_token', 'onlyOwner', 'public', '{', 'require', 'status', '=', '=', 'state', '.', 'ended', ';', 'require', 'fundraise_defined', ';', 'require', 'bids', '[', '_index', ']', '.', 'exist', '=', '=', 'true', ';', 'require', 'bids', '[', '_index', ']', '.', 'is_decrypted', '=', '=', 'false', ';', 'require', 'bids', '[', '_index', ']', '.', 'is_burned', '=', '=', 'false', ';', 'require', '_share_price', '>', '0', ';', 'require', '_shares_count', '>', '0', ';', 'require', '_transfered_token', '>', '=', 'convert_valuation_to_art', '_shares_count', '.', 'mul', '_share_price', 'bids', '[', '_index', ']', '.', 'art_price', ';', 'if', 'bids_sorted_count', '>', '0', '{', 'BidData', 'memory', 'previous_bid_data', '=', 'bids_sorted', '[', 'bids_sorted_count', '-', '1', ']', ';', 'require', '_share_price', '<', '=', 'previous_bid_data', '.', 'share_price', ';', 'if', '_share_price', '=', '=', 'previous_bid_data', '.', 'share_price', '{', 'require', '_index', '>', 'previous_bid_data', '.', 'origin_index', ';', '}', '}', 'require', 'getBidHash', '_nonce', '_bid_id', '_investor_address', '_share_price', '_shares_count', '=', '=', 'bids', '[', '_index', ']', '.', 'bid_hash', ';', 'uint', '_transfer_amount', '=', '_share_price', '.', 'mul', '_shares_count', ';', 'BidData', 'memory', 'bid_data', '=', 'BidData', '_index', '_bid_id', '_investor_address', '_share_price', '_shares_count', '_transfer_amount', '_transfered_token', '0', '0', 'false', ';', 'bids', '[', '_index', ']', '.', 'is_decrypted', '=', 'true', ';', 'if', '_share_price', '>', '=', 'min_share_price', '{', 'bids', '[', '_index', ']', '.', 'will_compute', '=', 'true', ';', 'bids_sorted', '[', 'bids_sorted_count', ']', '=', 'bid_data', ';', 'bids_sorted_count', '+', '+', ';', 'emit', 'BidDecrypted', '_index', 'true', ';', '}', 'else', '{', 'bids', '[', '_index', ']', '.', 'will_compute', '=', 'false', ';', 'bids_ignored', '[', 'bids_ignored_count', ']', '=', 'bid_data', ';', 'bids_ignored_count', '+', '+', ';', 'emit', 'BidDecrypted', '_index', 'false', ';', '}', 'bids_decrypted', '[', 'bids_decrypted_count', ']', '=', '_index', ';', 'bids_decrypted_count', '+', '+', ';', 'if', 'bids_decrypted_count', '=', '=', 'bids_count', '{', 'emit', 'Decrypted', 'block', '.', 'number', 'bids_decrypted_count', '.', 'sub', 'bids_burned_count', 'bids_burned_count', ';', 'status', '=', 'state', '.', 'decrypted', ';', '}', '}']
['function', 'addVersion', 'address', '_caller', 'string', '_name', 'string', '_changelog', 'noValue', 'checkAccess', 'admin', 'returns', 'bool', '{', 'if', 'versions', '[', '_caller', ']', '!', '=', '0', '{', 'return', 'false', ';', '}', 'if', 'bytes', '_name', '.', 'length', '=', '=', '0', '{', 'return', 'false', ';', '}', 'if', 'bytes', '_changelog', '.', 'length', '=', '=', '0', '{', 'return', 'false', ';', '}', 'uint', 'version', '=', '+', '+', 'latestVersion', ';', 'versions', '[', '_caller', ']', '=', 'version', ';', 'versionInfo', '[', 'version', ']', '=', 'VersionInfo', 'block', '.', 'number', 'msg', '.', 'sender', '_caller', '_name', '_changelog', ';', 'return', 'true', ';', '}']
['function', 'getTargetBNumber', 'view', 'isHuman', 'public', 'returns', 'uint', '{', 'uint', 'n', ';', 'n', '=', 'blockInterval', '*', 'predictBlockInterval', '+', 'block', '.', 'number', '/', 'blockInterval', ';', 'return', 'n', ';', '}']
['function', 'guess', 'uint', '[', ']', '_numbers', 'payable', 'isHuman', 'public', 'returns', 'uint', '{', 'require', 'msg', '.', 'value', '>', '=', '_numbers', '.', 'length', '*', '0', '.', '05', 'ether', ';', 'uint', 'n', '=', 'blockInterval', '*', 'predictBlockInterval', '+', 'block', '.', 'number', '/', 'blockInterval', ';', 'for', 'uint', '_i', '=', '0', ';', '_i', '<', '_numbers', '.', 'length', ';', '_i', '+', '+', '{', 'bnumber', 'memory', 'b', ';', 'b', '.', 'addr', '=', 'msg', '.', 'sender', ';', 'b', '.', 'number', '=', '_numbers', '[', '_i', ']', ';', 'b', '.', 'value', '=', 'msg', '.', 'value', '/', '_numbers', '.', 'length', ';', 'b', '.', 'result', '=', '-', '1', ';', 'bets', '[', 'n', ']', '.', 'push', 'b', ';', '}', 'if', 'utils', '.', 'inArray', 'playerBetBNumber', '[', 'msg', '.', 'sender', ']', 'n', '=', '=', 'false', '{', 'playerBetBNumber', '[', 'msg', '.', 'sender', ']', '.', 'push', 'n', ';', '}', 'emit', 'guessEvt', 'msg', '.', 'sender', '_numbers', 'msg', '.', 'value', ';', 'return', '_numbers', '.', 'length', ';', '}']
['function', 'draw', 'uint', '_blockNumber', 'uint', '_blockTimestamp', 'public', 'onlyOwner', 'returns', 'uint', '{', 'require', 'block', '.', 'number', '>', '=', 'curOpenBNumber', '+', 'blockInterval', ';', 'curOpenBNumber', '=', '_blockNumber', ';', 'uint', 'result', '=', '_blockTimestamp', '%', 'numberRange', ';', 'winResult', '[', '_blockNumber', ']', '=', 'result', ';', 'for', 'uint', '_i', '=', '0', ';', '_i', '<', 'bets', '[', '_blockNumber', ']', '.', 'length', ';', '_i', '+', '+', '{', 'if', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'number', '=', '=', 'result', '{', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'result', '=', '1', ';', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', '=', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'value', '*', 'odds', ';', 'emit', 'winnersEvt', '_blockNumber', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'addr', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'value', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', ';', 'withdraw', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'addr', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', ';', '}', 'else', '{', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'result', '=', '0', ';', 'bets', '[', '_blockNumber', ']', '[', '_i', ']', '.', 'prize', '=', '0', ';', '}', '}', 'emit', 'drawEvt', '_blockNumber', 'curOpenBNumber', ';', 'return', 'result', ';', '}']
['function', 'isTransferAllowed', 'address', '_from', 'uint256', '_value', 'public', 'view', 'returns', 'bool', 'status', '{', 'uint256', 'senderBalance', '=', 'balanceOf', '_from', ';', 'if', 'transferFrozen', '=', '=', 'true', '|', '|', 'senderBalance', '<', '_value', '{', 'return', 'false', ';', '}', 'uint256', 'lockedBalance', '=', 'lockedBalancesReleasedAfterOneYear', '[', '_from', ']', ';', 'if', 'lockedBalance', '>', '0', '&', '&', 'senderBalance', '.', 'sub', '_value', '<', 'lockedBalance', '{', 'uint256', 'unlockTime', '=', 'crowdSaleEndTime', '+', '1', 'years', ';', 'if', 'crowdSaleEndTime', '=', '=', '0', '|', '|', 'block', '.', 'timestamp', '<', 'unlockTime', '{', 'return', 'false', ';', '}', 'uint256', 'secsFromUnlock', '=', 'block', '.', 'timestamp', '.', 'sub', 'unlockTime', ';', 'uint256', 'months', '=', 'secsFromUnlock', '/', '30', 'days', ';', 'if', 'months', '>', '12', '{', 'months', '=', '12', ';', '}', 'uint256', 'tokensPerMonth', '=', 'lockedBalance', '/', '12', ';', 'uint256', 'unlockedBalance', '=', 'tokensPerMonth', '.', 'mul', 'months', ';', 'uint256', 'actualLockedBalance', '=', 'lockedBalance', '.', 'sub', 'unlockedBalance', ';', 'if', 'senderBalance', '.', 'sub', '_value', '<', 'actualLockedBalance', '{', 'return', 'false', ';', '}', '}', 'if', 'block', '.', 'timestamp', '<', 'crowdSaleEndTime', '&', '&', 'crowdSale', '!', '=', 'address', '0', '&', '&', 'crowdSale', '.', 'isTransferAllowed', '_from', '_value', '=', '=', 'false', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
['function', 'transferFrom', 'address', '_from', 'address', '_to', 'uint', '_value', 'public', 'returns', 'bool', 'success', '{', 'require', 'crowdSaleEndTime', '<', '=', 'block', '.', 'timestamp', '&', '&', 'isTransferAllowed', '_from', '_value', ';', 'return', 'super', '.', 'transferFrom', '_from', '_to', '_value', ';', '}']
['function', 'approve', 'address', '_spender', 'uint256', '_value', 'public', 'returns', 'bool', 'success', '{', 'require', 'crowdSaleEndTime', '<', '=', 'block', '.', 'timestamp', ';', 'return', 'super', '.', 'approve', '_spender', '_value', ';', '}']
['function', 'increaseApproval', 'address', '_spender', 'uint', '_addedValue', 'public', 'returns', 'bool', 'success', '{', 'require', 'crowdSaleEndTime', '<', '=', 'block', '.', 'timestamp', ';', 'return', 'super', '.', 'increaseApproval', '_spender', '_addedValue', ';', '}']
['function', 'decreaseApproval', 'address', '_spender', 'uint', '_subtractedValue', 'public', 'returns', 'bool', 'success', '{', 'require', 'crowdSaleEndTime', '<', '=', 'block', '.', 'timestamp', ';', 'return', 'super', '.', 'decreaseApproval', '_spender', '_subtractedValue', ';', '}']
['function', 'burnUnsoldTokens', 'uint256', '_amount', 'public', 'onlyCrowdSale', '{', 'require', 'block', '.', 'timestamp', '>', 'crowdSaleEndTime', ';', 'maxSupply', '=', 'maxSupply', '.', 'sub', '_amount', ';', 'MaxSupplyBurned', '_amount', ';', '}']
['function', 'setEtherInUSD', 'string', '_price', 'public', 'onlyAllowedMultivests', 'msg', '.', 'sender', '{', 'bytes', 'memory', 'bytePrice', '=', 'bytes', '_price', ';', 'uint256', 'dot', '=', 'bytePrice', '.', 'length', '.', 'sub', 'uint256', '6', ';', 'require', '0x2e', '=', '=', 'uint', 'bytePrice', '[', 'dot', ']', ';', 'uint256', 'newPrice', '=', 'uint256', '10', '*', '*', '23', '.', 'div', 'parseInt', '_price', '5', ';', 'require', 'newPrice', '>', '0', ';', 'etherPriceInUSD', '=', 'parseInt', '_price', '5', ';', 'priceUpdateAt', '=', 'block', '.', 'timestamp', ';', 'NewPriceTicker', '_price', ';', '}']
['function', 'withinPeriod', 'public', 'view', 'returns', 'bool', '{', 'return', 'block', '.', 'timestamp', '>', '=', 'startTime', '&', '&', 'block', '.', 'timestamp', '<', '=', 'endTime', ';', '}']
['function', 'getActiveTier', 'public', 'view', 'returns', 'uint256', '{', 'for', 'uint256', 'i', '=', '0', ';', 'i', '<', 'tiers', '.', 'length', ';', 'i', '+', '+', '{', 'if', 'block', '.', 'timestamp', '>', '=', 'tiers', '[', 'i', ']', '.', 'startTime', '&', '&', 'block', '.', 'timestamp', '<', '=', 'tiers', '[', 'i', ']', '.', 'endTime', '{', 'return', 'i', ';', '}', '}', 'return', 'uint256', 'tiers', '.', 'length', ';', '}']
['function', 'calculateTokensAmount', 'uint256', '_value', 'public', 'view', 'returns', 'uint256', 'tokenAmount', 'uint256', 'usdAmount', '{', 'if', '_value', '=', '=', '0', '{', 'return', '0', '0', ';', '}', 'uint256', 'activeTier', '=', 'getActiveTier', ';', 'if', 'activeTier', '=', '=', 'tiers', '.', 'length', '{', 'if', 'endTime', '<', 'block', '.', 'timestamp', '{', 'return', '0', '0', ';', '}', 'if', 'startTime', '>', 'block', '.', 'timestamp', '{', 'activeTier', '=', 'PRE_ICO_TIER_FIRST', ';', '}', '}', 'usdAmount', '=', '_value', '.', 'mul', 'etherPriceInUSD', ';', 'tokenAmount', '=', 'usdAmount', '.', 'div', 'price', '*', '100', '-', 'tiers', '[', 'activeTier', ']', '.', 'discount', '/', '100', ';', 'usdAmount', '=', 'usdAmount', '.', 'div', 'uint256', '10', '*', '*', '18', ';', 'if', 'usdAmount', '<', 'minPurchase', '{', 'return', '0', '0', ';', '}', '}']
['function', 'calculateEthersAmount', 'uint256', '_tokens', 'public', 'view', 'returns', 'uint256', 'ethers', 'uint256', 'usdAmount', '{', 'if', '_tokens', '=', '=', '0', '{', 'return', '0', '0', ';', '}', 'uint256', 'activeTier', '=', 'getActiveTier', ';', 'if', 'activeTier', '=', '=', 'tiers', '.', 'length', '{', 'if', 'endTime', '<', 'block', '.', 'timestamp', '{', 'return', '0', '0', ';', '}', 'if', 'startTime', '>', 'block', '.', 'timestamp', '{', 'activeTier', '=', 'PRE_ICO_TIER_FIRST', ';', '}', '}', 'usdAmount', '=', '_tokens', '.', 'mul', 'price', '*', '100', '-', 'tiers', '[', 'activeTier', ']', '.', 'discount', '/', '100', ';', 'ethers', '=', 'usdAmount', '.', 'div', 'etherPriceInUSD', ';', 'if', 'ethers', '<', 'getMinEthersInvestment', '{', 'return', '0', '0', ';', '}', 'usdAmount', '=', 'usdAmount', '.', 'div', 'uint256', '10', '*', '*', '18', ';', '}']
['function', 'burnUnsoldTokens', 'public', 'onlyOwner', '{', 'if', 'block', '.', 'timestamp', '>', '=', 'endTime', '&', '&', 'maxTokenSupply', '>', 'soldTokens', '{', 'token', '.', 'burnUnsoldTokens', 'maxTokenSupply', '.', 'sub', 'soldTokens', ';', 'maxTokenSupply', '=', 'soldTokens', ';', '}', '}']
['function', 'isRefundPossible', 'public', 'view', 'returns', 'bool', '{', 'if', 'isActive', '|', '|', 'block', '.', 'timestamp', '<', 'startTime', '|', '|', 'collectedUSD', '.', 'add', 'preICOStats', '.', 'collectedUSD', '>', '=', 'softCap', '{', 'return', 'false', ';', '}', 'return', 'true', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'startAuction', 'public', 'isOwner', 'atStage', 'Stages', '.', 'AuctionSetUp', '{', 'stage', '=', 'Stages', '.', 'AuctionStarted', ';', 'auction_start_time', '=', 'now', ';', 'start_block', '=', 'block', '.', 'number', ';', 'AuctionStarted', 'auction_start_time', 'start_block', ';', '}']
['function', 'buyRaffleTicket', 'uint256', 'amount', 'external', '{', 'require', 'raffleEndTime', '>', '=', 'block', '.', 'timestamp', ';', 'require', 'amount', '>', '0', '&', '&', 'amount', '<', '=', 'MAX_LIMIT', ';', 'uint256', 'ticketsCost', '=', 'SafeMath', '.', 'mul', 'RAFFLE_TICKET_BASE_PRICE', 'amount', ';', 'require', 'cards', '.', 'balanceOf', 'msg', '.', 'sender', '>', '=', 'ticketsCost', ';', 'cards', '.', 'updatePlayersCoinByPurchase', 'msg', '.', 'sender', 'ticketsCost', ';', 'TicketPurchases', 'storage', 'purchases', '=', 'ticketsBoughtByPlayer', '[', 'msg', '.', 'sender', ']', ';', 'if', 'purchases', '.', 'raffleRareId', '!', '=', 'raffleRareId', '{', 'purchases', '.', 'numPurchases', '=', '0', ';', 'purchases', '.', 'raffleRareId', '=', 'raffleRareId', ';', 'rafflePlayers', '[', 'raffleRareId', ']', '.', 'push', 'msg', '.', 'sender', ';', '}', 'if', 'purchases', '.', 'numPurchases', '=', '=', 'purchases', '.', 'ticketsBought', '.', 'length', '{', 'purchases', '.', 'ticketsBought', '.', 'length', '=', 'SafeMath', '.', 'add', 'purchases', '.', 'ticketsBought', '.', 'length', '1', ';', '}', 'purchases', '.', 'ticketsBought', '[', 'purchases', '.', 'numPurchases', '+', '+', ']', '=', 'TicketPurchase', 'raffleTicketsBought', 'raffleTicketsBought', '+', 'amount', '-', '1', ';', 'raffleTicketsBought', '=', 'SafeMath', '.', 'add', 'raffleTicketsBought', 'amount', ';', 'UnitBought', 'msg', '.', 'sender', 'raffleRareId', 'amount', ';', '}']
['function', 'startRareRaffle', 'uint256', 'endTime', 'uint256', 'rareId', 'external', 'onlyAdmin', '{', 'require', 'rareId', '>', '0', ';', 'require', 'rare', '.', 'getRareItemsOwner', 'rareId', '=', '=', 'getRareAddress', ';', 'require', 'block', '.', 'timestamp', '<', 'endTime', ';', 'if', 'raffleRareId', '!', '=', '0', '{', 'require', 'raffleWinner', '!', '=', '0', ';', '}', 'raffleWinningTicketSelected', '=', 'false', ';', 'raffleTicketThatWon', '=', '0', ';', 'raffleWinner', '=', '0', ';', 'raffleTicketsBought', '=', '0', ';', 'raffleEndTime', '=', 'endTime', ';', 'raffleRareId', '=', 'rareId', ';', '}']
['function', 'awardRafflePrize', 'address', 'checkWinner', 'uint256', 'checkIndex', 'external', '{', 'require', 'raffleEndTime', '<', 'block', '.', 'timestamp', ';', 'require', 'raffleWinner', '=', '=', '0', ';', 'require', 'rare', '.', 'getRareItemsOwner', 'raffleRareId', '=', '=', 'getRareAddress', ';', 'if', '!', 'raffleWinningTicketSelected', '{', 'drawRandomWinner', ';', '}', 'if', 'checkWinner', '!', '=', '0', '{', 'TicketPurchases', 'storage', 'tickets', '=', 'ticketsBoughtByPlayer', '[', 'checkWinner', ']', ';', 'if', 'tickets', '.', 'numPurchases', '>', '0', '&', '&', 'checkIndex', '<', 'tickets', '.', 'numPurchases', '&', '&', 'tickets', '.', 'raffleRareId', '=', '=', 'raffleRareId', '{', 'TicketPurchase', 'storage', 'checkTicket', '=', 'tickets', '.', 'ticketsBought', '[', 'checkIndex', ']', ';', 'if', 'raffleTicketThatWon', '>', '=', 'checkTicket', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'checkTicket', '.', 'endId', '{', 'assignRafflePrize', 'checkWinner', ';', 'return', ';', '}', '}', '}', 'for', 'uint256', 'i', '=', '0', ';', 'i', '<', 'rafflePlayers', '[', 'raffleRareId', ']', '.', 'length', ';', 'i', '+', '+', '{', 'address', 'player', '=', 'rafflePlayers', '[', 'raffleRareId', ']', '[', 'i', ']', ';', 'TicketPurchases', 'storage', 'playersTickets', '=', 'ticketsBoughtByPlayer', '[', 'player', ']', ';', 'uint256', 'endIndex', '=', 'playersTickets', '.', 'numPurchases', '-', '1', ';', 'if', 'raffleTicketThatWon', '>', '=', 'playersTickets', '.', 'ticketsBought', '[', '0', ']', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'playersTickets', '.', 'ticketsBought', '[', 'endIndex', ']', '.', 'endId', '{', 'for', 'uint256', 'j', '=', '0', ';', 'j', '<', 'playersTickets', '.', 'numPurchases', ';', 'j', '+', '+', '{', 'TicketPurchase', 'storage', 'playerTicket', '=', 'playersTickets', '.', 'ticketsBought', '[', 'j', ']', ';', 'if', 'raffleTicketThatWon', '>', '=', 'playerTicket', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'playerTicket', '.', 'endId', '{', 'assignRafflePrize', 'player', ';', 'return', ';', '}', '}', '}', '}', '}']
['function', 'drawRandomWinner', 'public', 'onlyAdmin', '{', 'require', 'raffleEndTime', '<', 'block', '.', 'timestamp', ';', 'require', '!', 'raffleWinningTicketSelected', ';', 'uint256', 'seed', '=', 'SafeMath', '.', 'add', 'raffleTicketsBought', 'block', '.', 'timestamp', ';', 'raffleTicketThatWon', '=', 'addmod', 'uint256', 'block', '.', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'raffleTicketsBought', ';', 'raffleWinningTicketSelected', '=', 'true', ';', '}']
['function', 'proofOfWork', 'uint256', 'nonce', 'public', '{', 'bytes8', 'n', '=', 'bytes8', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', ';', 'require', 'n', '>', '=', 'bytes8', 'difficulty', ';', 'uint256', 'timeSinceLastProof', '=', 'now', '-', 'timeOfLastProof', ';', 'require', 'timeSinceLastProof', '>', '=', '5', 'seconds', ';', 'balanceOf', '[', 'msg', '.', 'sender', ']', '+', '=', 'timeSinceLastProof', '/', '60', 'seconds', ';', 'difficulty', '=', 'difficulty', '*', '10', 'minutes', '/', 'timeSinceLastProof', '+', '1', ';', 'timeOfLastProof', '=', 'now', ';', 'currentChallenge', '=', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'saveRN', 'uint', '_block', 'public', '{', 'if', '_block', '<', 'block', '.', 'number', '&', '&', 'randomNumber', '[', '_block', ']', '=', '=', '0', '{', 'if', 'blockhash', '_block', '!', '=', '0x0', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', '_block', ';', 'else', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}', 'if', 'randomNumber', '[', '_block', ']', '!', '=', '0', '{', 'uint', 'rewardToSend', '=', 'reward', '[', '_block', ']', ';', 'reward', '[', '_block', ']', '=', '0', ';', 'msg', '.', 'sender', '.', 'send', 'rewardToSend', ';', '}', '}']
['function', 'passPeriod', 'public', '{', 'require', 'now', '-', 'lastPeriodChange', '>', '=', 'timePerPeriod', '[', 'uint8', 'period', ']', ';', 'if', 'period', '=', '=', 'Period', '.', 'Activation', '{', 'rnBlock', '=', 'block', '.', 'number', '+', '1', ';', 'rng', '.', 'requestRN', 'rnBlock', ';', 'period', '=', 'Period', '.', 'Draw', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Draw', '{', 'randomNumber', '=', 'rng', '.', 'getUncorrelatedRN', 'rnBlock', ';', 'require', 'randomNumber', '!', '=', '0', ';', 'period', '=', 'Period', '.', 'Vote', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Vote', '{', 'period', '=', 'Period', '.', 'Appeal', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Appeal', '{', 'period', '=', 'Period', '.', 'Execution', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Execution', '{', 'period', '=', 'Period', '.', 'Activation', ';', '+', '+', 'session', ';', 'segmentSize', '=', '0', ';', 'rnBlock', '=', '0', ';', 'randomNumber', '=', '0', ';', '}', 'lastPeriodChange', '=', 'now', ';', 'NewPeriod', 'period', 'session', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'saveRN', 'uint', '_block', 'public', '{', 'if', '_block', '<', 'block', '.', 'number', '&', '&', 'randomNumber', '[', '_block', ']', '=', '=', '0', '{', 'if', 'blockhash', '_block', '!', '=', '0x0', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', '_block', ';', 'else', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}', 'if', 'randomNumber', '[', '_block', ']', '!', '=', '0', '{', 'uint', 'rewardToSend', '=', 'reward', '[', '_block', ']', ';', 'reward', '[', '_block', ']', '=', '0', ';', 'msg', '.', 'sender', '.', 'send', 'rewardToSend', ';', '}', '}']
['function', 'passPeriod', 'public', '{', 'require', 'now', '-', 'lastPeriodChange', '>', '=', 'timePerPeriod', '[', 'uint8', 'period', ']', ';', 'if', 'period', '=', '=', 'Period', '.', 'Activation', '{', 'rnBlock', '=', 'block', '.', 'number', '+', '1', ';', 'rng', '.', 'requestRN', 'rnBlock', ';', 'period', '=', 'Period', '.', 'Draw', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Draw', '{', 'randomNumber', '=', 'rng', '.', 'getUncorrelatedRN', 'rnBlock', ';', 'require', 'randomNumber', '!', '=', '0', ';', 'period', '=', 'Period', '.', 'Vote', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Vote', '{', 'period', '=', 'Period', '.', 'Appeal', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Appeal', '{', 'period', '=', 'Period', '.', 'Execution', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Execution', '{', 'period', '=', 'Period', '.', 'Activation', ';', '+', '+', 'session', ';', 'segmentSize', '=', '0', ';', 'rnBlock', '=', '0', ';', 'randomNumber', '=', '0', ';', '}', 'lastPeriodChange', '=', 'now', ';', 'NewPeriod', 'period', 'session', ';', '}']
['function', 'proofOfWork', 'uint256', 'nonce', 'public', '{', 'bytes8', 'n', '=', 'bytes8', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', ';', 'require', 'n', '>', '=', 'bytes8', 'difficulty', ';', 'uint256', 'timeSinceLastProof', '=', 'now', '-', 'timeOfLastProof', ';', 'require', 'timeSinceLastProof', '>', '=', '5', 'seconds', ';', 'balanceOf', '[', 'msg', '.', 'sender', ']', '+', '=', 'timeSinceLastProof', '/', '60', 'seconds', ';', 'difficulty', '=', 'difficulty', '*', '10', 'minutes', '/', 'timeSinceLastProof', '+', '1', ';', 'timeOfLastProof', '=', 'now', ';', 'currentChallenge', '=', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}']
['function', 'proofOfWork', 'uint256', 'nonce', 'public', '{', 'bytes8', 'n', '=', 'bytes8', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', ';', 'require', 'n', '>', '=', 'bytes8', 'difficulty', ';', 'uint256', 'timeSinceLastProof', '=', 'now', '-', 'timeOfLastProof', ';', 'require', 'timeSinceLastProof', '>', '=', '5', 'seconds', ';', 'balanceOf', '[', 'msg', '.', 'sender', ']', '+', '=', 'timeSinceLastProof', '/', '60', 'seconds', ';', 'difficulty', '=', 'difficulty', '*', '10', 'minutes', '/', 'timeSinceLastProof', '+', '1', ';', 'timeOfLastProof', '=', 'now', ';', 'currentChallenge', '=', 'keccak256', 'abi', '.', 'encodePacked', 'nonce', 'currentChallenge', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'today', 'private', 'view', 'returns', 'uint', '{', 'return', 'block', '.', 'timestamp', '/', '1', 'days', ';', '}', 'uint', 'public', 'm_dailyLimit', ';', 'uint', 'public', 'm_spentToday', ';', 'uint', 'public', 'm_lastDay', ';', '}']
['function', 'transferETH', 'address', '_to', 'uint', '_value', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', '_to', '.', 'transfer', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmETH', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'emit', 'ConfirmationETHNeeded', '_r', 'msg', '.', 'sender', '_value', '_to', ';', '}', '}']
['function', 'transferERC20', 'address', '_to', 'uint', '_value', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', 'erc20', '.', 'transfer', '_to', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmERC20', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'm_txs', '[', '_r', ']', '.', 'token', '=', 'erc20', ';', 'emit', 'ConfirmationERC20Needed', '_r', 'msg', '.', 'sender', '_value', '_to', 'erc20', ';', '}', '}']
['function', 'create', 'uint8', 'data1', 'uint8', 'data2', 'uint64', 'data3', 'uint64', 'data4', 'public', 'returns', 'uint256', '_tokenId', '{', 'string', 'memory', 'tokenUri', '=', 'createTokenUri', 'data1', 'data2', 'data3', 'data4', ';', 'Token', 'memory', '_newToken', '=', 'Token', '{', 'data1', 'data1', 'data2', 'data2', 'data3', 'data3', 'data4', 'data4', 'startBlock', 'uint64', 'block', '.', 'number', '}', ';', '_tokenId', '=', 'tokens', '.', 'push', '_newToken', '-', '1', ';', '_mint', 'msg', '.', 'sender', '_tokenId', ';', '_setTokenURI', '_tokenId', 'tokenUri', ';', 'tokenUri', '=', 'strConcat', 'tokenUri', '-', ';', 'string', 'memory', 'tokenIdb', '=', 'uint2str', '_tokenId', ';', 'tokenUri', '=', 'strConcat', 'tokenUri', 'tokenIdb', ';', 'emit', 'Create', '_tokenId', 'msg', '.', 'sender', 'data1', 'data2', 'data3', 'data4', '_newToken', '.', 'startBlock', 'tokenUri', ';', 'return', '_tokenId', ';', '}']
['function', 'submitLocation', 'uint', 'encryptKey', 'uint8', 'locationNumber', 'public', 'payable', '{', 'require', 'encryptKey', '!', '=', '0', ';', 'require', 'locationNumber', '<', 'locations', '.', 'length', ';', 'if', '!', 'grace', '{', 'require', 'msg', '.', 'value', '>', '=', 'cost', ';', 'uint', 'contribution', '=', 'cost', '-', 'cost', '/', '10', ';', 'ownersBalance', '+', '=', 'cost', '-', 'contribution', ';', 'pot', '+', '=', 'contribution', ';', '}', 'hunters', '[', 'msg', '.', 'sender', ']', '[', 'locationNumber', ']', '=', 'KeyLog', 'encryptKey', 'block', '.', 'number', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'saveRN', 'uint', '_block', 'public', '{', 'if', '_block', '<', 'block', '.', 'number', '&', '&', 'randomNumber', '[', '_block', ']', '=', '=', '0', '{', 'if', 'blockhash', '_block', '!', '=', '0x0', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', '_block', ';', 'else', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}', 'if', 'randomNumber', '[', '_block', ']', '!', '=', '0', '{', 'uint', 'rewardToSend', '=', 'reward', '[', '_block', ']', ';', 'reward', '[', '_block', ']', '=', '0', ';', 'msg', '.', 'sender', '.', 'send', 'rewardToSend', ';', '}', '}']
['function', 'passPeriod', 'public', '{', 'require', 'now', '-', 'lastPeriodChange', '>', '=', 'timePerPeriod', '[', 'uint8', 'period', ']', ';', 'if', 'period', '=', '=', 'Period', '.', 'Activation', '{', 'rnBlock', '=', 'block', '.', 'number', '+', '1', ';', 'rng', '.', 'requestRN', 'rnBlock', ';', 'period', '=', 'Period', '.', 'Draw', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Draw', '{', 'randomNumber', '=', 'rng', '.', 'getUncorrelatedRN', 'rnBlock', ';', 'require', 'randomNumber', '!', '=', '0', ';', 'period', '=', 'Period', '.', 'Vote', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Vote', '{', 'period', '=', 'Period', '.', 'Appeal', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Appeal', '{', 'period', '=', 'Period', '.', 'Execution', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Execution', '{', 'period', '=', 'Period', '.', 'Activation', ';', '+', '+', 'session', ';', 'segmentSize', '=', '0', ';', 'rnBlock', '=', '0', ';', 'randomNumber', '=', '0', ';', '}', 'lastPeriodChange', '=', 'now', ';', 'NewPeriod', 'period', 'session', ';', '}']
['function', 'today', 'private', 'view', 'returns', 'uint', '{', 'return', 'block', '.', 'timestamp', '/', '1', 'days', ';', '}', 'uint', 'public', 'm_dailyLimit', ';', 'uint', 'public', 'm_spentToday', ';', 'uint', 'public', 'm_lastDay', ';', '}']
['function', 'transferETH', 'address', '_to', 'uint', '_value', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', '_to', '.', 'transfer', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmETH', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'emit', 'ConfirmationETHNeeded', '_r', 'msg', '.', 'sender', '_value', '_to', ';', '}', '}']
['function', 'transferERC20', 'address', '_to', 'uint', '_value', 'address', '_token', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', 'ERC20Basic', 'token', '=', 'ERC20Basic', '_token', ';', 'token', '.', 'transfer', '_to', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmERC20', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'm_txs', '[', '_r', ']', '.', 'token', '=', '_token', ';', 'emit', 'ConfirmationERC20Needed', '_r', 'msg', '.', 'sender', '_value', '_to', 'token', ';', '}', '}']
['function', 'setDefconLevel', 'uint16', '_defcon', 'onlyOwner', 'public', '{', 'defcon', '=', '_defcon', ';', 'Defcon', 'uint64', 'block', '.', 'number', '_defcon', ';', '}']
['function', '_payoutWinner', 'uint', 'winner', 'uint', 'loser', 'uint', 'take', 'uint', 'fee', 'private', 'returns', 'bool', '{', 'BigBankBet', 'block', '.', 'number', 'betBanks', '[', 'winner', ']', '.', 'owner', 'betBanks', '[', 'loser', ']', '.', 'owner', 'winner', 'loser', 'take', '.', 'sub', 'fee', ';', 'address', 'winnerAddr', '=', 'betBanks', '[', 'winner', ']', '.', 'owner', ';', '_endBetListing', 'winner', ';', '_endBetListing', 'loser', ';', 'userBank', '[', 'winnerAddr', ']', '=', 'userBank', '[', 'winnerAddr', ']', '.', 'add', 'take', '.', 'sub', 'fee', ';', 'return', 'true', ';', '}']
['function', '_random', 'private', 'view', 'returns', 'uint8', '{', 'return', 'uint8', 'uint256', 'keccak256', 'block', '.', 'timestamp', 'block', '.', 'difficulty', '%', '2', ';', '}']
['function', 'changeOwner', 'address', '_from', 'address', '_to', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'if', 'isOwner', '_to', 'return', ';', 'uint', 'ownerIndex', '=', 'm_ownerIndex', '[', 'uint', '_from', ']', ';', 'if', 'ownerIndex', '=', '=', '0', 'return', ';', 'clearPending', ';', 'm_owners', '[', 'ownerIndex', ']', '=', 'uint', '_to', ';', 'm_ownerIndex', '[', 'uint', '_from', ']', '=', '0', ';', 'm_ownerIndex', '[', 'uint', '_to', ']', '=', 'ownerIndex', ';', 'emit', 'OwnerChanged', '_from', '_to', ';', '}']
['function', 'addOwner', 'address', '_owner', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'if', 'isOwner', '_owner', 'return', ';', 'clearPending', ';', 'if', 'm_numOwners', '>', '=', 'c_maxOwners', 'reorganizeOwners', ';', 'if', 'm_numOwners', '>', '=', 'c_maxOwners', 'return', ';', 'm_numOwners', '+', '+', ';', 'm_owners', '[', 'm_numOwners', ']', '=', 'uint', '_owner', ';', 'm_ownerIndex', '[', 'uint', '_owner', ']', '=', 'm_numOwners', ';', 'emit', 'OwnerAdded', '_owner', ';', '}']
['function', 'removeOwner', 'address', '_owner', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'uint', 'ownerIndex', '=', 'm_ownerIndex', '[', 'uint', '_owner', ']', ';', 'if', 'ownerIndex', '=', '=', '0', 'return', ';', 'if', 'm_required', '>', 'm_numOwners', '-', '1', 'return', ';', 'm_owners', '[', 'ownerIndex', ']', '=', '0', ';', 'm_ownerIndex', '[', 'uint', '_owner', ']', '=', '0', ';', 'clearPending', ';', 'reorganizeOwners', ';', 'emit', 'OwnerRemoved', '_owner', ';', '}']
['function', 'changeRequirement', 'uint', '_newRequired', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'if', '_newRequired', '>', 'm_numOwners', 'return', ';', 'm_required', '=', '_newRequired', ';', 'clearPending', ';', 'emit', 'RequirementChanged', '_newRequired', ';', '}']
['function', 'setDailyLimit', 'uint', '_newLimit', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'm_dailyLimit', '=', '_newLimit', ';', '}']
['function', 'resetSpentToday', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'm_spentToday', '=', '0', ';', '}']
['function', 'today', 'private', 'view', 'returns', 'uint', '{', 'return', 'block', '.', 'timestamp', '/', '1', 'days', ';', '}', 'uint', 'public', 'm_dailyLimit', ';', 'uint', 'public', 'm_spentToday', ';', 'uint', 'public', 'm_lastDay', ';', '}']
['function', 'kill', 'address', '_to', 'onlymanyowners', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', 'external', '{', 'selfdestruct', '_to', ';', '}']
['function', 'transferETH', 'address', '_to', 'uint', '_value', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', '_to', '.', 'transfer', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmETH', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'emit', 'ConfirmationETHNeeded', '_r', 'msg', '.', 'sender', '_value', '_to', ';', '}', '}']
['function', 'transferERC20', 'address', '_to', 'uint', '_value', 'address', '_token', 'external', 'onlyowner', 'returns', 'bytes32', '_r', '{', 'if', 'underLimit', '_value', '{', 'emit', 'SingleTransact', 'msg', '.', 'sender', '_value', '_to', ';', 'ERC20Basic', 'token', '=', 'ERC20Basic', '_token', ';', 'token', '.', 'transfer', '_to', '_value', ';', 'return', '0', ';', '}', '_r', '=', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'data', 'block', '.', 'number', ';', 'if', '!', 'confirmERC20', '_r', '&', '&', 'm_txs', '[', '_r', ']', '.', 'to', '=', '=', '0', '{', 'm_txs', '[', '_r', ']', '.', 'to', '=', '_to', ';', 'm_txs', '[', '_r', ']', '.', 'value', '=', '_value', ';', 'm_txs', '[', '_r', ']', '.', 'token', '=', '_token', ';', 'emit', 'ConfirmationERC20Needed', '_r', 'msg', '.', 'sender', '_value', '_to', 'token', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'if', 'profit', '>', 'maxProfit', '{', 'profit', '=', 'maxProfit', ';', '}', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'delete', 'playerRolls', '[', 'target', ']', ';', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'if', 'profit', '>', 'maxProfit', '{', 'profit', '=', 'maxProfit', ';', '}', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', 'returns', 'uint', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'require', 'roll', '.', 'blockn', '!', '=', 'block', '.', 'number', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '99', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', 'return', 'result', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', 'return', 'result', ';', '}', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '100', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '100', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', '}', '}']
['function', '_finishBet', 'bool', 'delete_it', 'address', 'target', 'private', '{', 'playerRoll', 'memory', 'roll', '=', 'playerRolls', '[', 'target', ']', ';', 'require', 'roll', '.', 'tokenValue', '>', '0', ';', 'uint', 'result', ';', 'if', 'block', '.', 'number', '-', 'roll', '.', 'blockn', '>', '255', '{', 'result', '=', '1000', ';', '}', 'else', '{', 'result', '=', 'random', '100', 'roll', '.', 'blockn', 'target', '+', '1', ';', '}', 'uint', 'rollUnder', '=', 'roll', '.', 'rollUnder', ';', 'if', 'result', '<', 'rollUnder', '{', 'uint', 'profit', '=', 'calculateProfit', 'roll', '.', 'tokenValue', 'rollUnder', ';', 'contractBalance', '=', 'contractBalance', '.', 'sub', 'profit', ';', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'true', ';', 'setMaxProfit', ';', 'if', 'delete_it', '{', 'delete', 'playerRolls', '[', 'target', ']', ';', '}', 'ZTHTKN', '.', 'transfer', 'target', 'profit', '+', 'roll', '.', 'tokenValue', ';', '}', 'else', '{', 'emit', 'LogResult', 'target', 'result', 'rollUnder', 'profit', 'roll', '.', 'tokenValue', 'false', ';', 'contractBalance', '=', 'contractBalance', '.', 'add', 'roll', '.', 'tokenValue', ';', 'setMaxProfit', ';', '}', '}']
['function', 'biddingClosed', 'public', 'view', 'returns', 'bool', '{', 'return', 'block', '.', 'number', '>', '=', 'gameEndBlock', ';', '}']
['function', 'Hacksig', 'uint256', 'nmbr', 'public', 'payable', '{', 'require', 'lasthack', '[', 'msg', '.', 'sender', ']', '<', 'block', '.', 'number', ';', 'require', 'nmbr', '<', 'totalsigs', ';', 'require', 'Multisigs', '[', 'nmbr', ']', '.', 'owner', '!', '=', 'msg', '.', 'sender', ';', 'require', 'msg', '.', 'value', '>', '=', 'Multisigs', '[', 'nmbr', ']', '.', 'hackingcost', '+', 'Multisigs', '[', 'nmbr', ']', '.', 'encryption', ';', 'Multisigs', '[', 'nmbr', ']', '.', 'owner', '=', 'msg', '.', 'sender', ';', 'Multisigs', '[', 'nmbr', ']', '.', 'hackingcost', '+', '+', ';', 'Multisigs', '[', 'nmbr', ']', '.', 'encryption', '=', '0', ';', 'lasthack', '[', 'msg', '.', 'sender', ']', '=', 'block', '.', 'number', ';', '}']
['function', 'goToNextState', 'internal', '{', 'bytes32', 'next', '=', 'states', '[', 'currentStateId', ']', '.', 'nextStateId', ';', 'require', 'next', '!', '=', '0', ';', 'currentStateId', '=', 'next', ';', 'for', 'uint256', 'i', '=', '0', ';', 'i', '<', 'states', '[', 'next', ']', '.', 'transitionCallbacks', '.', 'length', ';', 'i', '+', '+', '{', 'states', '[', 'next', ']', '.', 'transitionCallbacks', '[', 'i', ']', ';', '}', 'emit', 'Transition', 'next', 'block', '.', 'number', ';', '}']
['function', 'setStateStartTime', 'bytes32', '_stateId', 'uint256', '_timestamp', 'internal', '{', 'require', 'block', '.', 'timestamp', '<', '_timestamp', ';', 'if', 'startTime', '[', '_stateId', ']', '=', '=', '0', '{', 'addStartCondition', '_stateId', 'hasStartTimePassed', ';', '}', 'startTime', '[', '_stateId', ']', '=', '_timestamp', ';', 'emit', 'StateStartTimeSet', '_stateId', '_timestamp', ';', '}']
['function', 'hasStartTimePassed', 'bytes32', '_stateId', 'internal', 'returns', 'bool', '{', 'return', 'startTime', '[', '_stateId', ']', '<', '=', 'block', '.', 'timestamp', ';', '}']
['function', 'getRandom', 'internal', 'returns', 'uint256', '{', 'return', 'pSeed', '=', 'uint', 'keccak256', 'abi', '.', 'encodePacked', 'pSeed', 'blockhash', 'block', '.', 'number', '-', '1', 'blockhash', 'block', '.', 'number', '-', '3', 'blockhash', 'block', '.', 'number', '-', '5', 'blockhash', 'block', '.', 'number', '-', '7', ';', '}']
['function', 'trade', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'uint', 'amount', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', '&', '&', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', '<', '=', 'amountGet', 'throw', ';', 'tradeBalances', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'user', 'amount', ';', 'orderFills', '[', 'user', ']', '[', 'hash', ']', '=', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', ';', 'Trade', 'tokenGet', 'amount', 'tokenGive', 'amountGive', '*', 'amount', '/', 'amountGet', 'user', 'msg', '.', 'sender', ';', '}']
['function', 'availableVolume', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'constant', 'returns', 'uint', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', 'return', '0', ';', 'uint', 'available1', '=', 'safeSub', 'amountGet', 'orderFills', '[', 'user', ']', '[', 'hash', ']', ';', 'uint', 'available2', '=', 'safeMul', 'tokens', '[', 'tokenGive', ']', '[', 'user', ']', 'amountGet', '/', 'amountGive', ';', 'if', 'available1', '<', 'available2', 'return', 'available1', ';', 'return', 'available2', ';', '}']
['function', 'distribute', 'uint128', 'totalAmount', 'internal', '{', 'uint32', 'artworkId', ';', 'uint128', 'amount', '=', 'totalAmount', '*', '60', '/', '100', ';', 'uint128', 'valueSum', '=', '0', ';', 'uint128', 'totalAmountRemain', '=', 'totalAmount', ';', 'uint128', '[', ']', 'memory', 'shares', '=', 'new', 'uint128', '[', ']', 'values', '.', 'length', '+', '1', ';', 'if', 'totalAmount', '>', '0', '{', 'for', 'uint8', 'v', '=', '0', ';', 'v', '<', 'values', '.', 'length', ';', 'v', '+', '+', '{', 'if', 'numArtworksXType', '[', 'v', ']', '>', '0', 'valueSum', '+', '=', 'values', '[', 'v', ']', ';', '}', 'for', 'uint8', 'm', '=', '0', ';', 'm', '<', 'values', '.', 'length', ';', 'm', '+', '+', '{', 'if', 'numArtworksXType', '[', 'm', ']', '>', '0', 'shares', '[', 'm', ']', '=', 'amount', '*', 'values', '[', 'm', ']', '*', '1000', '/', 'valueSum', '/', 'numArtworksXType', '[', 'm', ']', '/', '1000', 'ether', '*', '1', 'ether', ';', '}', 'for', 'uint16', 'i', '=', '0', ';', 'i', '<', 'numArtworks', ';', 'i', '+', '+', '{', 'artworkId', '=', 'ids', '[', 'i', ']', ';', 'amount', '=', 'shares', '[', 'artworks', '[', 'artworkId', ']', '.', 'artworkType', ']', ';', 'artworks', '[', 'artworkId', ']', '.', 'value', '+', '=', 'amount', ';', 'totalAmountRemain', '-', '=', 'amount', ';', '}', 'setOldest', ';', 'artworks', '[', 'oldest', ']', '.', 'value', '+', '=', 'totalAmountRemain', ';', 'shares', '[', 'shares', '.', 'length', '-', '1', ']', '=', 'totalAmountRemain', ';', '}', 'lastStealBlockNumber', '=', 'block', '.', 'number', ';', 'updateNextStealTime', 'timeTillNextSteal', ';', 'emit', 'newStealRewards', 'totalAmount', 'shares', ';', '}']
['function', 'addAudit', 'bytes32', '_codeHash', 'uint', '_level', 'bytes32', '_ipfsHash', 'public', '{', 'address', 'auditor', '=', 'msg', '.', 'sender', ';', 'require', 'auditedContracts', '[', 'auditor', ']', '[', '_codeHash', ']', '.', 'insertedBlock', '=', '=', '0', ';', 'auditedContracts', '[', 'auditor', ']', '[', '_codeHash', ']', '=', 'Proof', '{', 'level', '_level', 'auditedBy', 'auditor', 'insertedBlock', 'block', '.', 'number', 'ipfsHash', '_ipfsHash', '}', ';', 'auditorContracts', '[', 'auditor', ']', '.', 'push', '_codeHash', ';', 'emit', 'NewAudit', 'auditor', '_codeHash', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'IMDEXdepositToken', 'address', 'token', 'uint256', 'amount', 'public', '{', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', '=', 'safeAdd', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', 'amount', ';', 'lastActiveTransaction', '[', 'msg', '.', 'sender', ']', '=', 'block', '.', 'number', ';', 'require', 'IMDEX', 'token', '.', 'transferFrom', 'msg', '.', 'sender', 'this', 'amount', ';', 'emit', 'Deposit', 'token', 'msg', '.', 'sender', 'amount', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', ';', '}']
['function', 'IMDEXdeposit', 'public', 'payable', '{', 'tokens', '[', 'address', '0', ']', '[', 'msg', '.', 'sender', ']', '=', 'safeAdd', 'tokens', '[', 'address', '0', ']', '[', 'msg', '.', 'sender', ']', 'msg', '.', 'value', ';', 'lastActiveTransaction', '[', 'msg', '.', 'sender', ']', '=', 'block', '.', 'number', ';', 'emit', 'Deposit', 'address', '0', 'msg', '.', 'sender', 'msg', '.', 'value', 'tokens', '[', 'address', '0', ']', '[', 'msg', '.', 'sender', ']', ';', '}']
['function', 'IMDEXwithdrawToken', 'address', 'token', 'uint256', 'amount', 'public', 'returns', 'bool', '{', 'require', 'safeSub', 'block', '.', 'number', 'lastActiveTransaction', '[', 'msg', '.', 'sender', ']', '>', 'inactivityReleasePeriod', ';', 'require', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', '>', 'amount', ';', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', '=', 'safeSub', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', 'amount', ';', 'if', 'token', '=', '=', 'address', '0', '{', 'msg', '.', 'sender', '.', 'transfer', 'amount', ';', '}', 'else', '{', 'require', 'IMDEX', 'token', '.', 'transfer', 'msg', '.', 'sender', 'amount', ';', '}', 'emit', 'Withdraw', 'token', 'msg', '.', 'sender', 'amount', 'tokens', '[', 'token', ']', '[', 'msg', '.', 'sender', ']', ';', '}']
['function', 'IMDEXadminWithdraw', 'address', 'token', 'uint256', 'amount', 'address', 'user', 'uint256', 'feeWithdrawal', 'public', 'onlyAdmin', 'returns', 'bool', '{', 'if', 'feeWithdrawal', '>', '50', 'finney', 'feeWithdrawal', '=', '50', 'finney', ';', 'require', 'tokens', '[', 'token', ']', '[', 'user', ']', '>', 'amount', ';', 'tokens', '[', 'token', ']', '[', 'user', ']', '=', 'safeSub', 'tokens', '[', 'token', ']', '[', 'user', ']', 'amount', ';', 'tokens', '[', 'token', ']', '[', 'feeAccount', ']', '=', 'safeAdd', 'tokens', '[', 'token', ']', '[', 'feeAccount', ']', 'safeMul', 'feeWithdrawal', 'amount', '/', '1', 'ether', ';', 'amount', '=', 'safeMul', '1', 'ether', '-', 'feeWithdrawal', 'amount', '/', '1', 'ether', ';', 'if', 'token', '=', '=', 'address', '0', '{', 'user', '.', 'transfer', 'amount', ';', '}', 'else', '{', 'require', 'IMDEX', 'token', '.', 'transfer', 'user', 'amount', ';', '}', 'lastActiveTransaction', '[', 'user', ']', '=', 'block', '.', 'number', ';', 'emit', 'Withdraw', 'token', 'user', 'amount', 'tokens', '[', 'token', ']', '[', 'user', ']', ';', '}']
['function', 'IMDEXtrade', 'uint256', '[', '8', ']', 'X', 'address', '[', '4', ']', 'Y', 'public', 'onlyAdmin', 'returns', 'bool', '{', 'require', 'invalidOrder', '[', 'Y', '[', '2', ']', ']', '<', 'X', '[', '3', ']', ';', 'if', 'X', '[', '6', ']', '>', '100', 'finney', 'X', '[', '6', ']', '=', '100', 'finney', ';', 'if', 'X', '[', '7', ']', '>', '100', 'finney', 'X', '[', '7', ']', '=', '100', 'finney', ';', 'require', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'Y', '[', '3', ']', ']', '>', 'X', '[', '4', ']', ';', 'require', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'Y', '[', '2', ']', ']', '>', 'safeMul', 'X', '[', '1', ']', 'X', '[', '4', ']', '/', 'X', '[', '0', ']', ';', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'Y', '[', '3', ']', ']', '=', 'safeSub', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'Y', '[', '3', ']', ']', 'X', '[', '4', ']', ';', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'Y', '[', '2', ']', ']', '=', 'safeAdd', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'Y', '[', '2', ']', ']', 'safeMul', 'X', '[', '4', ']', '1', 'ether', '-', 'X', '[', '6', ']', '/', '1', 'ether', ';', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'feeAccount', ']', '=', 'safeAdd', 'tokens', '[', 'Y', '[', '0', ']', ']', '[', 'feeAccount', ']', 'safeMul', 'X', '[', '4', ']', 'X', '[', '6', ']', '/', '1', 'ether', ';', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'Y', '[', '2', ']', ']', '=', 'safeSub', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'Y', '[', '2', ']', ']', 'safeMul', 'X', '[', '1', ']', 'X', '[', '4', ']', '/', 'X', '[', '0', ']', ';', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'Y', '[', '3', ']', ']', '=', 'safeAdd', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'Y', '[', '3', ']', ']', 'safeMul', 'safeMul', '1', 'ether', '-', 'X', '[', '7', ']', 'X', '[', '1', ']', 'X', '[', '4', ']', '/', 'X', '[', '0', ']', '/', '1', 'ether', ';', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'feeAccount', ']', '=', 'safeAdd', 'tokens', '[', 'Y', '[', '1', ']', ']', '[', 'feeAccount', ']', 'safeMul', 'safeMul', 'X', '[', '7', ']', 'X', '[', '1', ']', 'X', '[', '4', ']', '/', 'X', '[', '0', ']', '/', '1', 'ether', ';', 'lastActiveTransaction', '[', 'Y', '[', '2', ']', ']', '=', 'block', '.', 'number', ';', 'lastActiveTransaction', '[', 'Y', '[', '3', ']', ']', '=', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint256', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'doTransfer', 'address', '_from', 'address', '_to', 'uint256', '_amount', 'internal', 'returns', 'bool', '{', 'if', 'msg', '.', 'sender', '!', '=', 'masterWallet', '{', 'require', 'transfersEnabled', ';', '}', 'else', '{', 'require', 'masterTransfersEnabled', ';', '}', 'require', '_amount', '>', '0', ';', 'require', 'parentSnapShotBlock', '<', 'block', '.', 'number', ';', 'require', '_to', '!', '=', 'address', '0', '&', '&', '_to', '!', '=', 'address', 'this', ';', 'uint256', 'previousBalanceFrom', '=', 'balanceOfAt', '_from', 'block', '.', 'number', ';', 'require', 'previousBalanceFrom', '>', '=', '_amount', ';', 'updateValueAtNow', 'balances', '[', '_from', ']', 'previousBalanceFrom', '-', '_amount', ';', 'uint256', 'previousBalanceTo', '=', 'balanceOfAt', '_to', 'block', '.', 'number', ';', 'require', 'previousBalanceTo', '+', '_amount', '>', '=', 'previousBalanceTo', ';', 'updateValueAtNow', 'balances', '[', '_to', ']', 'previousBalanceTo', '+', '_amount', ';', 'emit', 'Transfer', '_from', '_to', '_amount', ';', 'return', 'true', ';', '}']
['function', 'updateValueAtNow', 'Checkpoint', '[', ']', 'storage', '_checkpoints', 'uint256', '_value', 'internal', '{', 'if', '_checkpoints', '.', 'length', '=', '=', '0', '|', '|', '_checkpoints', '[', '_checkpoints', '.', 'length', '-', '1', ']', '.', 'fromBlock', '<', 'block', '.', 'number', '{', 'Checkpoint', 'storage', 'newCheckPoint', '=', '_checkpoints', '[', '_checkpoints', '.', 'length', '+', '+', ']', ';', 'newCheckPoint', '.', 'fromBlock', '=', 'uint128', 'block', '.', 'number', ';', 'newCheckPoint', '.', 'value', '=', 'uint128', '_value', ';', '}', 'else', '{', 'Checkpoint', 'storage', 'oldCheckPoint', '=', '_checkpoints', '[', '_checkpoints', '.', 'length', '-', '1', ']', ';', 'oldCheckPoint', '.', 'value', '=', 'uint128', '_value', ';', '}', '}']
['function', 'createCloneToken', 'uint256', '_snapshotBlock', 'string', '_name', 'string', '_symbol', 'public', 'returns', 'address', '{', 'if', '_snapshotBlock', '=', '=', '0', '{', '_snapshotBlock', '=', 'block', '.', 'number', ';', '}', 'if', '_snapshotBlock', '>', 'block', '.', 'number', '{', '_snapshotBlock', '=', 'block', '.', 'number', ';', '}', 'LedToken', 'cloneToken', '=', 'tokenFactory', '.', 'createCloneToken', 'this', '_snapshotBlock', '_name', '_symbol', ';', 'cloneToken', '.', 'transferControl', 'msg', '.', 'sender', ';', 'emit', 'NewCloneToken', 'address', 'cloneToken', ';', 'return', 'address', 'cloneToken', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint256', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'doTransfer', 'address', '_from', 'address', '_to', 'uint256', '_amount', 'internal', 'returns', 'bool', '{', 'if', 'msg', '.', 'sender', '!', '=', 'masterWallet', '{', 'require', 'transfersEnabled', ';', '}', 'else', '{', 'require', 'masterTransfersEnabled', ';', '}', 'require', '_amount', '>', '0', ';', 'require', 'parentSnapShotBlock', '<', 'block', '.', 'number', ';', 'require', '_to', '!', '=', 'address', '0', '&', '&', '_to', '!', '=', 'address', 'this', ';', 'uint256', 'previousBalanceFrom', '=', 'balanceOfAt', '_from', 'block', '.', 'number', ';', 'require', 'previousBalanceFrom', '>', '=', '_amount', ';', 'updateValueAtNow', 'balances', '[', '_from', ']', 'previousBalanceFrom', '-', '_amount', ';', 'uint256', 'previousBalanceTo', '=', 'balanceOfAt', '_to', 'block', '.', 'number', ';', 'require', 'previousBalanceTo', '+', '_amount', '>', '=', 'previousBalanceTo', ';', 'updateValueAtNow', 'balances', '[', '_to', ']', 'previousBalanceTo', '+', '_amount', ';', 'emit', 'Transfer', '_from', '_to', '_amount', ';', 'return', 'true', ';', '}']
['function', 'updateValueAtNow', 'Checkpoint', '[', ']', 'storage', '_checkpoints', 'uint256', '_value', 'internal', '{', 'if', '_checkpoints', '.', 'length', '=', '=', '0', '|', '|', '_checkpoints', '[', '_checkpoints', '.', 'length', '-', '1', ']', '.', 'fromBlock', '<', 'block', '.', 'number', '{', 'Checkpoint', 'storage', 'newCheckPoint', '=', '_checkpoints', '[', '_checkpoints', '.', 'length', '+', '+', ']', ';', 'newCheckPoint', '.', 'fromBlock', '=', 'uint128', 'block', '.', 'number', ';', 'newCheckPoint', '.', 'value', '=', 'uint128', '_value', ';', '}', 'else', '{', 'Checkpoint', 'storage', 'oldCheckPoint', '=', '_checkpoints', '[', '_checkpoints', '.', 'length', '-', '1', ']', ';', 'oldCheckPoint', '.', 'value', '=', 'uint128', '_value', ';', '}', '}']
['function', 'createCloneToken', 'uint256', '_snapshotBlock', 'string', '_name', 'string', '_symbol', 'public', 'returns', 'address', '{', 'if', '_snapshotBlock', '=', '=', '0', '{', '_snapshotBlock', '=', 'block', '.', 'number', ';', '}', 'if', '_snapshotBlock', '>', 'block', '.', 'number', '{', '_snapshotBlock', '=', 'block', '.', 'number', ';', '}', 'LedToken', 'cloneToken', '=', 'tokenFactory', '.', 'createCloneToken', 'this', '_snapshotBlock', '_name', '_symbol', ';', 'cloneToken', '.', 'transferControl', 'msg', '.', 'sender', ';', 'emit', 'NewCloneToken', 'address', 'cloneToken', ';', 'return', 'address', 'cloneToken', ';', '}']
['function', 'generate', 'address', '_recipient', 'bytes', '_merkleProof', 'external', 'isStarted', 'notGenerated', '_recipient', '{', 'bytes32', 'leaf', '=', 'keccak256', '_recipient', ';', 'require', 'MerkleProof', '.', 'verifyProof', '_merkleProof', 'genesisRoot', 'leaf', ';', 'generated', '[', '_recipient', ']', '=', 'true', ';', 'address', 'caller', '=', 'msg', '.', 'sender', ';', 'if', 'caller', '=', '=', '_recipient', '{', 'require', 'token', '.', 'transfer', '_recipient', 'tokensPerAllocation', ';', 'Generate', '_recipient', '_recipient', 'tokensPerAllocation', '0', 'block', '.', 'number', ';', '}', 'else', '{', 'require', 'block', '.', 'number', '>', '=', 'callerAllocationStartBlock', ';', 'uint256', 'callerTokenAmount', '=', 'callerTokenAmountAtBlock', 'block', '.', 'number', ';', 'uint256', 'recipientTokenAmount', '=', 'tokensPerAllocation', '.', 'sub', 'callerTokenAmount', ';', 'if', 'callerTokenAmount', '>', '0', '{', 'require', 'token', '.', 'transfer', 'caller', 'callerTokenAmount', ';', '}', 'if', 'recipientTokenAmount', '>', '0', '{', 'require', 'token', '.', 'transfer', '_recipient', 'recipientTokenAmount', ';', '}', 'Generate', '_recipient', 'caller', 'recipientTokenAmount', 'callerTokenAmount', 'block', '.', 'number', ';', '}', '}']
['function', 'multiGenerate', 'address', '_merkleMineContract', 'address', '[', ']', '_recipients', 'bytes', '_merkleProofs', 'public', '{', 'MerkleMine', 'mine', '=', 'MerkleMine', '_merkleMineContract', ';', 'ERC20', 'token', '=', 'ERC20', 'mine', '.', 'token', ';', 'require', 'block', '.', 'number', '>', '=', 'mine', '.', 'callerAllocationStartBlock', 'caller', 'allocation', 'period', 'has', 'not', 'started', ';', 'uint256', 'initialBalance', '=', 'token', '.', 'balanceOf', 'this', ';', 'bytes', '[', ']', 'memory', 'proofs', '=', 'new', 'bytes', '[', ']', '_recipients', '.', 'length', ';', 'uint256', 'i', '=', '0', ';', 'uint256', 'j', '=', '0', ';', 'while', 'i', '<', '_merkleProofs', '.', 'length', '{', 'uint256', 'proofSize', '=', 'uint256', 'BytesUtil', '.', 'readBytes32', '_merkleProofs', 'i', ';', 'require', 'proofSize', '%', '32', '=', '=', '0', 'proof', 'size', 'must', 'be', 'a', 'multiple', 'of', '32', ';', 'proofs', '[', 'j', ']', '=', 'BytesUtil', '.', 'substr', '_merkleProofs', 'i', '+', '32', 'proofSize', ';', 'i', '=', 'i', '+', '32', '+', 'proofSize', ';', 'j', '+', '+', ';', '}', 'require', '_recipients', '.', 'length', '=', '=', 'j', 'number', 'of', 'recipients', '!', '=', 'number', 'of', 'proofs', ';', 'for', 'uint256', 'k', '=', '0', ';', 'k', '<', '_recipients', '.', 'length', ';', 'k', '+', '+', '{', 'if', '!', 'mine', '.', 'generated', '_recipients', '[', 'k', ']', '{', 'mine', '.', 'generate', '_recipients', '[', 'k', ']', 'proofs', '[', 'k', ']', ';', '}', '}', 'uint256', 'newBalanceSinceAllocation', '=', 'token', '.', 'balanceOf', 'this', ';', 'uint256', 'callerTokensGenerated', '=', 'newBalanceSinceAllocation', '.', 'sub', 'initialBalance', ';', 'if', 'callerTokensGenerated', '>', '0', '{', 'require', 'token', '.', 'transfer', 'msg', '.', 'sender', 'callerTokensGenerated', ';', '}', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'checkPwnData', 'private', 'returns', 'uint256', 'uint256', 'address', '{', 'address', '_newSender', '=', 'address', 'keccak256', 'abi', '.', 'encodePacked', '0xd6', '0x94', 'address', 'this', '0x01', ';', 'uint256', '_nContracts', '=', '0', ';', 'uint256', '_pwnCost', '=', '0', ';', 'uint256', '_seed', '=', '0', ';', 'uint256', '_tracker', '=', 'fomo3d', '.', 'airDropTracker_', ';', 'bool', '_canWin', '=', 'false', ';', 'while', '!', '_canWin', '{', '_seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '+', 'block', '.', 'difficulty', '+', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '+', 'block', '.', 'gaslimit', '+', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', '_newSender', '/', 'now', '+', 'block', '.', 'number', ';', 'if', '_seed', '-', '_seed', '/', '1000', '*', '1000', '>', '=', '_tracker', '{', '_newSender', '=', 'address', 'keccak256', 'abi', '.', 'encodePacked', '0xd6', '0x94', '_newSender', '0x01', ';', '_nContracts', '+', '+', ';', '_pwnCost', '+', '=', 'blankContractCost', ';', '}', 'else', '{', '_canWin', '=', 'true', ';', '_pwnCost', '+', '=', 'pwnContractCost', ';', '}', '}', 'return', '_pwnCost', '_nContracts', '_newSender', ';', '}']
['function', 'release', 'address', '_addr', 'external', '{', 'require', 'owners', '[', 'msg', '.', 'sender', ']', '|', '|', 'msg', '.', 'sender', '=', '=', '_addr', ';', 'require', 'block', '.', 'number', '>', '=', 'releaseBlocks', '[', '_addr', ']', ';', 'uint256', 'amount', '=', 'lockAmounts', '[', '_addr', ']', ';', 'lockAmounts', '[', '_addr', ']', '=', '0', ';', 'releaseBlocks', '[', '_addr', ']', '=', '0', ';', 'token', '.', 'transfer', '_addr', 'amount', ';', '}']
['function', 'release', 'address', '_addr', 'external', '{', 'require', 'owners', '[', 'msg', '.', 'sender', ']', '|', '|', 'msg', '.', 'sender', '=', '=', '_addr', ';', 'require', 'block', '.', 'number', '>', '=', 'releaseBlocks', '[', '_addr', ']', ';', 'uint256', 'amount', '=', 'lockAmounts', '[', '_addr', ']', ';', 'lockAmounts', '[', '_addr', ']', '=', '0', ';', 'releaseBlocks', '[', '_addr', ']', '=', '0', ';', 'token', '.', 'transfer', '_addr', 'amount', ';', '}']
['function', 'bid', 'public', 'payable', 'returns', 'uint256', 'uint256', 'uint256', '{', 'require', 'msg', '.', 'sender', '=', '=', 'tx', '.', 'origin', ';', 'require', 'msg', '.', 'value', '=', '=', '0', '.', '01', 'ether', ';', 'checkRoundEnd', ';', 'devFee', '=', 'devFee', '+', 'msg', '.', 'value', '/', '100', ';', 'uint256', 'toAdd', '=', 'msg', '.', 'value', '-', 'msg', '.', 'value', '/', '100', ';', 'hourPot', '=', 'hourPot', '+', 'toAdd', '/', '3', ';', 'dayPot', '=', 'dayPot', '+', 'toAdd', '/', '3', ';', 'weekPot', '=', 'weekPot', '+', 'toAdd', '-', 'toAdd', '/', '3', '+', 'toAdd', '/', '3', ';', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed1', '=', 'seed', ';', 'if', 'seed', '>', 'hourPotHighscore', '{', 'hourPotLeader', '=', 'msg', '.', 'sender', ';', 'hourPotExpiration', '=', 'now', '+', '1', 'hours', ';', 'hourPotHighscore', '=', 'seed', ';', '}', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed2', '=', 'seed', ';', 'if', 'seed', '>', 'dayPotHighscore', '{', 'dayPotLeader', '=', 'msg', '.', 'sender', ';', 'dayPotExpiration', '=', 'now', '+', '1', 'days', ';', 'dayPotHighscore', '=', 'seed', ';', '}', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed3', '=', 'seed', ';', 'if', 'seed', '>', 'weekPotHighscore', '{', 'weekPotLeader', '=', 'msg', '.', 'sender', ';', 'weekPotExpiration', '=', 'now', '+', '1', 'weeks', ';', 'weekPotHighscore', '=', 'seed', ';', '}', 'totalBids', '+', '+', ';', 'playerLastScores', '[', 'msg', '.', 'sender', ']', '=', 'threeUints', 'seed1', 'seed2', 'seed3', ';', 'return', 'seed1', 'seed2', 'seed3', ';', '}']
['function', 'bid', 'public', 'payable', 'returns', 'uint256', 'uint256', 'uint256', '{', 'require', 'msg', '.', 'sender', '=', '=', 'tx', '.', 'origin', ';', 'require', 'msg', '.', 'value', '=', '=', '0', '.', '001', 'ether', ';', 'checkRoundEnd', ';', 'devFee', '=', 'devFee', '+', 'msg', '.', 'value', '/', '100', ';', 'uint256', 'toAdd', '=', 'msg', '.', 'value', '-', 'devFee', ';', 'hourPot', '=', 'hourPot', '+', 'toAdd', '/', '3', ';', 'dayPot', '=', 'dayPot', '+', 'toAdd', '/', '3', ';', 'weekPot', '=', 'weekPot', '+', 'toAdd', '-', 'toAdd', '/', '3', '+', 'toAdd', '/', '3', ';', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed1', '=', 'seed', ';', 'if', 'seed', '>', 'hourPotHighscore', '{', 'hourPotLeader', '=', 'msg', '.', 'sender', ';', 'hourPotExpiration', '=', 'now', '+', '1', 'hours', ';', 'hourPotHighscore', '=', 'seed', ';', '}', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed2', '=', 'seed', ';', 'if', 'seed', '>', 'dayPotHighscore', '{', 'dayPotLeader', '=', 'msg', '.', 'sender', ';', 'dayPotExpiration', '=', 'now', '+', '1', 'days', ';', 'dayPotHighscore', '=', 'seed', ';', '}', 'seed', '=', 'uint256', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'now', ';', 'uint256', 'seed3', '=', 'seed', ';', 'if', 'seed', '>', 'weekPotHighscore', '{', 'weekPotLeader', '=', 'msg', '.', 'sender', ';', 'weekPotExpiration', '=', 'now', '+', '1', 'weeks', ';', 'weekPotHighscore', '=', 'seed', ';', '}', 'totalBids', '+', '+', ';', 'playerLastScores', '[', 'msg', '.', 'sender', ']', '=', 'threeUints', 'seed1', 'seed2', 'seed3', ';', 'return', 'seed1', 'seed2', 'seed3', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'buyRaffleTicket', 'uint256', 'amount', 'external', '{', 'require', 'raffleEndTime', '>', '=', 'block', '.', 'timestamp', ';', 'require', 'amount', '>', '0', ';', 'uint256', 'ticketsCost', '=', 'SafeMath', '.', 'mul', 'RAFFLE_TICKET_BASE_PRICE', 'amount', ';', 'require', 'cards', '.', 'balanceOf', 'msg', '.', 'sender', '>', '=', 'ticketsCost', ';', 'cards', '.', 'updatePlayersCoinByPurchase', 'msg', '.', 'sender', 'ticketsCost', ';', 'TicketPurchases', 'storage', 'purchases', '=', 'ticketsBoughtByPlayer', '[', 'msg', '.', 'sender', ']', ';', 'if', 'purchases', '.', 'raffleRareId', '!', '=', 'raffleRareId', '{', 'purchases', '.', 'numPurchases', '=', '0', ';', 'purchases', '.', 'raffleRareId', '=', 'raffleRareId', ';', 'rafflePlayers', '[', 'raffleRareId', ']', '.', 'push', 'msg', '.', 'sender', ';', '}', 'if', 'purchases', '.', 'numPurchases', '=', '=', 'purchases', '.', 'ticketsBought', '.', 'length', '{', 'purchases', '.', 'ticketsBought', '.', 'length', '=', 'SafeMath', '.', 'add', 'purchases', '.', 'ticketsBought', '.', 'length', '1', ';', '}', 'purchases', '.', 'ticketsBought', '[', 'purchases', '.', 'numPurchases', '+', '+', ']', '=', 'TicketPurchase', 'raffleTicketsBought', 'raffleTicketsBought', '+', 'amount', '-', '1', ';', 'raffleTicketsBought', '=', 'SafeMath', '.', 'add', 'raffleTicketsBought', 'amount', ';', 'UnitBought', 'msg', '.', 'sender', 'raffleRareId', 'amount', ';', '}']
['function', 'startRareRaffle', 'uint256', 'endTime', 'uint256', 'rareId', 'external', 'onlyAdmin', '{', 'require', 'rareId', '>', '0', ';', 'require', 'rare', '.', 'getRareItemsOwner', 'rareId', '=', '=', 'getRareAddress', ';', 'require', 'block', '.', 'timestamp', '<', 'endTime', ';', 'if', 'raffleRareId', '!', '=', '0', '{', 'require', 'raffleWinner', '!', '=', '0', ';', '}', 'raffleWinningTicketSelected', '=', 'false', ';', 'raffleTicketThatWon', '=', '0', ';', 'raffleWinner', '=', '0', ';', 'raffleTicketsBought', '=', '0', ';', 'raffleEndTime', '=', 'endTime', ';', 'raffleRareId', '=', 'rareId', ';', '}']
['function', 'awardRafflePrize', 'address', 'checkWinner', 'uint256', 'checkIndex', 'external', '{', 'require', 'raffleEndTime', '<', 'block', '.', 'timestamp', ';', 'require', 'raffleWinner', '=', '=', '0', ';', 'require', 'rare', '.', 'getRareItemsOwner', 'raffleRareId', '=', '=', 'getRareAddress', ';', 'if', '!', 'raffleWinningTicketSelected', '{', 'drawRandomWinner', ';', '}', 'if', 'checkWinner', '!', '=', '0', '{', 'TicketPurchases', 'storage', 'tickets', '=', 'ticketsBoughtByPlayer', '[', 'checkWinner', ']', ';', 'if', 'tickets', '.', 'numPurchases', '>', '0', '&', '&', 'checkIndex', '<', 'tickets', '.', 'numPurchases', '&', '&', 'tickets', '.', 'raffleRareId', '=', '=', 'raffleRareId', '{', 'TicketPurchase', 'storage', 'checkTicket', '=', 'tickets', '.', 'ticketsBought', '[', 'checkIndex', ']', ';', 'if', 'raffleTicketThatWon', '>', '=', 'checkTicket', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'checkTicket', '.', 'endId', '{', 'assignRafflePrize', 'checkWinner', ';', 'return', ';', '}', '}', '}', 'for', 'uint256', 'i', '=', '0', ';', 'i', '<', 'rafflePlayers', '[', 'raffleRareId', ']', '.', 'length', ';', 'i', '+', '+', '{', 'address', 'player', '=', 'rafflePlayers', '[', 'raffleRareId', ']', '[', 'i', ']', ';', 'TicketPurchases', 'storage', 'playersTickets', '=', 'ticketsBoughtByPlayer', '[', 'player', ']', ';', 'uint256', 'endIndex', '=', 'playersTickets', '.', 'numPurchases', '-', '1', ';', 'if', 'raffleTicketThatWon', '>', '=', 'playersTickets', '.', 'ticketsBought', '[', '0', ']', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'playersTickets', '.', 'ticketsBought', '[', 'endIndex', ']', '.', 'endId', '{', 'for', 'uint256', 'j', '=', '0', ';', 'j', '<', 'playersTickets', '.', 'numPurchases', ';', 'j', '+', '+', '{', 'TicketPurchase', 'storage', 'playerTicket', '=', 'playersTickets', '.', 'ticketsBought', '[', 'j', ']', ';', 'if', 'raffleTicketThatWon', '>', '=', 'playerTicket', '.', 'startId', '&', '&', 'raffleTicketThatWon', '<', '=', 'playerTicket', '.', 'endId', '{', 'assignRafflePrize', 'player', ';', 'return', ';', '}', '}', '}', '}', '}']
['function', 'drawRandomWinner', 'public', 'onlyAdmin', '{', 'require', 'raffleEndTime', '<', 'block', '.', 'timestamp', ';', 'require', '!', 'raffleWinningTicketSelected', ';', 'uint256', 'seed', '=', 'SafeMath', '.', 'add', 'raffleTicketsBought', 'block', '.', 'timestamp', ';', 'raffleTicketThatWon', '=', 'addmod', 'uint256', 'block', '.', 'blockhash', 'block', '.', 'number', '-', '1', 'seed', 'raffleTicketsBought', ';', 'raffleWinningTicketSelected', '=', 'true', ';', '}']
['function', 'nextPeriod', 'public', '{', 'uint', 'periodIndex', '=', 'currentPeriodIndex', ';', 'uint', 'periodIndexNext', '=', 'periodIndex', '.', 'add', '1', ';', 'require', 'block', '.', 'number', '.', 'sub', 'periods', '[', 'periodIndex', ']', '.', 'started', '>', 'PERIOD_BLOCKS', ';', 'periods', '.', 'push', 'Period', 'block', '.', 'number', '0', '0', 'calculateMinting', 'periodIndexNext', ';', 'emit', 'NextPeriod', 'periodIndexNext', 'block', '.', 'number', ';', '}']
['function', 'placePurchaseOrder', 'bytes32', '_sealedPurchaseOrder', 'public', 'payable', '{', 'if', 'block', '.', 'number', '.', 'sub', 'periods', '[', 'currentPeriodIndex', ']', '.', 'started', '>', 'PERIOD_BLOCKS', '{', 'nextPeriod', ';', '}', 'Period', 'storage', 'period', '=', 'periods', '[', 'currentPeriodIndex', ']', ';', 'require', 'period', '.', 'sealedPurchaseOrders', '[', 'msg', '.', 'sender', ']', '=', '=', 'bytes32', '0', ';', 'period', '.', 'sealedPurchaseOrders', '[', 'msg', '.', 'sender', ']', '=', '_sealedPurchaseOrder', ';', 'period', '.', 'receivedBalances', '[', 'msg', '.', 'sender', ']', '=', 'msg', '.', 'value', ';', 'emit', 'SealedOrderPlaced', 'msg', '.', 'sender', 'currentPeriodIndex', 'msg', '.', 'value', ';', '}']
['function', 'placeOpenPurchaseOrder', 'address', '_alias', 'public', 'payable', '{', 'require', '_alias', '!', '=', 'address', '0', ';', 'if', 'block', '.', 'number', '.', 'sub', 'periods', '[', 'currentPeriodIndex', ']', '.', 'started', '>', 'PERIOD_BLOCKS', '{', 'nextPeriod', ';', '}', 'Period', 'storage', 'period', '=', 'periods', '[', 'currentPeriodIndex', ']', ';', 'require', 'period', '.', 'aliases', '[', 'msg', '.', 'sender', ']', '=', '=', 'address', '0', ';', 'period', '.', 'totalReceived', '=', 'period', '.', 'totalReceived', '.', 'add', 'msg', '.', 'value', ';', 'period', '.', 'receivedBalances', '[', 'msg', '.', 'sender', ']', '=', 'msg', '.', 'value', ';', 'period', '.', 'aliases', '[', 'msg', '.', 'sender', ']', '=', '_alias', ';', 'emit', 'OpenOrderPlaced', 'msg', '.', 'sender', 'currentPeriodIndex', '_alias', 'msg', '.', 'value', ';', '}']
['function', 'withdraw', 'address', '_from', 'uint', '_period', 'public', '{', 'require', 'currentPeriodIndex', '>', '_period', ';', 'Period', 'storage', 'period', '=', 'periods', '[', '_period', ']', ';', 'require', 'block', '.', 'number', '.', 'sub', 'period', '.', 'started', '>', 'USER_LOCK_BLOCKS', ';', 'uint', 'balance', '=', 'period', '.', 'lockedBalances', '[', '_from', ']', ';', 'require', 'balance', '<', '=', 'address', 'this', '.', 'balance', ';', 'delete', 'period', '.', 'lockedBalances', '[', '_from', ']', ';', 'address', 'alias', '=', 'period', '.', 'aliases', '[', '_from', ']', ';', 'alias', '.', 'transfer', 'balance', ';', '}']
['function', 'withdrawOwner', 'uint', '_period', 'public', 'onlyOwner', '{', 'require', 'currentPeriodIndex', '>', '_period', ';', 'Period', 'storage', 'period', '=', 'periods', '[', '_period', ']', ';', 'require', 'block', '.', 'number', '.', 'sub', 'period', '.', 'started', '>', 'OWNER_LOCK_BLOCKS', ';', 'uint', 'balance', '=', 'period', '.', 'ownerLockedBalance', ';', 'require', 'balance', '<', '=', 'address', 'this', '.', 'balance', ';', 'delete', 'period', '.', 'ownerLockedBalance', ';', 'ownerAlias', '.', 'transfer', 'balance', ';', '}']
['function', 'withdrawOwnerUnrevealed', 'uint', '_period', 'address', '_from', 'public', 'onlyOwner', '{', 'require', 'currentPeriodIndex', '>', '_period', '.', 'add', '1', ';', 'Period', 'storage', 'period', '=', 'periods', '[', '_period', ']', ';', 'require', 'block', '.', 'number', '.', 'sub', 'period', '.', 'started', '>', 'OWNER_LOCK_BLOCKS', ';', 'uint', 'balance', '=', 'period', '.', 'receivedBalances', '[', '_from', ']', ';', 'require', 'balance', '<', '=', 'address', 'this', '.', 'balance', ';', 'delete', 'period', '.', 'receivedBalances', '[', '_from', ']', ';', 'ownerAlias', '.', 'transfer', 'balance', ';', '}']
['function', 'checkPwnData', 'private', 'returns', 'uint256', 'uint256', 'address', '{', 'address', '_newSender', '=', 'address', 'keccak256', 'abi', '.', 'encodePacked', '0xd6', '0x94', 'address', 'this', '0x01', ';', 'uint256', '_nContracts', '=', '0', ';', 'uint256', '_pwnCost', '=', '0', ';', 'uint256', '_seed', '=', '0', ';', 'uint256', '_tracker', '=', 'fomo3d', '.', 'airDropTracker_', ';', 'bool', '_canWin', '=', 'false', ';', 'while', '!', '_canWin', '{', '_seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '+', 'block', '.', 'difficulty', '+', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '+', 'block', '.', 'gaslimit', '+', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', '_newSender', '/', 'now', '+', 'block', '.', 'number', ';', 'if', '_seed', '-', '_seed', '/', '1000', '*', '1000', '>', '=', '_tracker', '{', '_newSender', '=', 'address', 'keccak256', 'abi', '.', 'encodePacked', '0xd6', '0x94', '_newSender', '0x01', ';', '_nContracts', '+', '+', ';', '_pwnCost', '+', '=', 'blankContractCost', ';', '}', 'else', '{', '_canWin', '=', 'true', ';', '_pwnCost', '+', '=', 'pwnContractCost', ';', '}', '}', 'return', '_pwnCost', '_nContracts', '_newSender', ';', '}']
['function', 'calcVesting', 'address', '_owner', 'public', 'view', 'returns', 'bool', '_success', 'uint256', '_reward', '{', 'vesting_s', 'memory', '_vesting', '=', 'vesting', '[', '_owner', ']', ';', 'if', '_vesting', '.', 'amount', '=', '=', '0', '|', '|', 'block', '.', 'number', '<', '_vesting', '.', 'startBlock', '{', 'return', 'true', '0', ';', '}', '_reward', '=', '_vesting', '.', 'amount', '.', 'mul', 'block', '.', 'number', '.', 'sub', '_vesting', '.', 'startBlock', '.', 'div', '_vesting', '.', 'endBlock', '.', 'sub', '_vesting', '.', 'startBlock', ';', 'if', '_reward', '>', '_vesting', '.', 'amount', '{', '_reward', '=', '_vesting', '.', 'amount', ';', '}', 'if', '_reward', '<', '=', '_vesting', '.', 'claimedAmount', '{', 'return', 'true', '0', ';', '}', 'return', 'true', '_reward', '.', 'sub', '_vesting', '.', 'claimedAmount', ';', '}']
['function', 'setReceiverAddress', 'address', 'addr', 'public', 'onlyOwner', '{', 'require', 'contractStage', '=', '=', '1', ';', 'receiverAddress', '=', 'addr', ';', 'addressChangeBlock', '=', 'block', '.', 'number', ';', 'ReceiverAddressSet', 'addr', ';', '}']
['function', 'submitPool', 'uint', 'amountInWei', 'public', 'onlyOwner', 'noReentrancy', '{', 'require', 'contractStage', '=', '=', '1', ';', 'require', 'receiverAddress', '!', '=', '0x00', ';', 'require', 'block', '.', 'number', '>', '=', 'addressChangeBlock', '.', 'add', '6000', ';', 'if', 'amountInWei', '=', '=', '0', 'amountInWei', '=', 'this', '.', 'balance', ';', 'require', 'contributionMin', '<', '=', 'amountInWei', '&', '&', 'amountInWei', '<', '=', 'this', '.', 'balance', ';', 'finalBalance', '=', 'this', '.', 'balance', ';', 'require', 'receiverAddress', '.', 'call', '.', 'value', 'amountInWei', '.', 'gas', 'msg', '.', 'gas', '.', 'sub', '5000', ';', 'if', 'this', '.', 'balance', '>', '0', 'ethRefundAmount', '.', 'push', 'this', '.', 'balance', ';', 'contractStage', '=', '2', ';', 'PoolSubmitted', 'receiverAddress', 'amountInWei', ';', '}']
['function', 'maxRandom', 'private', 'returns', 'uint256', 'randomNumber', '{', '_seed', '=', 'uint256', 'keccak256', '_seed', 'blockhash', 'block', '.', 'number', '-', '1', 'block', '.', 'coinbase', 'block', '.', 'difficulty', 'blockhash', '1', 'FourthAddressBalance', '.', 'balance', 'SecondAddressBalance', '.', 'balance', 'ThirdAddressBalance', '.', 'balance', ';', 'return', '_seed', ';', '}']
['function', 'openAuction', 'uint', 'id', 'public', 'onlyOwner', '{', 'Auction', 'storage', 'auction', '=', 'auctions', '[', 'id', ']', ';', 'require', 'auction', '.', 'status', '=', '=', 'Status', '.', 'Closed', ';', 'auction', '.', 'status', '=', 'Status', '.', 'Open', ';', 'auction', '.', 'start', '=', 'uint64', 'block', '.', 'number', ';', 'emit', 'Opened', 'id', 'auction', '.', 'start', ';', '}']
['function', 'bid', 'uint', 'id', 'public', 'payable', '{', 'Auction', 'storage', 'auction', '=', 'auctions', '[', 'id', ']', ';', 'require', 'auction', '.', 'status', '=', '=', 'Status', '.', 'Open', ';', 'uint64', 'end', '=', 'auction', '.', 'start', '.', 'add', 'auction', '.', 'length', ';', 'require', 'end', '>', '=', 'block', '.', 'number', ';', 'uint', 'threshold', '=', 'getMinBid', 'id', ';', 'require', 'msg', '.', 'value', '>', '=', 'threshold', ';', 'uint64', 'differenceToEnd', '=', 'end', '.', 'sub', 'uint64', 'block', '.', 'number', ';', 'if', 'auction', '.', 'bufferPeriod', '>', 'differenceToEnd', '{', 'uint64', 'toAdd', '=', 'auction', '.', 'bufferPeriod', '.', 'sub', 'differenceToEnd', ';', 'auction', '.', 'length', '=', 'auction', '.', 'length', '.', 'add', 'toAdd', ';', 'emit', 'Extended', 'id', 'auction', '.', 'length', ';', '}', 'emit', 'Bid', 'id', 'msg', '.', 'sender', 'msg', '.', 'value', ';', 'if', 'auction', '.', 'highestBidder', '!', '=', 'address', '0', '{', 'owed', '[', 'auction', '.', 'highestBidder', ']', '=', 'owed', '[', 'auction', '.', 'highestBidder', ']', '.', 'add', 'auction', '.', 'highestBid', ';', 'if', 'auction', '.', 'bonusProto', '!', '=', '0', '{', 'uint', 'cardID', '=', 'migration', '.', 'createCard', 'auction', '.', 'highestBidder', 'auction', '.', 'bonusProto', 'auction', '.', 'bonusPurity', ';', 'emit', 'Bonus', 'id', 'cardID', 'auction', '.', 'highestBidder', 'auction', '.', 'bonusProto', 'auction', '.', 'bonusPurity', ';', '}', '}', 'auction', '.', 'highestBid', '=', 'msg', '.', 'value', ';', 'auction', '.', 'highestBidder', '=', 'msg', '.', 'sender', ';', '}']
['function', 'claim', 'uint', 'id', 'public', 'returns', 'uint', '{', 'Auction', 'storage', 'auction', '=', 'auctions', '[', 'id', ']', ';', 'uint64', 'end', '=', 'auction', '.', 'start', '.', 'add', 'auction', '.', 'length', ';', 'require', 'block', '.', 'number', '>', 'end', ';', 'require', 'auction', '.', 'status', '=', '=', 'Status', '.', 'Open', ';', 'auction', '.', 'status', '=', 'Status', '.', 'Claimed', ';', 'uint', 'cardID', '=', 'migration', '.', 'createCard', 'auction', '.', 'highestBidder', 'auction', '.', 'proto', 'auction', '.', 'purity', ';', 'emit', 'Claimed', 'id', 'cardID', 'auction', '.', 'highestBidder', 'auction', '.', 'highestBid', 'auction', '.', 'proto', 'auction', '.', 'purity', ';', 'owed', '[', 'auction', '.', 'beneficiary', ']', '=', 'owed', '[', 'auction', '.', 'beneficiary', ']', '.', 'add', 'auction', '.', 'highestBid', ';', 'return', 'cardID', ';', '}']
['function', 'release', 'public', '{', 'require', 'block', '.', 'timestamp', '>', '=', 'releaseTime', ';', 'uint256', 'amount', '=', 'token', '.', 'balanceOf', 'this', ';', 'require', 'amount', '>', '0', ';', 'token', '.', 'safeTransfer', 'beneficiary', 'amount', ';', '}']
['function', 'vestedAmount', 'ERC20Basic', 'token', 'public', 'view', 'returns', 'uint256', '{', 'uint256', 'currentBalance', '=', 'token', '.', 'balanceOf', 'this', ';', 'uint256', 'totalBalance', '=', 'currentBalance', '.', 'add', 'released', '[', 'token', ']', ';', 'if', 'block', '.', 'timestamp', '<', 'cliff', '{', 'return', '0', ';', '}', 'else', 'if', 'block', '.', 'timestamp', '>', '=', 'start', '.', 'add', 'duration', '|', '|', 'revoked', '[', 'token', ']', '{', 'return', 'totalBalance', ';', '}', 'else', '{', 'return', 'totalBalance', '.', 'mul', 'block', '.', 'timestamp', '.', 'sub', 'start', '.', 'div', 'duration', ';', '}', '}']
['function', 'lockedBalanceOf', 'address', '_to', 'public', 'view', 'returns', 'uint256', 'locked', '{', 'uint256', 'initiallyLocked', '=', 'initiallyLockedBalanceOf', '[', '_to', ']', ';', 'if', 'block', '.', 'number', '>', '=', 'lockEndBlock', 'return', '0', ';', 'else', 'if', 'block', '.', 'number', '<', '=', 'transferableFromBlock', 'return', 'initiallyLocked', ';', 'uint256', 'releaseForBlock', '=', 'initiallyLocked', '.', 'div', 'lockEndBlock', '.', 'sub', 'transferableFromBlock', ';', 'uint256', 'released', '=', 'block', '.', 'number', '.', 'sub', 'transferableFromBlock', '.', 'mul', 'releaseForBlock', ';', 'return', 'initiallyLocked', '.', 'sub', 'released', ';', '}']
['function', 'createCustomToken', 'string', '_name', 'string', '_symbol', 'uint8', 'public', 'returns', 'NokuCustomERC20', 'customToken', '{', 'customToken', '=', 'new', 'NokuCustomERC20', '_name', '_symbol', 'DECIMALS', 'block', '.', 'number', 'block', '.', 'number', 'pricingPlan', 'owner', ';', 'customToken', '.', 'transferOwnership', 'msg', '.', 'sender', ';', 'require', 'pricingPlan', '.', 'payFee', 'CUSTOM_ERC20_CREATE_SERVICE_NAME', 'CREATE_AMOUNT', 'msg', '.', 'sender', 'fee', 'payment', 'failed', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'airdrop', 'private', 'view', 'returns', 'bool', '{', 'uint256', 'seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', 'if', 'seed', '-', 'seed', '/', '1000', '*', '1000', '<', 'airDropTracker_', 'return', 'true', ';', 'else', 'return', 'false', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'trade', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'uint', 'amount', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', '&', '&', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', '<', '=', 'amountGet', 'throw', ';', 'tradeBalances', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'user', 'amount', ';', 'orderFills', '[', 'user', ']', '[', 'hash', ']', '=', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', ';', 'Trade', 'tokenGet', 'amount', 'tokenGive', 'amountGive', '*', 'amount', '/', 'amountGet', 'user', 'msg', '.', 'sender', ';', '}']
['function', 'availableVolume', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'constant', 'returns', 'uint', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', 'return', '0', ';', 'uint', 'available1', '=', 'safeSub', 'amountGet', 'orderFills', '[', 'user', ']', '[', 'hash', ']', ';', 'uint', 'available2', '=', 'safeMul', 'tokens', '[', 'tokenGive', ']', '[', 'user', ']', 'amountGet', '/', 'amountGive', ';', 'if', 'available1', '<', 'available2', 'return', 'available1', ';', 'return', 'available2', ';', '}']
['function', 'trade', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'uint', 'amount', 'public', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', '&', '&', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', '<', '=', 'amountGet', 'revert', ';', 'tradeBalances', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'user', 'amount', ';', 'orderFills', '[', 'user', ']', '[', 'hash', ']', '=', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', ';', 'emit', 'Trade', 'tokenGet', 'amount', 'tokenGive', 'amountGive', '*', 'amount', '/', 'amountGet', 'user', 'msg', '.', 'sender', ';', '}']
['function', 'availableVolume', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'constant', 'public', 'returns', 'uint', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', 'return', '0', ';', 'uint', 'available1', '=', 'safeSub', 'amountGet', 'orderFills', '[', 'user', ']', '[', 'hash', ']', ';', 'uint', 'available2', '=', 'safeMul', 'tokens', '[', 'tokenGive', ']', '[', 'user', ']', 'amountGet', '/', 'amountGive', ';', 'if', 'available1', '<', 'available2', 'return', 'available1', ';', 'return', 'available2', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'create', 'public', 'returns', 'uint256', '_tokenId', '{', 'bytes32', 'sudoRandomButTotallyPredictable', '=', 'keccak256', 'abi', '.', 'encodePacked', 'totalSupply', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'uint8', 'body', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '0', ']', '%', '5', '+', '1', ';', 'uint8', 'feet', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '1', ']', '%', '7', '+', '1', ';', 'uint8', 'head', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '2', ']', '%', '7', '+', '1', ';', 'uint8', 'mouth', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '3', ']', '%', '8', '+', '1', ';', 'string', 'memory', 'tokenUri', '=', 'createTokenUri', 'body', 'feet', 'head', 'mouth', ';', 'Token', 'memory', '_newToken', '=', 'Token', '{', 'body', 'body', 'feet', 'feet', 'head', 'head', 'mouth', 'mouth', 'birthBlock', 'uint64', 'block', '.', 'number', '}', ';', '_tokenId', '=', 'tokens', '.', 'push', '_newToken', '-', '1', ';', '_mint', 'msg', '.', 'sender', '_tokenId', ';', '_setTokenURI', '_tokenId', 'tokenUri', ';', 'emit', 'Create', '_tokenId', 'msg', '.', 'sender', 'body', 'feet', 'head', 'mouth', '_newToken', '.', 'birthBlock', 'tokenUri', ';', 'return', '_tokenId', ';', '}']
['function', 'create', 'public', 'returns', 'uint256', '_tokenId', '{', 'bytes32', 'sudoRandomButTotallyPredictable', '=', 'keccak256', 'abi', '.', 'encodePacked', 'totalSupply', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'uint8', 'body', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '0', ']', '%', '5', '+', '1', ';', 'uint8', 'feet', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '1', ']', '%', '5', '+', '1', ';', 'uint8', 'head', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '2', ']', '%', '5', '+', '1', ';', 'uint8', 'mouth', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '3', ']', '%', '5', '+', '1', ';', 'uint8', 'extra', '=', 'uint8', 'sudoRandomButTotallyPredictable', '[', '4', ']', '%', '5', '+', '1', ';', 'string', 'memory', 'tokenUri', '=', 'createTokenUri', 'body', 'feet', 'head', 'mouth', 'extra', ';', 'Token', 'memory', '_newToken', '=', 'Token', '{', 'body', 'body', 'feet', 'feet', 'head', 'head', 'mouth', 'mouth', 'extra', 'extra', 'birthBlock', 'uint64', 'block', '.', 'number', '}', ';', '_tokenId', '=', 'tokens', '.', 'push', '_newToken', '-', '1', ';', '_mint', 'msg', '.', 'sender', '_tokenId', ';', '_setTokenURI', '_tokenId', 'tokenUri', ';', 'emit', 'Create', '_tokenId', 'msg', '.', 'sender', 'body', 'feet', 'head', 'mouth', 'extra', '_newToken', '.', 'birthBlock', 'tokenUri', ';', 'return', '_tokenId', ';', '}']
['function', 'getBlockNumber', 'public', 'view', 'returns', 'uint', 'blockNumber', '{', 'blockNumber', '=', 'block', '.', 'number', '.', 'sub', 'chainStartBlockNumber', ';', '}']
['function', 'trade', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'uint', 'amount', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', '&', '&', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', '<', '=', 'amountGet', 'throw', ';', 'tradeBalances', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'user', 'amount', ';', 'orderFills', '[', 'user', ']', '[', 'hash', ']', '=', 'safeAdd', 'orderFills', '[', 'user', ']', '[', 'hash', ']', 'amount', ';', 'Trade', 'tokenGet', 'amount', 'tokenGive', 'amountGive', '*', 'amount', '/', 'amountGet', 'user', 'msg', '.', 'sender', ';', '}']
['function', 'availableVolume', 'address', 'tokenGet', 'uint', 'amountGet', 'address', 'tokenGive', 'uint', 'amountGive', 'uint', 'expires', 'uint', 'nonce', 'address', 'user', 'uint8', 'v', 'bytes32', 'r', 'bytes32', 's', 'constant', 'returns', 'uint', '{', 'bytes32', 'hash', '=', 'sha256', 'this', 'tokenGet', 'amountGet', 'tokenGive', 'amountGive', 'expires', 'nonce', ';', 'if', '!', 'orders', '[', 'user', ']', '[', 'hash', ']', '|', '|', 'ecrecover', 'sha3', 'x19Ethereum', 'Signed', 'Message', 'n32', 'hash', 'v', 'r', 's', '=', '=', 'user', '&', '&', 'block', '.', 'number', '<', '=', 'expires', 'return', '0', ';', 'uint', 'available1', '=', 'safeSub', 'amountGet', 'orderFills', '[', 'user', ']', '[', 'hash', ']', ';', 'uint', 'available2', '=', 'safeMul', 'tokens', '[', 'tokenGive', ']', '[', 'user', ']', 'amountGet', '/', 'amountGive', ';', 'if', 'available1', '<', 'available2', 'return', 'available1', ';', 'return', 'available2', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'doTransfer', 'address', '_from', 'address', '_to', 'uint', '_amount', 'internal', '{', 'if', '_amount', '=', '=', '0', '{', 'emit', 'Transfer', '_from', '_to', '_amount', ';', 'return', ';', '}', 'require', 'parentSnapShotBlock', '<', 'block', '.', 'number', ';', 'require', '_to', '!', '=', 'address', 'this', ';', 'uint', 'previousBalanceFrom', '=', 'balanceOfAt', '_from', 'block', '.', 'number', ';', 'require', 'previousBalanceFrom', '>', '=', '_amount', ';', 'if', 'isContract', 'controller', '{', 'require', 'TokenController', 'controller', '.', 'onTransfer', '_from', '_to', '_amount', ';', '}', 'updateValueAtNow', 'balances', '[', '_from', ']', 'previousBalanceFrom', '-', '_amount', ';', 'uint', 'previousBalanceTo', '=', 'balanceOfAt', '_to', 'block', '.', 'number', ';', 'require', 'previousBalanceTo', '+', '_amount', '>', '=', 'previousBalanceTo', ';', 'updateValueAtNow', 'balances', '[', '_to', ']', 'previousBalanceTo', '+', '_amount', ';', 'emit', 'Transfer', '_from', '_to', '_amount', ';', '}']
['function', 'getOrderId', 'Order', '.', 'Data', '_orderData', 'internal', 'view', 'returns', 'bytes32', '{', 'if', '_orderData', '.', 'id', '=', '=', 'bytes32', '0', '{', 'bytes32', '_orderId', '=', '_orderData', '.', 'orders', '.', 'getOrderId', '_orderData', '.', 'orderType', '_orderData', '.', 'market', '_orderData', '.', 'amount', '_orderData', '.', 'price', '_orderData', '.', 'creator', 'block', '.', 'number', '_orderData', '.', 'outcome', '_orderData', '.', 'moneyEscrowed', '_orderData', '.', 'sharesEscrowed', ';', 'require', '_orderData', '.', 'orders', '.', 'getAmount', '_orderId', '=', '=', '0', ';', '_orderData', '.', 'id', '=', '_orderId', ';', '}', 'return', '_orderData', '.', 'id', ';', '}']
['function', 'Policy', 'string', '_clientName', 'address', '_brokerEtherAddress', 'address', '_clientEtherAddress', 'string', '_enquiryId', 'public', '{', 'policyInfo', '=', 'PolicyInfo', '{', 'blockNumber', 'block', '.', 'number', 'numInsuranceProducts', '0', 'clientName', '_clientName', 'ixlEnquiryId', '_enquiryId', 'status', 'In', 'Force', '}', ';', 'clientEtherAddress', '=', '_clientEtherAddress', ';', 'brokerEtherAddress', '=', '_brokerEtherAddress', ';', 'allowedToUpgrade', '=', 'false', ';', '}']
['function', 'drawRandomItem', 'string', '_id_max32', 'uint', '_count', 'public', '{', 'require', '_count', '>', '0', '&', '&', '_count', '<', '=', '1000', ';', 'bytes32', '_idByte', '=', 'keccak256', '_id_max32', ';', 'uint', '_totalAmount', '=', 'randomBoxes', '[', '_idByte', ']', '.', 'amount', '.', 'mul', '_count', ';', 'require', 'randomBoxes', '[', '_idByte', ']', '.', 'isStarted', '=', '=', '1', '&', '&', 'randomBoxes', '[', '_idByte', ']', '.', 'finish', '>', '=', 'uint128', 'now', ';', 'transfer', 'randomBoxes', '[', '_idByte', ']', '.', 'recipient', '_totalAmount', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', '_count', ';', 'i', '+', '+', '{', 'uint', 'randomVal', '=', 'uint', 'keccak256', 'blockhash', 'block', '.', 'number', '-', '1', 'randomItems', '[', 'msg', '.', 'sender', ']', '.', 'values', '[', '_idByte', ']', '.', 'length', '%', 'randomBoxes', '[', '_idByte', ']', '.', 'volume', ';', 'randomItems', '[', 'msg', '.', 'sender', ']', '.', 'values', '[', '_idByte', ']', '.', 'push', 'randomVal', ';', '}', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'calcVesting', 'address', '_owner', 'public', 'view', 'returns', 'bool', '_success', 'uint256', '_reward', '{', 'vesting_s', 'memory', '_vesting', '=', 'vesting', '[', '_owner', ']', ';', 'if', '_vesting', '.', 'amount', '=', '=', '0', '|', '|', 'block', '.', 'number', '<', '_vesting', '.', 'startBlock', '{', 'return', 'true', '0', ';', '}', '_reward', '=', '_vesting', '.', 'amount', '.', 'mul', 'block', '.', 'number', '.', 'sub', '_vesting', '.', 'startBlock', '.', 'div', '_vesting', '.', 'endBlock', '.', 'sub', '_vesting', '.', 'startBlock', ';', 'if', '_reward', '>', '_vesting', '.', 'amount', '{', '_reward', '=', '_vesting', '.', 'amount', ';', '}', 'if', '_reward', '<', '=', '_vesting', '.', 'claimedAmount', '{', 'return', 'true', '0', ';', '}', 'return', 'true', '_reward', '.', 'sub', '_vesting', '.', 'claimedAmount', ';', '}']
['function', 'handleLuckyPot', 'uint256', '_eth', 'Player', 'storage', '_player', 'private', '{', 'uint256', '_seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'msg', '.', 'sender', '/', 'now', '.', 'add', 'block', '.', 'number', ';', '_seed', '=', '_seed', '-', '_seed', '/', '1000', '*', '1000', ';', 'uint64', '_level', '=', '0', ';', 'if', '_seed', '<', '227', '{', '_level', '=', '1', ';', '}', 'else', 'if', '_seed', '<', '422', '{', '_level', '=', '2', ';', '}', 'else', 'if', '_seed', '<', '519', '{', '_level', '=', '3', ';', '}', 'else', 'if', '_seed', '<', '600', '{', '_level', '=', '4', ';', '}', 'else', 'if', '_seed', '<', '700', '{', '_level', '=', '5', ';', '}', 'else', '{', '_level', '=', '6', ';', '}', 'if', '_level', '>', '=', '5', '{', 'handleLuckyReward', 'txCount', '_level', '_eth', '_player', ';', '}', 'else', '{', 'LuckyPending', 'memory', '_pending', '=', 'LuckyPending', '{', 'player', 'msg', '.', 'sender', 'amount', '_eth', 'txId', 'txCount', 'block', 'uint64', 'block', '.', 'number', '+', '1', 'level', '_level', '}', ';', 'luckyPendings', '.', 'push', '_pending', ';', '}', 'handleLuckyPending', '_level', '>', '=', '5', '0', '1', ';', '}']
['function', 'handleLuckyPending', 'uint256', '_pendingSkipSize', 'private', '{', 'if', 'luckyPendingIndex', '<', 'luckyPendings', '.', 'length', '-', '_pendingSkipSize', '{', 'LuckyPending', 'storage', '_pending', '=', 'luckyPendings', '[', 'luckyPendingIndex', ']', ';', 'if', '_pending', '.', 'block', '<', '=', 'block', '.', 'number', '{', 'uint256', '_seed', '=', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'timestamp', '.', 'add', 'block', '.', 'difficulty', '.', 'add', 'uint256', 'keccak256', 'abi', '.', 'encodePacked', 'block', '.', 'coinbase', '/', 'now', '.', 'add', 'block', '.', 'gaslimit', '.', 'add', 'block', '.', 'number', ';', '_seed', '=', '_seed', '-', '_seed', '/', '1000', '*', '1000', ';', 'handleLucyPendingForOne', '_pending', '_seed', ';', 'if', 'luckyPendingIndex', '<', 'luckyPendings', '.', 'length', '-', '_pendingSkipSize', '{', '_pending', '=', 'luckyPendings', '[', 'luckyPendingIndex', ']', ';', 'if', '_pending', '.', 'block', '<', '=', 'block', '.', 'number', '{', 'handleLucyPendingForOne', '_pending', '_seed', ';', '}', '}', '}', '}', '}']
['function', 'transfer', 'address', '_to', 'uint256', '_value', 'returns', 'bool', 'success', '{', 'require', 'block', '.', 'number', '>', 'fundingEndBlock', ';', 'if', 'balances', '[', 'msg', '.', 'sender', ']', '>', '=', '_value', '&', '&', '_value', '>', '0', '{', 'balances', '[', 'msg', '.', 'sender', ']', '-', '=', '_value', ';', 'balances', '[', '_to', ']', '+', '=', '_value', ';', 'Transfer', 'msg', '.', 'sender', '_to', '_value', ';', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']
['function', 'transferFrom', 'address', '_from', 'address', '_to', 'uint256', '_value', 'returns', 'bool', 'success', '{', 'require', 'block', '.', 'number', '>', 'fundingEndBlock', ';', 'if', 'balances', '[', '_from', ']', '>', '=', '_value', '&', '&', 'allowed', '[', '_from', ']', '[', 'msg', '.', 'sender', ']', '>', '=', '_value', '&', '&', '_value', '>', '0', '{', 'balances', '[', '_to', ']', '+', '=', '_value', ';', 'balances', '[', '_from', ']', '-', '=', '_value', ';', 'allowed', '[', '_from', ']', '[', 'msg', '.', 'sender', ']', '-', '=', '_value', ';', 'Transfer', '_from', '_to', '_value', ';', 'return', 'true', ';', '}', 'else', '{', 'return', 'false', ';', '}', '}']
['function', 'approve', 'address', '_spender', 'uint256', '_value', 'returns', 'bool', 'success', '{', 'require', 'block', '.', 'number', '>', 'fundingEndBlock', ';', 'allowed', '[', 'msg', '.', 'sender', ']', '[', '_spender', ']', '=', '_value', ';', 'Approval', 'msg', '.', 'sender', '_spender', '_value', ';', 'return', 'true', ';', '}']
['function', 'claimInitialAllotment', 'string', 'twitterStatusID', 'string', 'username', 'payable', '{', 'bytes', 'memory', 'usernameAsBytes', '=', 'bytes', 'username', ';', 'require', 'usernameAsBytes', '.', 'length', '<', '16', ';', 'require', 'msg', '.', 'value', '>', '4000000000000000', ';', 'require', 'block', '.', 'number', '>', 'fundingStartBlock', ';', 'require', 'block', '.', 'number', '<', 'fundingEndBlock', ';', 'require', 'initialAllotments', '[', 'usernameAsBytes', ']', '>', '0', ';', 'string', 'memory', 'url', '=', 'usingOraclize', '.', 'strConcat', 'a', 'username', 'b', 'twitterStatusID', 'c', ';', 'newOraclizeQuery', 'url', ';', 'bytes32', 'queryId', '=', 'oraclize_query', 'URL', 'url', ';', 'validQueryIds', '[', 'queryId', ']', '=', 'usernameAsBytes', ';', '}']
['function', '__callback', 'bytes32', 'myid', 'string', 'result', 'bytes', 'proof', '{', 'require', 'msg', '.', 'sender', '=', '=', 'oraclize_cbAddress', ';', 'newOraclizeCallback', 'result', 'proof', ';', 'require', 'initialAllotments', '[', 'validQueryIds', '[', 'myid', ']', ']', '>', '0', ';', 'require', 'block', '.', 'number', '>', 'fundingStartBlock', ';', 'require', 'block', '.', 'number', '<', 'fundingEndBlock', ';', 'bytes', 'memory', 'resultBytes', '=', 'bytes', 'result', ';', 'require', 'resultBytes', '.', 'length', '=', '=', '57', ';', 'require', 'resultBytes', '[', '0', ']', '=', '=', '0x43', ';', 'require', 'resultBytes', '[', '1', ']', '=', '=', '0x72', ';', 'require', 'resultBytes', '[', '2', ']', '=', '=', '0x79', ';', 'require', 'resultBytes', '[', '3', ']', '=', '=', '0x70', ';', 'require', 'resultBytes', '[', '4', ']', '=', '=', '0x74', ';', 'require', 'resultBytes', '[', '5', ']', '=', '=', '0x6f', ';', 'require', 'resultBytes', '[', '6', ']', '=', '=', '0x43', ';', 'require', 'resultBytes', '[', '7', ']', '=', '=', '0x6f', ';', 'require', 'resultBytes', '[', '8', ']', '=', '=', '0x6e', ';', 'require', 'resultBytes', '[', '9', ']', '=', '=', '0x67', ';', 'require', 'resultBytes', '[', '10', ']', '=', '=', '0x72', ';', 'require', 'resultBytes', '[', '11', ']', '=', '=', '0x65', ';', 'require', 'resultBytes', '[', '12', ']', '=', '=', '0x73', ';', 'require', 'resultBytes', '[', '13', ']', '=', '=', '0x73', ';', 'require', 'resultBytes', '[', '14', ']', '=', '=', '0x20', ';', 'require', 'resultBytes', '[', '15', ']', '=', '=', '0x30', ';', 'require', 'resultBytes', '[', '16', ']', '=', '=', '0x78', ';', 'uint', 'addrUint', '=', '0', ';', 'for', 'uint', 'i', '=', 'resultBytes', '.', 'length', '-', '1', ';', 'i', '+', '1', '>', '15', ';', 'i', '-', '-', '{', 'uint', 'd', '=', 'uint', 'resultBytes', '[', 'i', ']', ';', 'uint', 'to_inc', '=', 'd', '*', '15', '*', '*', 'resultBytes', '.', 'length', '-', 'i', '-', '1', '*', '2', ';', 'addrUint', '+', '=', 'to_inc', ';', '}', 'address', 'addr', '=', 'address', 'addrUint', ';', 'uint256', 'tokenAllotment', '=', 'initialAllotments', '[', 'validQueryIds', '[', 'myid', ']', ']', ';', 'uint256', 'checkedSupply', '=', 'safeAdd', 'totalSupply', 'tokenAllotment', ';', 'require', 'tokenCreationCap', '>', 'checkedSupply', ';', 'totalSupply', '=', 'checkedSupply', ';', 'initialAllotments', '[', 'validQueryIds', '[', 'myid', ']', ']', '=', '0', ';', 'balances', '[', 'addr', ']', '+', '=', 'tokenAllotment', ';', 'InitialAllotmentClaimed', 'validQueryIds', '[', 'myid', ']', ';', 'delete', 'validQueryIds', '[', 'myid', ']', ';', 'Transfer', '0x0', 'addr', 'tokenAllotment', ';', '}']
['function', 'buyTokens', 'address', 'beneficiary', 'public', 'payable', '{', 'require', 'beneficiary', '!', '=', 'address', '0', ';', 'require', 'msg', '.', 'value', '!', '=', '0', ';', 'require', 'block', '.', 'number', '>', 'fundingStartBlock', ';', 'require', 'block', '.', 'number', '<', 'fundingEndBlock', ';', 'uint256', 'tokens', '=', 'safeMult', 'msg', '.', 'value', 'tokenExchangeRate', ';', 'uint256', 'checkedTotalSupply', '=', 'safeAdd', 'totalSupply', 'tokens', ';', 'uint256', 'checkedCrowdsaleSupply', '=', 'safeAdd', 'totalSupplyFromCrowdsale', 'tokens', ';', 'require', 'tokenCreationCap', '>', 'checkedTotalSupply', ';', 'require', 'safeMult', 'checkedCrowdsaleSupply', '3', '<', 'totalSupply', ';', 'totalSupply', '=', 'checkedTotalSupply', ';', 'totalSupplyFromCrowdsale', '=', 'checkedCrowdsaleSupply', ';', 'balances', '[', 'msg', '.', 'sender', ']', '+', '=', 'tokens', ';', 'Transfer', '0x0', 'beneficiary', 'tokens', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'saveRN', 'uint', '_block', 'public', '{', 'if', '_block', '<', 'block', '.', 'number', '&', '&', 'randomNumber', '[', '_block', ']', '=', '=', '0', '{', 'if', 'blockhash', '_block', '!', '=', '0x0', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', '_block', ';', 'else', 'randomNumber', '[', '_block', ']', '=', 'uint', 'blockhash', 'block', '.', 'number', '-', '1', ';', '}', 'if', 'randomNumber', '[', '_block', ']', '!', '=', '0', '{', 'uint', 'rewardToSend', '=', 'reward', '[', '_block', ']', ';', 'reward', '[', '_block', ']', '=', '0', ';', 'msg', '.', 'sender', '.', 'send', 'rewardToSend', ';', '}', '}']
['function', 'passPeriod', 'public', '{', 'require', 'now', '-', 'lastPeriodChange', '>', '=', 'timePerPeriod', '[', 'uint8', 'period', ']', ';', 'if', 'period', '=', '=', 'Period', '.', 'Activation', '{', 'rnBlock', '=', 'block', '.', 'number', '+', '1', ';', 'rng', '.', 'requestRN', 'rnBlock', ';', 'period', '=', 'Period', '.', 'Draw', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Draw', '{', 'randomNumber', '=', 'rng', '.', 'getUncorrelatedRN', 'rnBlock', ';', 'require', 'randomNumber', '!', '=', '0', ';', 'period', '=', 'Period', '.', 'Vote', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Vote', '{', 'period', '=', 'Period', '.', 'Appeal', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Appeal', '{', 'period', '=', 'Period', '.', 'Execution', ';', '}', 'else', 'if', 'period', '=', '=', 'Period', '.', 'Execution', '{', 'period', '=', 'Period', '.', 'Activation', ';', '+', '+', 'session', ';', 'segmentSize', '=', '0', ';', 'rnBlock', '=', '0', ';', 'randomNumber', '=', '0', ';', '}', 'lastPeriodChange', '=', 'now', ';', 'NewPeriod', 'period', 'session', ';', '}']
['function', 'transferNewBunny', 'address', '_to', 'uint32', '_bunnyid', 'uint', 'localdnk', 'uint', 'breed', 'uint32', 'matron', 'uint32', 'sire', 'internal', '{', 'emit', 'NewBunny', '_bunnyid', 'localdnk', 'block', '.', 'number', 'breed', ';', 'emit', 'CreateChildren', 'matron', 'sire', '_bunnyid', ';', 'addTokenList', '_to', '_bunnyid', ';', 'totalSalaryBunny', '[', '_bunnyid', ']', '=', '0', ';', 'motherCount', '[', '_bunnyid', ']', '=', '0', ';', 'totalBunny', '+', '+', ';', '}']
['function', 'createGennezise', 'uint32', '_matron', 'public', '{', 'bool', 'promo', '=', 'false', ';', 'require', 'isPriv', ';', 'require', 'isPauseSave', ';', 'require', 'isPromoPause', ';', 'if', 'totalGen0', '>', 'promoGen0', '{', 'require', 'msg', '.', 'sender', '=', '=', 'ownerServer', '|', '|', 'msg', '.', 'sender', '=', '=', 'ownerCEO', ';', '}', 'else', 'if', '!', 'msg', '.', 'sender', '=', '=', 'ownerServer', '|', '|', 'msg', '.', 'sender', '=', '=', 'ownerCEO', '{', 'require', '!', 'ownerGennezise', '[', 'msg', '.', 'sender', ']', ';', 'ownerGennezise', '[', 'msg', '.', 'sender', ']', '=', 'true', ';', 'promo', '=', 'true', ';', '}', 'uint', 'localdnk', '=', 'privateContract', '.', 'getNewRabbit', 'msg', '.', 'sender', ';', 'Rabbit', 'memory', '_Rabbit', '=', 'Rabbit', '0', '0', 'block', '.', 'number', '0', '0', '0', '0', ';', 'uint32', '_bunnyid', '=', 'uint32', 'rabbits', '.', 'push', '_Rabbit', ';', 'mapDNK', '[', '_bunnyid', ']', '=', 'localdnk', ';', 'transferNewBunny', 'msg', '.', 'sender', '_bunnyid', 'localdnk', '0', '0', '0', ';', 'lastTimeGen0', '=', 'now', ';', 'lastIdGen0', '=', '_bunnyid', ';', 'totalGen0', '+', '+', ';', 'setRabbitMother', '_bunnyid', '_matron', ';', 'if', 'promo', '{', 'giffblock', '[', '_bunnyid', ']', '=', 'true', ';', '}', '}']
['function', 'createChildren', 'uint32', '_matron', 'uint32', '_sire', 'public', 'payable', 'returns', 'uint32', '{', 'require', 'isPriv', ';', 'require', 'isPauseSave', ';', 'require', 'rabbitToOwner', '[', '_matron', ']', '=', '=', 'msg', '.', 'sender', ';', 'require', 'rabbits', '[', '_sire', '-', '1', ']', '.', 'role', '=', '=', '1', ';', 'require', '_matron', '!', '=', '_sire', ';', 'require', 'getBreed', '_matron', ';', 'require', 'msg', '.', 'value', '>', '=', 'getSirePrice', '_sire', ';', 'uint', 'genome', '=', 'getGenomeChildren', '_matron', '_sire', ';', 'uint', 'localdnk', '=', 'privateContract', '.', 'mixDNK', 'mapDNK', '[', '_matron', ']', 'mapDNK', '[', '_sire', ']', 'genome', ';', 'Rabbit', 'memory', 'rabbit', '=', 'Rabbit', '_matron', '_sire', 'block', '.', 'number', '0', '0', '0', 'genome', ';', 'uint32', 'bunnyid', '=', 'uint32', 'rabbits', '.', 'push', 'rabbit', ';', 'mapDNK', '[', 'bunnyid', ']', '=', 'localdnk', ';', 'uint', '_moneyMother', '=', 'rabbitSirePrice', '[', '_sire', ']', '.', 'div', '4', ';', '_transferMoneyMother', '_matron', '_moneyMother', ';', 'rabbitToOwner', '[', '_sire', ']', '.', 'transfer', 'rabbitSirePrice', '[', '_sire', ']', ';', 'uint', 'system', '=', 'rabbitSirePrice', '[', '_sire', ']', '.', 'div', '100', ';', 'system', '=', 'system', '.', 'mul', 'commission_system', ';', 'ownerMoney', '.', 'transfer', 'system', ';', 'coolduwnUP', '_matron', ';', 'transferNewBunny', 'rabbitToOwner', '[', '_matron', ']', 'bunnyid', 'localdnk', 'genome', '_matron', '_sire', ';', 'setRabbitMother', 'bunnyid', '_matron', ';', 'return', 'bunnyid', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'balanceOf', 'address', '_owner', 'public', 'constant', 'returns', 'uint256', 'balance', '{', 'return', 'balanceOfAt', '_owner', 'block', '.', 'number', ';', '}']
['function', 'totalSupply', 'public', 'constant', 'returns', 'uint', '{', 'return', 'totalSupplyAt', 'block', '.', 'number', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'tgrSetLive', 'public', 'only', 'projectWallet', 'isNotTgrLive', 'isNotFrozenOnly', '{', 'tgrNumber', '+', '=', '1', ';', 'tgrStartBlock', '=', 'block', '.', 'number', ';', 'tgrAmountCollected', '=', '0', ';', 'tgrContributedAmount', '=', '0', ';', 'emit', 'TGRStarted', 'tgrSettingsAmount', 'tgrSettingsMinimalContribution', 'tgrSettingsPartContributor', 'tgrSettingsPartProject', 'tgrSettingsPartFounders', 'tgrSettingsBlocksPerStage', 'tgrSettingsPartContributorIncreasePerStage', 'tgrSettingsMaxStages', 'block', '.', 'number', 'tgrNumber', ';', '}']
['function', 'tgrSetFinished', 'public', 'only', 'projectWallet', 'isTgrLive', 'isNotFrozenOnly', '{', 'emit', 'TGRFinished', 'block', '.', 'number', 'tgrAmountCollected', ';', 'tgrStartBlock', '=', '0', ';', '}']
['function', 'tgrLive', 'view', 'public', 'returns', 'bool', '{', 'if', 'tgrStartBlock', '=', '=', '0', '{', 'return', 'false', ';', '}', 'uint', 'stage', '=', 'block', '.', 'number', '.', 'sub', 'tgrStartBlock', '.', 'div', 'tgrSettingsBlocksPerStage', ';', 'if', 'stage', '<', 'tgrSettingsMaxStages', '{', 'if', 'tgrAmountCollected', '>', '=', 'tgrSettingsAmount', '{', 'return', 'false', ';', '}', 'else', '{', 'return', 'true', ';', '}', '}', 'else', '{', 'return', 'false', ';', '}', '}']
['function', 'tgrStageBlockLeft', 'public', 'view', 'returns', 'int', '{', 'if', 'tgrLive', '{', 'uint', 'stage', '=', 'block', '.', 'number', '.', 'sub', 'tgrStartBlock', '.', 'div', 'tgrSettingsBlocksPerStage', ';', 'return', 'int', 'tgrStartBlock', '.', 'add', 'stage', '+', '1', '.', 'mul', 'tgrSettingsBlocksPerStage', '.', 'sub', 'block', '.', 'number', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']
['function', 'tgrCurrentPartContributor', 'public', 'view', 'returns', 'int', '{', 'if', 'tgrLive', '{', 'uint', 'stage', '=', 'block', '.', 'number', '.', 'sub', 'tgrStartBlock', '.', 'div', 'tgrSettingsBlocksPerStage', ';', 'return', 'int', 'tgrSettingsPartContributor', '.', 'add', 'stage', '.', 'mul', 'tgrSettingsPartContributorIncreasePerStage', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']
['function', 'tgrNextPartContributor', 'public', 'view', 'returns', 'int', '{', 'if', 'tgrLive', '{', 'uint', 'stage', '=', 'block', '.', 'number', '.', 'sub', 'tgrStartBlock', '.', 'div', 'tgrSettingsBlocksPerStage', '.', 'add', '1', ';', 'return', 'int', 'tgrSettingsPartContributor', '.', 'add', 'stage', '.', 'mul', 'tgrSettingsPartContributorIncreasePerStage', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']
['function', 'tgrCurrentStage', 'public', 'view', 'returns', 'int', '{', 'if', 'tgrLive', '{', 'return', 'int', 'block', '.', 'number', '.', 'sub', 'tgrStartBlock', '.', 'div', 'tgrSettingsBlocksPerStage', '.', 'add', '1', ';', '}', 'else', '{', 'return', '-', '1', ';', '}', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'hillpayout', 'internal', '{', 'require', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', ';', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '=', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', ';', 'ethforp3dbuy', '=', 'ethforp3dbuy', '.', 'add', 'address', 'this', '.', 'balance', '.', 'sub', 'ethforp3dbuy', '.', 'div', '100', ';', 'owner', '.', 'transfer', 'address', 'this', '.', 'balance', '.', 'sub', 'ethforp3dbuy', '.', 'div', '100', ';', 'roundvars', '[', 'round', ']', '.', 'ATPO', '=', 'roundvars', '[', 'round', ']', '.', 'ATPO', '.', 'add', 'address', 'this', '.', 'balance', '.', 'sub', 'ethforp3dbuy', '.', 'div', '2', ';', 'roundownables', '[', 'round', ']', '.', 'hillowner', '.', 'transfer', 'address', 'this', '.', 'balance', '.', 'sub', 'ethforp3dbuy', '.', 'div', '2', ';', '}']
['function', 'attackhill', 'uint256', 'amtsoldiers', 'public', 'payable', 'returns', 'bool', 'uint', '{', 'require', 'msg', '.', 'value', '>', '=', '1', 'finney', ';', 'if', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '{', 'hillpayout', ';', '}', 'require', 'amtsoldiers', '<', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', ';', 'require', 'amtsoldiers', '>', '=', '1', ';', 'if', 'msg', '.', 'sender', '=', '=', 'roundownables', '[', 'round', ']', '.', 'hillowner', '{', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '=', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '.', 'add', 'amtsoldiers', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'return', 'false', '0', ';', '}', 'if', 'msg', '.', 'sender', '!', '=', 'roundownables', '[', 'round', ']', '.', 'hillowner', '{', 'if', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '<', 'amtsoldiers', '{', 'emit', 'hilltakeover', 'roundownables', '[', 'round', ']', '.', 'hillowner', 'msg', '.', 'sender', ';', 'emit', 'battle', 'msg', '.', 'sender', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', 'roundownables', '[', 'round', ']', '.', 'hillowner', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', ';', 'roundownables', '[', 'round', ']', '.', 'hillowner', '=', 'msg', '.', 'sender', ';', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '=', 'amtsoldiers', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'return', 'true', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', ';', '}', 'if', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '>', '=', 'amtsoldiers', '{', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '=', 'roundownables', '[', 'round', ']', '.', 'soldiersdefendinghill', '.', 'sub', 'amtsoldiers', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'emit', 'battle', 'msg', '.', 'sender', 'amtsoldiers', 'roundownables', '[', 'round', ']', '.', 'hillowner', 'amtsoldiers', ';', 'return', 'false', 'amtsoldiers', ';', '}', '}', '}']
['function', 'updatesolsforhire', 'internal', '{', 'roundvars', '[', 'round', ']', '.', 'solsforhire', '=', 'roundvars', '[', 'round', ']', '.', 'solsforhire', '.', 'add', 'block', '.', 'number', '.', 'sub', 'roundvars', '[', 'round', ']', '.', 'solslastupdate', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'soldierreplenishrate', ';', 'roundvars', '[', 'round', ']', '.', 'solslastupdate', '=', 'block', '.', 'number', ';', '}']
['function', 'createvillage', 'public', 'payable', '{', 'require', 'msg', '.', 'value', '>', '=', '10', 'finney', ';', 'if', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '{', 'hillpayout', ';', '}', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'owner', '=', 'msg', '.', 'sender', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'beginnerprotection', '=', 'block', '.', 'number', ';', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '+', '+', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'defending', '=', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ';', 'Redeemable', '[', 'msg', '.', 'sender', ']', '+', '+', ';', 'roundownables', '[', 'round', ']', '.', 'redeemedvils', '[', 'msg', '.', 'sender', ']', '+', '+', ';', '}']
['function', 'batchcreatevillage', 'uint256', 'amt', 'public', 'payable', '{', 'require', 'msg', '.', 'value', '>', '=', '10', 'finney', '*', 'amt', ';', 'require', 'amt', '>', '=', '1', ';', 'require', 'amt', '<', '=', '40', ';', 'if', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '{', 'hillpayout', ';', '}', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'amt', ';', 'i', '+', '+', '{', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'owner', '=', 'msg', '.', 'sender', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'beginnerprotection', '=', 'block', '.', 'number', ';', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '+', '+', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'defending', '=', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ';', '}', 'Redeemable', '[', 'msg', '.', 'sender', ']', '=', 'Redeemable', '[', 'msg', '.', 'sender', ']', '.', 'add', 'amt', ';', 'roundownables', '[', 'round', ']', '.', 'redeemedvils', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'redeemedvils', '[', 'msg', '.', 'sender', ']', '.', 'add', 'amt', ';', '}']
['function', 'cheapredeemvillage', 'public', 'payable', '{', 'require', 'msg', '.', 'value', '>', '=', '1', 'finney', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'redeemedvils', '[', 'msg', '.', 'sender', ']', '<', 'Redeemable', '[', 'msg', '.', 'sender', ']', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'owner', '=', 'msg', '.', 'sender', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'beginnerprotection', '=', 'block', '.', 'number', ';', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '+', '+', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'defending', '=', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ';', 'roundownables', '[', 'round', ']', '.', 'redeemedvils', '[', 'msg', '.', 'sender', ']', '+', '+', ';', '}']
['function', 'preregvills', 'address', 'reg', 'public', 'onlyOwner', '{', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'owner', '=', 'reg', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'beginnerprotection', '=', 'block', '.', 'number', ';', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '+', '+', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ']', '.', 'defending', '=', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', ';', '}']
['function', 'attack', 'uint256', 'village', 'uint256', 'amtsoldiers', 'public', 'payable', 'returns', 'bool', 'uint', '{', 'require', 'msg', '.', 'value', '>', '=', '1', 'finney', ';', 'if', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '+', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '{', 'hillpayout', ';', '}', 'uint', 'bpcheck', '=', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'beginnerprotection', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'bpamount', ';', 'require', 'block', '.', 'number', '>', 'bpcheck', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', '!', '=', '0', ';', 'require', 'amtsoldiers', '<', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', ';', 'require', 'amtsoldiers', '>', '=', '1', ';', 'if', 'msg', '.', 'sender', '=', '=', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', '{', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '=', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '.', 'add', 'amtsoldiers', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'return', 'false', '0', ';', '}', 'if', 'msg', '.', 'sender', '!', '=', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', '{', 'if', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '<', 'amtsoldiers', '{', 'emit', 'battle', 'msg', '.', 'sender', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', ';', 'emit', 'villtakeover', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', 'msg', '.', 'sender', 'village', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', '=', 'msg', '.', 'sender', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '=', 'amtsoldiers', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'collecttaxes', 'village', ';', 'return', 'true', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', ';', '}', 'if', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '>', '=', 'amtsoldiers', '{', 'emit', 'battle', 'msg', '.', 'sender', 'amtsoldiers', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', 'amtsoldiers', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '=', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'defending', '.', 'sub', 'amtsoldiers', ';', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'soldiers', '[', 'msg', '.', 'sender', ']', '.', 'sub', 'amtsoldiers', ';', 'return', 'false', 'amtsoldiers', ';', '}', '}', '}']
['function', 'renewbeginnerprotection', 'uint256', 'village', 'public', 'payable', '{', 'require', 'msg', '.', 'value', '>', '=', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'village', '.', 'mul', '1', 'finney', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'beginnerprotection', '=', 'block', '.', 'number', ';', '}']
['function', 'batchcollecttaxes', 'uint256', 'a', 'uint256', 'b', 'uint256', 'c', 'uint256', 'd', 'uint256', 'e', 'uint256', 'f', 'uint256', 'g', 'uint256', 'h', 'uint256', 'i', 'uint256', 'j', 'public', 'payable', '{', 'require', 'msg', '.', 'value', '>', '=', '10', 'finney', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'a', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'b', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'c', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'd', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'e', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'f', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'g', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'h', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'i', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'j', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'a', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'b', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'c', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'd', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'e', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'f', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'g', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'h', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'i', ']', '.', 'lastcollect', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'j', ']', '.', 'lastcollect', ';', 'uint256', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'a', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'a', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'a', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'b', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'b', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'b', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'c', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'c', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'c', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'j', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'j', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'j', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'd', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'd', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'd', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'e', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'e', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'e', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'f', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'f', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'f', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'g', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'g', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'g', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'h', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'h', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'h', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'i', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'i', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'i', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', '}']
['function', 'collecttaxes', 'uint256', 'village', 'public', 'payable', 'returns', 'uint', '{', 'require', 'msg', '.', 'value', '>', '=', '1', 'finney', ';', 'if', 'block', '.', 'number', '>', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '.', 'add', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '{', 'hillpayout', ';', '}', 'require', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'owner', '=', '=', 'msg', '.', 'sender', ';', 'require', 'block', '.', 'number', '>', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'lastcollect', ';', 'uint256', 'test', '=', 'block', '.', 'number', '.', 'sub', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'lastcollect', '.', 'mul', 'roundvars', '[', 'round', ']', '.', 'nextVillageId', '.', 'sub', 'village', ';', 'if', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '<', 'test', '{', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '.', 'add', 'test', ';', '}', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '=', 'roundownables', '[', 'round', ']', '.', 'GOTCH', '[', 'msg', '.', 'sender', ']', '.', 'add', 'test', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '.', 'sub', 'test', ';', 'roundownables', '[', 'round', ']', '.', 'villages', '[', 'village', ']', '.', 'lastcollect', '=', 'block', '.', 'number', ';', 'return', 'test', ';', '}']
['function', 'startnewround', 'public', '{', 'require', 'roundvars', '[', 'round', ']', '.', 'ATPO', '>', 'roundownables', '[', 'round', ']', '.', 'roundlength', ';', 'round', '+', '+', ';', 'roundvars', '[', 'round', ']', '.', 'totalsupplyGOTCH', '=', 'nextroundtotalsupplyGOTCH', ';', 'roundvars', '[', 'round', ']', '.', 'GOTCHatcontract', '=', 'nextroundtotalsupplyGOTCH', ';', 'roundvars', '[', 'round', ']', '.', 'solsforhire', '=', 'nextroundsolsforhire', ';', 'roundvars', '[', 'round', ']', '.', 'soldierreplenishrate', '=', 'nextroundsoldierreplenishrate', ';', 'roundvars', '[', 'round', ']', '.', 'solslastupdate', '=', 'block', '.', 'number', ';', 'updatesolbuyrate', ';', 'roundvars', '[', 'round', ']', '.', 'lastblockpayout', '=', 'block', '.', 'number', ';', 'roundownables', '[', 'round', ']', '.', 'hillowner', '=', 'msg', '.', 'sender', ';', 'roundvars', '[', 'round', ']', '.', 'nextpayamount', '=', 'roundvars', '[', 'round', '-', '1', ']', '.', 'nextpayamount', ';', 'roundvars', '[', 'round', ']', '.', 'nextowneramount', '=', 'roundvars', '[', 'round', '-', '1', ']', '.', 'nextowneramount', ';', 'roundvars', '[', 'round', ']', '.', 'previousethamount', '=', 'roundvars', '[', 'round', '-', '1', ']', '.', 'previousethamount', ';', 'roundvars', '[', 'round', ']', '.', 'blocksbeforenewpay', '=', 'nextroundblocksbeforenewpay', ';', 'roundownables', '[', 'round', ']', '.', 'ERCtradeactive', '=', 'nextroundERCtradeactive', ';', 'roundvars', '[', 'round', ']', '.', 'bpamount', '=', '30000', ';', '}']
['function', 'getRamdon', 'private', 'view', 'returns', 'uint', '{', 'bytes32', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'blockhash', 'block', '.', 'number', '-', '1', ';', 'for', 'uint', 'i', '=', '0', ';', 'i', '<', 'addressArray', '.', 'length', ';', 'i', '+', '+', '{', 'ramdon', '=', 'keccak256', 'abi', '.', 'encodePacked', 'ramdon', 'now', 'addressArray', '[', 'i', ']', ';', '}', 'uint', 'index', '=', 'uint', 'ramdon', '%', 'addressArray', '.', 'length', ';', 'return', 'index', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'allocLastTxRewardByHand', 'public', 'onlyOwner', 'returns', 'bool', 'success', '{', 'lastEpochBlock', '=', 'safeAdd', 'block', '.', 'number', 'initBlockEpoch', ';', 'doReward', ';', 'success', '=', 'true', ';', '}']
['function', 'dInit', 'address', 'defaultErc20', 'address', 'initOwner', 'bool', 'disableErc20OwnerClaim', 'only_editors', 'external', 'returns', 'bytes32', 'democHash', '{', 'democHash', '=', 'keccak256', 'abi', '.', 'encodePacked', 'democList', '.', 'length', 'blockhash', 'block', '.', 'number', '-', '1', 'defaultErc20', 'now', ';', '_addDemoc', 'democHash', 'defaultErc20', 'initOwner', 'disableErc20OwnerClaim', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'startCrowdsale', 'onlyOwner', 'public', 'returns', 'bool', '{', 'require', '!', 'crowdsaleStarted', ';', 'crowdsaleStarted', '=', 'true', ';', 'preIcoStartBlock', '=', 'block', '.', 'number', ';', 'discountedIcoStartBlock', '=', 'block', '.', 'number', '+', 'preSaleDuration', ';', 'mainIcoStartBlock', '=', 'block', '.', 'number', '+', 'preSaleDuration', '+', 'discountedSaleDuration', ';', 'mainIcoEndBlock', '=', 'block', '.', 'number', '+', 'preSaleDuration', '+', 'discountedSaleDuration', '+', 'mainSaleDuration', ';', '}']
['function', '_validateTokensLimits', 'uint256', '_tokens', 'internal', '{', 'if', 'block', '.', 'number', '>', 'preIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'discountedIcoStartBlock', '{', 'preIcoTokensSold', '=', 'preIcoTokensSold', '.', 'add', '_tokens', ';', 'require', 'preIcoTokensSold', '<', '=', 'preIcoCap', '&', '&', 'totalRaisedInCents', '<', '=', 'hardCapInCents', ';', '}', 'else', 'if', 'block', '.', 'number', '>', '=', 'discountedIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoStartBlock', '{', 'require', 'discountedIcoTokensSold', '<', '=', 'icoCap', '&', '&', 'totalRaisedInCents', '<', '=', 'hardCapInCents', ';', '}', 'else', 'if', 'block', '.', 'number', '>', '=', 'mainIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoEndBlock', '{', 'icoTokensSold', '=', 'icoTokensSold', '.', 'add', '_tokens', ';', 'require', 'icoTokensSold', '<', '=', 'icoCap', '&', '&', 'totalRaisedInCents', '<', 'hardCapInCents', ';', '}', 'else', '{', 'revert', ';', '}', '}']
['function', '_getTokenAmount', 'uint256', '_usdCents', 'CrowdsaleStarted', 'public', 'view', 'returns', 'uint256', '{', 'uint256', 'tokens', ';', 'if', 'block', '.', 'number', '>', 'preIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'discountedIcoStartBlock', 'tokens', '=', '_usdCents', '.', 'div', '100', '.', 'mul', 'presaleTokensPerDollar', ';', 'if', 'block', '.', 'number', '>', '=', 'discountedIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoStartBlock', 'tokens', '=', '_usdCents', '.', 'div', '100', '.', 'mul', 'discountedTokensPerDollar', ';', 'if', 'block', '.', 'number', '>', '=', 'mainIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoEndBlock', 'tokens', '=', '_usdCents', '.', 'div', '100', '.', 'mul', 'mainTokensPerDollar', ';', 'return', 'tokens', ';', '}']
['function', 'getStage', 'public', 'view', 'returns', 'string', '{', 'if', '!', 'crowdsaleStarted', '{', 'return', 'Crowdsale', 'not', 'started', 'yet', ';', '}', 'if', 'block', '.', 'number', '>', 'preIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'discountedIcoStartBlock', '{', 'return', 'Presale', ';', '}', 'else', 'if', 'block', '.', 'number', '>', '=', 'discountedIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoStartBlock', '{', 'return', 'Discounted', 'sale', ';', '}', 'else', 'if', 'block', '.', 'number', '>', '=', 'mainIcoStartBlock', '&', '&', 'block', '.', 'number', '<', 'mainIcoEndBlock', '{', 'return', 'Crowdsale', ';', '}', 'else', 'if', 'block', '.', 'number', '>', 'mainIcoEndBlock', '{', 'return', 'Sale', 'ended', ';', '}', '}']
['function', 'burnTokens', 'public', 'onlyOwner', '{', 'require', 'block', '.', 'number', '>', 'mainIcoEndBlock', ';', 'require', 'token', '.', 'burnTokensForSale', ';', '}']
['function', 'finalizeSale', 'public', 'onlyOwner', '{', 'require', 'block', '.', 'number', '>', 'mainIcoEndBlock', ';', 'token', '.', 'finalize', ';', '}']
['function', 'activateSaleContract', 'address', '_saleContract', 'public', 'onlyOwner', '{', 'require', 'tokensForSale', '>', '0', ';', 'require', 'teamTokens', '>', '0', ';', 'require', '_saleContract', '!', '=', 'address', '0', ';', 'require', 'saleContract', '=', '=', 'address', '0', ';', 'saleContract', '=', '_saleContract', ';', 'uint', 'totalValue', '=', 'teamTokens', '.', 'mul', '50', '.', 'div', '100', ';', 'balances', '[', 'teamAddressOne', ']', '=', 'balances', '[', 'teamAddressOne', ']', '.', 'add', 'totalValue', ';', 'balances', '[', 'teamAddressTwo', ']', '=', 'balances', '[', 'teamAddressTwo', ']', '.', 'add', 'totalValue', ';', 'balances', '[', 'advisorsAddress', ']', '=', 'balances', '[', 'advisorsAddress', ']', '.', 'add', 'advisorsTokens', ';', 'balances', '[', 'teamAddressThree', ']', '=', 'balances', '[', 'teamAddressThree', ']', '.', 'add', 'teamAddressThreeTokens', ';', 'balances', '[', 'marketingAddress', ']', '=', 'balances', '[', 'marketingAddress', ']', '.', 'add', 'marketingTeamTokens', ';', 'releasedTeamTokens', '=', 'releasedTeamTokens', '.', 'add', 'teamTokens', ';', 'releasedAdvisorsTokens', '=', 'releasedAdvisorsTokens', '.', 'add', 'advisorsTokens', ';', 'releasedMarketingTokens', '=', 'releasedMarketingTokens', '.', 'add', 'marketingTeamTokens', ';', 'balances', '[', 'saleContract', ']', '=', 'balances', '[', 'saleContract', ']', '.', 'add', 'tokensForSale', ';', 'totalReleased', '=', 'totalReleased', '.', 'add', 'tokensForSale', '.', 'add', 'teamTokens', '.', 'add', 'advisorsTokens', '.', 'add', 'teamAddressThreeTokens', '.', 'add', 'marketingTeamTokens', ';', 'tokensForSale', '=', '0', ';', 'teamTokens', '=', '0', ';', 'teamAddressThreeTokens', '=', '0', ';', 'icoStartBlock', '=', 'block', '.', 'number', ';', 'assert', 'totalReleased', '<', '=', 'totalSupply', ';', 'emit', 'Transfer', 'address', 'this', 'teamAddressOne', 'totalValue', ';', 'emit', 'Transfer', 'address', 'this', 'teamAddressTwo', 'totalValue', ';', 'emit', 'Transfer', 'address', 'this', 'teamAddressThree', 'teamAddressThreeTokens', ';', 'emit', 'Transfer', 'address', 'this', 'saleContract', '2500000000', '*', '1', 'ether', ';', 'emit', 'SaleContractActivation', 'saleContract', '2500000000', '*', '1', 'ether', ';', '}']
['function', '_rand', 'internal', 'returns', 'uint256', '{', '_seed', '=', 'uint256', 'keccak256', '_seed', 'blockhash', 'block', '.', 'number', '-', '1', 'block', '.', 'coinbase', 'block', '.', 'difficulty', ';', 'return', '_seed', ';', '}']
['function', '_randBySeed', 'uint256', '_outSeed', 'internal', 'view', 'returns', 'uint256', '{', 'return', 'uint256', 'keccak256', '_outSeed', 'blockhash', 'block', '.', 'number', '-', '1', 'block', '.', 'coinbase', 'block', '.', 'difficulty', ';', '}']
['function', 'claimOwnership', 'onlyPendingOwner', 'public', '{', 'require', 'block', '.', 'number', '<', '=', 'end', '&', '&', 'block', '.', 'number', '>', '=', 'start', ';', 'emit', 'OwnershipTransferred', 'owner', 'pendingOwner', ';', 'owner', '=', 'pendingOwner', ';', 'pendingOwner', '=', 'address', '0', ';', 'end', '=', '0', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
['function', 'startFunding', 'uint256', '_fundingStartBlock', 'uint256', '_fundingStopBlock', 'isOwner', 'external', '{', 'if', 'isFunding', 'throw', ';', 'if', '_fundingStartBlock', '>', '=', '_fundingStopBlock', 'throw', ';', 'if', 'block', '.', 'number', '>', '=', '_fundingStartBlock', 'throw', ';', 'fundingStartBlock', '=', '_fundingStartBlock', ';', 'fundingStopBlock', '=', '_fundingStopBlock', ';', 'isFunding', '=', 'true', ';', '}']
