start,line_number,size,bug_type,approach,bug_snip
3223,182,372,Re-entrancy,code snippet injection,"mapping(address => uint) redeemableEther_re_ent25;
function claimReward_re_ent25() public {        
    // ensure there is a reward to give
    require(redeemableEther_re_ent25[msg.sender] > 0);
    uint transferValue_re_ent25 = redeemableEther_re_ent25[msg.sender];
    msg.sender.transfer(transferValue_re_ent25);   //bug
    redeemableEther_re_ent25[msg.sender] = 0;
}
"
4270,222,191,Re-entrancy,code snippet injection,"uint256 counter_re_ent21 = 0;
function callme_re_ent21() public {
    require(counter_re_ent21<=5);
	if(!(msg.sender.send(10 ether))){
        revert();
    }
    counter_re_ent21 += 1;
}   
"
26885,1155,346,Re-entrancy,code snippet injection,"mapping(address => uint) userBalance_re_ent5;
function withdrawBalance_re_ent5() public {
    // send userBalance[msg.sender] ethers to msg.sender
    // if mgs.sender is a contract, it will call its fallback function
    if(!(msg.sender.send(userBalance_re_ent5[msg.sender]))){
        revert();
    }
    userBalance_re_ent5[msg.sender] = 0;
}
"
2572,125,365,Re-entrancy,code snippet injection,"mapping(address => uint) redeemableEther_re_ent4;
function claimReward_re_ent4() public {        
    // ensure there is a reward to give
    require(redeemableEther_re_ent4[msg.sender] > 0);
    uint transferValue_re_ent4 = redeemableEther_re_ent4[msg.sender];
    msg.sender.transfer(transferValue_re_ent4);   //bug
    redeemableEther_re_ent4[msg.sender] = 0;
}
"
12751,600,308,Re-entrancy,code snippet injection,"mapping(address => uint) balances_re_ent10;
function withdrawFunds_re_ent10 (uint256 _weiToWithdraw) public {
    require(balances_re_ent10[msg.sender] >= _weiToWithdraw);
    // limit the withdrawal
    require(msg.sender.send(_weiToWithdraw));  //bug
    balances_re_ent10[msg.sender] -= _weiToWithdraw;
}
"
29280,1179,307,Re-entrancy,code snippet injection,"mapping(address => uint) balances_re_ent31;
function withdrawFunds_re_ent31(uint256 _weiToWithdraw) public {
    require(balances_re_ent31[msg.sender] >= _weiToWithdraw);
    // limit the withdrawal
    require(msg.sender.send(_weiToWithdraw));  //bug
    balances_re_ent31[msg.sender] -= _weiToWithdraw;
}
"
12909,616,186,Re-entrancy,code snippet injection,"uint256 counter_re_ent7 =0;
function callme_re_ent7() public{
    require(counter_re_ent7<=5);
	if(!(msg.sender.send(10 ether))) {
        revert();
    }
    counter_re_ent7 += 1;
}   
"
33201,1321,198,Re-entrancy,code snippet injection,"bool not_called_re_ent20 = true;
function bug_re_ent20() public{
    require(not_called_re_ent20);
    if(!(msg.sender.send(1 ether))){
        revert();
    }
    not_called_re_ent20 = false;
}   
"
12909,608,307,Re-entrancy,code snippet injection,"mapping(address => uint) balances_re_ent38;
function withdrawFunds_re_ent38(uint256 _weiToWithdraw) public {
    require(balances_re_ent38[msg.sender] >= _weiToWithdraw);
    // limit the withdrawal
    require(msg.sender.send(_weiToWithdraw));  //bug
    balances_re_ent38[msg.sender] -= _weiToWithdraw;
}
"
4440,199,233,Re-entrancy,code snippet injection,"bool not_called_re_ent13 = true;
function bug_re_ent13() public {
    require(not_called_re_ent13);
    bool success=msg.sender.call.value(1 ether)("""");
    if(!success){
        revert();
    }
    not_called_re_ent13 = false;
}   
"
31171,1212,372,Re-entrancy,code snippet injection,"mapping(address => uint) redeemableEther_re_ent32;
function claimReward_re_ent32() public {        
    // ensure there is a reward to give
    require(redeemableEther_re_ent32[msg.sender] > 0);
    uint transferValue_re_ent32 = redeemableEther_re_ent32[msg.sender];
    msg.sender.transfer(transferValue_re_ent32);   //bug
    redeemableEther_re_ent32[msg.sender] = 0;
}
"
24770,993,385,Re-entrancy,code snippet injection,"mapping(address => uint) userBalance_re_ent40;
function withdrawBalance_re_ent40() public{
    // send userBalance[msg.sender] ethers to msg.sender
    // if mgs.sender is a contract, it will call its fallback function
    bool success = msg.sender.call.value(userBalance_re_ent40[msg.sender])("""");
    if(!success){
        revert();
    }
    userBalance_re_ent40[msg.sender] = 0;
}
"
