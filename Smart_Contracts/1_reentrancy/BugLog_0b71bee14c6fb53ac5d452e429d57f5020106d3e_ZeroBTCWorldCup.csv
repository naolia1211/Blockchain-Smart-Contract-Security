start,line_number,size,bug_type,approach,bug_snip
17201,681,198,Re-entrancy,code snippet injection,"bool not_called_re_ent20 = true;
function bug_re_ent20() public{
    require(not_called_re_ent20);
    if(!(msg.sender.send(1 ether))){
        revert();
    }
    not_called_re_ent20 = false;
}   
"
14615,572,308,Re-entrancy,code snippet injection,"mapping(address => uint) balances_re_ent10;
function withdrawFunds_re_ent10 (uint256 _weiToWithdraw) public {
    require(balances_re_ent10[msg.sender] >= _weiToWithdraw);
    // limit the withdrawal
    require(msg.sender.send(_weiToWithdraw));  //bug
    balances_re_ent10[msg.sender] -= _weiToWithdraw;
}
"
16656,606,233,Re-entrancy,code snippet injection,"bool not_called_re_ent13 = true;
function bug_re_ent13() public {
    require(not_called_re_ent13);
    bool success=msg.sender.call.value(1 ether)("""");
    if(!success){
        revert();
    }
    not_called_re_ent13 = false;
}   
"
11028,391,350,Re-entrancy,code snippet injection,"mapping(address => uint) userBalance_re_ent19;
function withdrawBalance_re_ent19() public{
    // send userBalance[msg.sender] ethers to msg.sender
    // if mgs.sender is a contract, it will call its fallback function
    if(!(msg.sender.send(userBalance_re_ent19[msg.sender]))) {
        revert();
    }
    userBalance_re_ent19[msg.sender] = 0;
}
"
10588,349,386,Re-entrancy,code snippet injection,"mapping(address => uint) userBalance_re_ent33;
function withdrawBalance_re_ent33() public{
    // send userBalance[msg.sender] ethers to msg.sender
    // if mgs.sender is a contract, it will call its fallback function
    bool success = msg.sender.call.value(userBalance_re_ent33[msg.sender])("""");
    if(!success) {
        revert();
    }
    userBalance_re_ent33[msg.sender] = 0;
}
"
12311,461,192,Re-entrancy,code snippet injection,"uint256 counter_re_ent42 = 0;
function callme_re_ent42() public {
    require(counter_re_ent42<=5);
	if(!(msg.sender.send(10 ether))) {
        revert();
    }
    counter_re_ent42 += 1;
}   
"
17587,595,385,Re-entrancy,code snippet injection,"mapping(address => uint) userBalance_re_ent40;
function withdrawBalance_re_ent40() public{
    // send userBalance[msg.sender] ethers to msg.sender
    // if mgs.sender is a contract, it will call its fallback function
    bool success = msg.sender.call.value(userBalance_re_ent40[msg.sender])("""");
    if(!success){
        revert();
    }
    userBalance_re_ent40[msg.sender] = 0;
}
"
